{
	"Id": "0bf340a4bc2e9056b1b4371793a1bf7d9fd4426f",
	"active": "true",
	"enabled": "true",
	"code": "python",
	"date": "2024-10-05T18:24:37.599Z",
	"name": "Python",
	"remark": "",
	"__keys": ["name"],
	"__trMap": []
}