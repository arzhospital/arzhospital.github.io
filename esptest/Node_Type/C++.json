{
	"Id": "e821661e54613bce83b3071de5ef2b6abbd0b57a",
	"active": "true",
	"enabled": "true",
	"code": "c++",
	"date": "2024-10-21T14:39:23.908Z",
	"name": "C++",
	"remark": "/********************************************************************************
********************        API Server Stub for C++       ***********************
******************** VERSION: 2024-10-21T14:39:21.639Z  ********************
********************  SYSTEM: apiserver/esptest     ********************
********************************************************************************/



/* Linux runner:
wget -qO- "https://arzhospital.github.io/esptest/Node_Type/C++.json" | jq -r '.remark | @base64d' | g++ -x c++ -


*/


#include <ctime>
#include <string>
#include "bits/stdc++.h"
#include <chrono>
#include "include/json.hpp"
#include "mqtt/async_client.h"
#include "mqtt/topic.h"
#include <regex>
#include "curl/curl.h"

using json = nlohmann::json;


namespace esptest{
	
namespace com{
	
namespace nammour{
	
namespace dcom{
	
    
    class Config_Group{
        public:
            Config_Group(){
            }
        
            ~Config_Group(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Config_Group.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Config_Group& active(bool v);
        
        /************* Config_Group.active GETTERS AND SETTERS **********************/
    
        /************* Config_Group.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Config_Group& enabled(bool v);
        
        /************* Config_Group.enabled GETTERS AND SETTERS **********************/
    
        /************* Config_Group.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Config_Group& code(std::string v);
        
        /************* Config_Group.code GETTERS AND SETTERS **********************/
    
        /************* Config_Group.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Config_Group& order(int v);
        
        /************* Config_Group.order GETTERS AND SETTERS **********************/
    
        /************* Config_Group.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Config_Group& date(time_t v);
        
        /************* Config_Group.date GETTERS AND SETTERS **********************/
    
        /************* Config_Group.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Config_Group& name(std::string v);
        
        /************* Config_Group.name GETTERS AND SETTERS **********************/
    
        /************* Config_Group.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Config_Group& remark(std::string v);
        
            Config_Group& remark(json v);
        
        /************* Config_Group.remark GETTERS AND SETTERS **********************/
    

    
        /************* Config_Group.group_Configs GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _group_Configs;
        
        public:
            std::vector<std::any>&& group_Configs();
            Config_Group& group_Configs(std::vector<std::any>&& v);
        /************* Config_Group.group_Configs GETTERS AND SETTERS **********************/
    
        /************* Config_Group.group_Mappings GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _group_Mappings;
        
        public:
            std::vector<std::any>&& group_Mappings();
            Config_Group& group_Mappings(std::vector<std::any>&& v);
        /************* Config_Group.group_Mappings GETTERS AND SETTERS **********************/
    

        public:
            Config_Group& _unique();
            std::string _toDocument();
            Config_Group& _fromDocument(unsigned char* obj);
            Config_Group& _fromDocument(std::string obj);
            Config_Group& _fromDocument(json obj);
            std::vector<Config_Group>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::dcom::Config_Group& store();
    
        std::vector<esptest::com::nammour::dcom::Config_Group>& findAll();
    
        esptest::com::nammour::dcom::Config_Group& find();
    
    };
    
    class Mapping_Group{
        public:
            Mapping_Group(){
            }
        
            ~Mapping_Group(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Mapping_Group.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Mapping_Group& active(bool v);
        
        /************* Mapping_Group.active GETTERS AND SETTERS **********************/
    
        /************* Mapping_Group.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Mapping_Group& enabled(bool v);
        
        /************* Mapping_Group.enabled GETTERS AND SETTERS **********************/
    
        /************* Mapping_Group.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Mapping_Group& code(std::string v);
        
        /************* Mapping_Group.code GETTERS AND SETTERS **********************/
    
        /************* Mapping_Group.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Mapping_Group& order(int v);
        
        /************* Mapping_Group.order GETTERS AND SETTERS **********************/
    
        /************* Mapping_Group.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Mapping_Group& date(time_t v);
        
        /************* Mapping_Group.date GETTERS AND SETTERS **********************/
    
        /************* Mapping_Group.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Mapping_Group& name(std::string v);
        
        /************* Mapping_Group.name GETTERS AND SETTERS **********************/
    
        /************* Mapping_Group.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Mapping_Group& remark(std::string v);
        
            Mapping_Group& remark(json v);
        
        /************* Mapping_Group.remark GETTERS AND SETTERS **********************/
    

    

        public:
            Mapping_Group& _unique();
            std::string _toDocument();
            Mapping_Group& _fromDocument(unsigned char* obj);
            Mapping_Group& _fromDocument(std::string obj);
            Mapping_Group& _fromDocument(json obj);
            std::vector<Mapping_Group>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::dcom::Mapping_Group& store();
    
        std::vector<esptest::com::nammour::dcom::Mapping_Group>& findAll();
    
        esptest::com::nammour::dcom::Mapping_Group& find();
    
    };
    
    class Tool_Type{
        public:
            Tool_Type(){
            }
        
            ~Tool_Type(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Tool_Type.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Tool_Type& active(bool v);
        
        /************* Tool_Type.active GETTERS AND SETTERS **********************/
    
        /************* Tool_Type.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Tool_Type& enabled(bool v);
        
        /************* Tool_Type.enabled GETTERS AND SETTERS **********************/
    
        /************* Tool_Type.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Tool_Type& code(std::string v);
        
        /************* Tool_Type.code GETTERS AND SETTERS **********************/
    
        /************* Tool_Type.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Tool_Type& order(int v);
        
        /************* Tool_Type.order GETTERS AND SETTERS **********************/
    
        /************* Tool_Type.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Tool_Type& date(time_t v);
        
        /************* Tool_Type.date GETTERS AND SETTERS **********************/
    
        /************* Tool_Type.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Tool_Type& name(std::string v);
        
        /************* Tool_Type.name GETTERS AND SETTERS **********************/
    
        /************* Tool_Type.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Tool_Type& remark(std::string v);
        
            Tool_Type& remark(json v);
        
        /************* Tool_Type.remark GETTERS AND SETTERS **********************/
    

    
        /************* Tool_Type.type_Configs GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _type_Configs;
        
        public:
            std::vector<std::any>&& type_Configs();
            Tool_Type& type_Configs(std::vector<std::any>&& v);
        /************* Tool_Type.type_Configs GETTERS AND SETTERS **********************/
    
        /************* Tool_Type.type_Tools GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _type_Tools;
        
        public:
            std::vector<std::any>&& type_Tools();
            Tool_Type& type_Tools(std::vector<std::any>&& v);
        /************* Tool_Type.type_Tools GETTERS AND SETTERS **********************/
    
        /************* Tool_Type.type_Mappings GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _type_Mappings;
        
        public:
            std::vector<std::any>&& type_Mappings();
            Tool_Type& type_Mappings(std::vector<std::any>&& v);
        /************* Tool_Type.type_Mappings GETTERS AND SETTERS **********************/
    

        public:
            Tool_Type& _unique();
            std::string _toDocument();
            Tool_Type& _fromDocument(unsigned char* obj);
            Tool_Type& _fromDocument(std::string obj);
            Tool_Type& _fromDocument(json obj);
            std::vector<Tool_Type>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::dcom::Tool_Type& store();
    
        std::vector<esptest::com::nammour::dcom::Tool_Type>& findAll();
    
        esptest::com::nammour::dcom::Tool_Type& find();
    
    };
    
    class Node_Context{
        public:
            Node_Context(){
            }
        
            ~Node_Context(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Node_Context.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Node_Context& active(bool v);
        
        /************* Node_Context.active GETTERS AND SETTERS **********************/
    
        /************* Node_Context.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Node_Context& enabled(bool v);
        
        /************* Node_Context.enabled GETTERS AND SETTERS **********************/
    
        /************* Node_Context.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Node_Context& code(std::string v);
        
        /************* Node_Context.code GETTERS AND SETTERS **********************/
    
        /************* Node_Context.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Node_Context& order(int v);
        
        /************* Node_Context.order GETTERS AND SETTERS **********************/
    
        /************* Node_Context.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Node_Context& date(time_t v);
        
        /************* Node_Context.date GETTERS AND SETTERS **********************/
    
        /************* Node_Context.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Node_Context& name(std::string v);
        
        /************* Node_Context.name GETTERS AND SETTERS **********************/
    
        /************* Node_Context.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Node_Context& remark(std::string v);
        
            Node_Context& remark(json v);
        
        /************* Node_Context.remark GETTERS AND SETTERS **********************/
    

    
        /************* Node_Context.context_Nodes GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _context_Nodes;
        
        public:
            std::vector<std::any>&& context_Nodes();
            Node_Context& context_Nodes(std::vector<std::any>&& v);
        /************* Node_Context.context_Nodes GETTERS AND SETTERS **********************/
    

        public:
            Node_Context& _unique();
            std::string _toDocument();
            Node_Context& _fromDocument(unsigned char* obj);
            Node_Context& _fromDocument(std::string obj);
            Node_Context& _fromDocument(json obj);
            std::vector<Node_Context>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::dcom::Node_Context& store();
    
        std::vector<esptest::com::nammour::dcom::Node_Context>& findAll();
    
        esptest::com::nammour::dcom::Node_Context& find();
    
    };
    
    class Node_Group{
        public:
            Node_Group(){
            }
        
            ~Node_Group(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Node_Group.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Node_Group& active(bool v);
        
        /************* Node_Group.active GETTERS AND SETTERS **********************/
    
        /************* Node_Group.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Node_Group& enabled(bool v);
        
        /************* Node_Group.enabled GETTERS AND SETTERS **********************/
    
        /************* Node_Group.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Node_Group& code(std::string v);
        
        /************* Node_Group.code GETTERS AND SETTERS **********************/
    
        /************* Node_Group.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Node_Group& order(int v);
        
        /************* Node_Group.order GETTERS AND SETTERS **********************/
    
        /************* Node_Group.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Node_Group& date(time_t v);
        
        /************* Node_Group.date GETTERS AND SETTERS **********************/
    
        /************* Node_Group.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Node_Group& name(std::string v);
        
        /************* Node_Group.name GETTERS AND SETTERS **********************/
    
        /************* Node_Group.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Node_Group& remark(std::string v);
        
            Node_Group& remark(json v);
        
        /************* Node_Group.remark GETTERS AND SETTERS **********************/
    

    
        /************* Node_Group.group_Nodes GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _group_Nodes;
        
        public:
            std::vector<std::any>&& group_Nodes();
            Node_Group& group_Nodes(std::vector<std::any>&& v);
        /************* Node_Group.group_Nodes GETTERS AND SETTERS **********************/
    

        public:
            Node_Group& _unique();
            std::string _toDocument();
            Node_Group& _fromDocument(unsigned char* obj);
            Node_Group& _fromDocument(std::string obj);
            Node_Group& _fromDocument(json obj);
            std::vector<Node_Group>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::dcom::Node_Group& store();
    
        std::vector<esptest::com::nammour::dcom::Node_Group>& findAll();
    
        esptest::com::nammour::dcom::Node_Group& find();
    
    };
    
    class Node_Type{
        public:
            Node_Type(){
            }
        
            ~Node_Type(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Node_Type.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Node_Type& active(bool v);
        
        /************* Node_Type.active GETTERS AND SETTERS **********************/
    
        /************* Node_Type.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Node_Type& enabled(bool v);
        
        /************* Node_Type.enabled GETTERS AND SETTERS **********************/
    
        /************* Node_Type.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Node_Type& code(std::string v);
        
        /************* Node_Type.code GETTERS AND SETTERS **********************/
    
        /************* Node_Type.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Node_Type& order(int v);
        
        /************* Node_Type.order GETTERS AND SETTERS **********************/
    
        /************* Node_Type.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Node_Type& date(time_t v);
        
        /************* Node_Type.date GETTERS AND SETTERS **********************/
    
        /************* Node_Type.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Node_Type& name(std::string v);
        
        /************* Node_Type.name GETTERS AND SETTERS **********************/
    
        /************* Node_Type.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Node_Type& remark(std::string v);
        
            Node_Type& remark(json v);
        
        /************* Node_Type.remark GETTERS AND SETTERS **********************/
    
        /************* Node_Type.dynamic GETTERS AND SETTERS **********************/
        private:
            bool _dynamic;
            
        public:
            bool dynamic();
            Node_Type& dynamic(bool v);
        
        /************* Node_Type.dynamic GETTERS AND SETTERS **********************/
    

    
        /************* Node_Type.type_Nodes GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _type_Nodes;
        
        public:
            std::vector<std::any>&& type_Nodes();
            Node_Type& type_Nodes(std::vector<std::any>&& v);
        /************* Node_Type.type_Nodes GETTERS AND SETTERS **********************/
    

        public:
            Node_Type& _unique();
            std::string _toDocument();
            Node_Type& _fromDocument(unsigned char* obj);
            Node_Type& _fromDocument(std::string obj);
            Node_Type& _fromDocument(json obj);
            std::vector<Node_Type>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::dcom::Node_Type& store();
    
        std::vector<esptest::com::nammour::dcom::Node_Type>& findAll();
    
        esptest::com::nammour::dcom::Node_Type& find();
    
    };
    
    class Tool{
        public:
            Tool(){
            }
        
            ~Tool(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Tool.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Tool& active(bool v);
        
        /************* Tool.active GETTERS AND SETTERS **********************/
    
        /************* Tool.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Tool& enabled(bool v);
        
        /************* Tool.enabled GETTERS AND SETTERS **********************/
    
        /************* Tool.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Tool& code(std::string v);
        
        /************* Tool.code GETTERS AND SETTERS **********************/
    
        /************* Tool.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Tool& order(int v);
        
        /************* Tool.order GETTERS AND SETTERS **********************/
    
        /************* Tool.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Tool& date(time_t v);
        
        /************* Tool.date GETTERS AND SETTERS **********************/
    
        /************* Tool.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Tool& name(std::string v);
        
        /************* Tool.name GETTERS AND SETTERS **********************/
    
        /************* Tool.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Tool& remark(std::string v);
        
            Tool& remark(json v);
        
        /************* Tool.remark GETTERS AND SETTERS **********************/
    
        /************* Tool.type GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Tool_Type* _type;
            
        public:
            esptest::com::nammour::dcom::Tool_Type* type();
            Tool& type(esptest::com::nammour::dcom::Tool_Type& v);
        
            Tool& type(esptest::com::nammour::dcom::Tool_Type* v);
        
        /************* Tool.type GETTERS AND SETTERS **********************/
    

    
        /************* Tool.tool_Configs GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _tool_Configs;
        
        public:
            std::vector<std::any>&& tool_Configs();
            Tool& tool_Configs(std::vector<std::any>&& v);
        /************* Tool.tool_Configs GETTERS AND SETTERS **********************/
    
        /************* Tool.tool_Mappings GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _tool_Mappings;
        
        public:
            std::vector<std::any>&& tool_Mappings();
            Tool& tool_Mappings(std::vector<std::any>&& v);
        /************* Tool.tool_Mappings GETTERS AND SETTERS **********************/
    

        public:
            Tool& _unique();
            std::string _toDocument();
            Tool& _fromDocument(unsigned char* obj);
            Tool& _fromDocument(std::string obj);
            Tool& _fromDocument(json obj);
            std::vector<Tool>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::dcom::Tool& store();
    
        std::vector<esptest::com::nammour::dcom::Tool>& findAll();
    
        esptest::com::nammour::dcom::Tool& find();
    
    };
    
    class Mapping{
        public:
            Mapping(){
            }
        
            ~Mapping(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Mapping.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Mapping& active(bool v);
        
        /************* Mapping.active GETTERS AND SETTERS **********************/
    
        /************* Mapping.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Mapping& enabled(bool v);
        
        /************* Mapping.enabled GETTERS AND SETTERS **********************/
    
        /************* Mapping.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Mapping& order(int v);
        
        /************* Mapping.order GETTERS AND SETTERS **********************/
    
        /************* Mapping.className GETTERS AND SETTERS **********************/
        private:
            std::string _className;
            
        public:
            std::string className();
            Mapping& className(std::string v);
        
        /************* Mapping.className GETTERS AND SETTERS **********************/
    
        /************* Mapping.scope GETTERS AND SETTERS **********************/
        private:
            std::string _scope;
            
        public:
            std::string scope();
            Mapping& scope(std::string v);
        
        /************* Mapping.scope GETTERS AND SETTERS **********************/
    
        /************* Mapping.context GETTERS AND SETTERS **********************/
        private:
            std::string _context;
            
        public:
            std::string context();
            Mapping& context(std::string v);
        
        /************* Mapping.context GETTERS AND SETTERS **********************/
    
        /************* Mapping.source GETTERS AND SETTERS **********************/
        private:
            std::string _source;
            
        public:
            std::string source();
            Mapping& source(std::string v);
        
        /************* Mapping.source GETTERS AND SETTERS **********************/
    
        /************* Mapping.target GETTERS AND SETTERS **********************/
        private:
            std::string _target;
            
        public:
            std::string target();
            Mapping& target(std::string v);
        
        /************* Mapping.target GETTERS AND SETTERS **********************/
    
        /************* Mapping.inScript GETTERS AND SETTERS **********************/
        private:
            std::string _inScript;
            
        public:
            std::string inScript();
            Mapping& inScript(std::string v);
        
            Mapping& inScript(json v);
        
        /************* Mapping.inScript GETTERS AND SETTERS **********************/
    
        /************* Mapping.outScript GETTERS AND SETTERS **********************/
        private:
            std::string _outScript;
            
        public:
            std::string outScript();
            Mapping& outScript(std::string v);
        
            Mapping& outScript(json v);
        
        /************* Mapping.outScript GETTERS AND SETTERS **********************/
    
        /************* Mapping.tool GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Tool* _tool;
            
        public:
            esptest::com::nammour::dcom::Tool* tool();
            Mapping& tool(esptest::com::nammour::dcom::Tool& v);
        
            Mapping& tool(esptest::com::nammour::dcom::Tool* v);
        
        /************* Mapping.tool GETTERS AND SETTERS **********************/
    
        /************* Mapping.group GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Config_Group* _group;
            
        public:
            esptest::com::nammour::dcom::Config_Group* group();
            Mapping& group(esptest::com::nammour::dcom::Config_Group& v);
        
            Mapping& group(esptest::com::nammour::dcom::Config_Group* v);
        
        /************* Mapping.group GETTERS AND SETTERS **********************/
    
        /************* Mapping.type GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Tool_Type* _type;
            
        public:
            esptest::com::nammour::dcom::Tool_Type* type();
            Mapping& type(esptest::com::nammour::dcom::Tool_Type& v);
        
            Mapping& type(esptest::com::nammour::dcom::Tool_Type* v);
        
        /************* Mapping.type GETTERS AND SETTERS **********************/
    

    

        public:
            Mapping& _unique();
            std::string _toDocument();
            Mapping& _fromDocument(unsigned char* obj);
            Mapping& _fromDocument(std::string obj);
            Mapping& _fromDocument(json obj);
            std::vector<Mapping>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::dcom::Mapping& store();
    
        std::vector<esptest::com::nammour::dcom::Mapping>& findAll();
    
        esptest::com::nammour::dcom::Mapping& find();
    
    };
    
    class Node{
        public:
            Node(){
            }
        
            ~Node(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Node.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Node& active(bool v);
        
        /************* Node.active GETTERS AND SETTERS **********************/
    
        /************* Node.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Node& enabled(bool v);
        
        /************* Node.enabled GETTERS AND SETTERS **********************/
    
        /************* Node.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Node& code(std::string v);
        
        /************* Node.code GETTERS AND SETTERS **********************/
    
        /************* Node.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Node& order(int v);
        
        /************* Node.order GETTERS AND SETTERS **********************/
    
        /************* Node.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Node& date(time_t v);
        
        /************* Node.date GETTERS AND SETTERS **********************/
    
        /************* Node.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Node& name(std::string v);
        
        /************* Node.name GETTERS AND SETTERS **********************/
    
        /************* Node.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Node& remark(std::string v);
        
            Node& remark(json v);
        
        /************* Node.remark GETTERS AND SETTERS **********************/
    
        /************* Node.address GETTERS AND SETTERS **********************/
        private:
            std::string _address;
            
        public:
            std::string address();
            Node& address(std::string v);
        
        /************* Node.address GETTERS AND SETTERS **********************/
    
        /************* Node.backup GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Node* _backup;
            
        public:
            esptest::com::nammour::dcom::Node* backup();
            Node& backup(esptest::com::nammour::dcom::Node& v);
        
            Node& backup(esptest::com::nammour::dcom::Node* v);
        
        /************* Node.backup GETTERS AND SETTERS **********************/
    
        /************* Node.parent GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Node* _parent;
            
        public:
            esptest::com::nammour::dcom::Node* parent();
            Node& parent(esptest::com::nammour::dcom::Node& v);
        
            Node& parent(esptest::com::nammour::dcom::Node* v);
        
        /************* Node.parent GETTERS AND SETTERS **********************/
    
        /************* Node.group GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Node_Group* _group;
            
        public:
            esptest::com::nammour::dcom::Node_Group* group();
            Node& group(esptest::com::nammour::dcom::Node_Group& v);
        
            Node& group(esptest::com::nammour::dcom::Node_Group* v);
        
        /************* Node.group GETTERS AND SETTERS **********************/
    
        /************* Node.context GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Node_Context* _context;
            
        public:
            esptest::com::nammour::dcom::Node_Context* context();
            Node& context(esptest::com::nammour::dcom::Node_Context& v);
        
            Node& context(esptest::com::nammour::dcom::Node_Context* v);
        
        /************* Node.context GETTERS AND SETTERS **********************/
    
        /************* Node.port GETTERS AND SETTERS **********************/
        private:
            int _port;
            
        public:
            int port();
            Node& port(int v);
        
        /************* Node.port GETTERS AND SETTERS **********************/
    
        /************* Node.online GETTERS AND SETTERS **********************/
        private:
            time_t _online;
            
        public:
            time_t online();
            Node& online(time_t v);
        
        /************* Node.online GETTERS AND SETTERS **********************/
    
        /************* Node.secure GETTERS AND SETTERS **********************/
        private:
            bool _secure;
            
        public:
            bool secure();
            Node& secure(bool v);
        
        /************* Node.secure GETTERS AND SETTERS **********************/
    
        /************* Node.type GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Node_Type* _type;
            
        public:
            esptest::com::nammour::dcom::Node_Type* type();
            Node& type(esptest::com::nammour::dcom::Node_Type& v);
        
            Node& type(esptest::com::nammour::dcom::Node_Type* v);
        
        /************* Node.type GETTERS AND SETTERS **********************/
    

    
        /************* Node.controller_Devices GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _controller_Devices;
        
        public:
            std::vector<std::any>&& controller_Devices();
            Node& controller_Devices(std::vector<std::any>&& v);
        /************* Node.controller_Devices GETTERS AND SETTERS **********************/
    
        /************* Node.node_Configs GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _node_Configs;
        
        public:
            std::vector<std::any>&& node_Configs();
            Node& node_Configs(std::vector<std::any>&& v);
        /************* Node.node_Configs GETTERS AND SETTERS **********************/
    
        /************* Node.carrier_Events GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _carrier_Events;
        
        public:
            std::vector<std::any>&& carrier_Events();
            Node& carrier_Events(std::vector<std::any>&& v);
        /************* Node.carrier_Events GETTERS AND SETTERS **********************/
    
        /************* Node.sender_Events GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _sender_Events;
        
        public:
            std::vector<std::any>&& sender_Events();
            Node& sender_Events(std::vector<std::any>&& v);
        /************* Node.sender_Events GETTERS AND SETTERS **********************/
    
        /************* Node.recipient_Events GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _recipient_Events;
        
        public:
            std::vector<std::any>&& recipient_Events();
            Node& recipient_Events(std::vector<std::any>&& v);
        /************* Node.recipient_Events GETTERS AND SETTERS **********************/
    
        /************* Node.backup_Nodes GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _backup_Nodes;
        
        public:
            std::vector<std::any>&& backup_Nodes();
            Node& backup_Nodes(std::vector<std::any>&& v);
        /************* Node.backup_Nodes GETTERS AND SETTERS **********************/
    
        /************* Node.parent_Nodes GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _parent_Nodes;
        
        public:
            std::vector<std::any>&& parent_Nodes();
            Node& parent_Nodes(std::vector<std::any>&& v);
        /************* Node.parent_Nodes GETTERS AND SETTERS **********************/
    

        public:
            Node& _unique();
            std::string _toDocument();
            Node& _fromDocument(unsigned char* obj);
            Node& _fromDocument(std::string obj);
            Node& _fromDocument(json obj);
            std::vector<Node>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::dcom::Node& store();
    
        std::vector<esptest::com::nammour::dcom::Node>& findAll();
    
        esptest::com::nammour::dcom::Node& find();
    
        json authCode(std::string code, esptest::com::nammour::dcom::Tool& tool);
    
        esptest::com::nammour::dcom::Node& init(int online, std::string code, std::string uid);
    
    };
    
    class Config{
        public:
            Config(){
            }
        
            ~Config(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Config.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Config& active(bool v);
        
        /************* Config.active GETTERS AND SETTERS **********************/
    
        /************* Config.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Config& enabled(bool v);
        
        /************* Config.enabled GETTERS AND SETTERS **********************/
    
        /************* Config.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Config& code(std::string v);
        
        /************* Config.code GETTERS AND SETTERS **********************/
    
        /************* Config.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Config& order(int v);
        
        /************* Config.order GETTERS AND SETTERS **********************/
    
        /************* Config.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Config& date(time_t v);
        
        /************* Config.date GETTERS AND SETTERS **********************/
    
        /************* Config.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Config& name(std::string v);
        
        /************* Config.name GETTERS AND SETTERS **********************/
    
        /************* Config.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Config& remark(std::string v);
        
            Config& remark(json v);
        
        /************* Config.remark GETTERS AND SETTERS **********************/
    
        /************* Config.value GETTERS AND SETTERS **********************/
        private:
            std::string _value;
            
        public:
            std::string value();
            Config& value(std::string v);
        
            Config& value(json v);
        
        /************* Config.value GETTERS AND SETTERS **********************/
    
        /************* Config.script GETTERS AND SETTERS **********************/
        private:
            std::string _script;
            
        public:
            std::string script();
            Config& script(std::string v);
        
            Config& script(json v);
        
        /************* Config.script GETTERS AND SETTERS **********************/
    
        /************* Config.tool GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Tool* _tool;
            
        public:
            esptest::com::nammour::dcom::Tool* tool();
            Config& tool(esptest::com::nammour::dcom::Tool& v);
        
            Config& tool(esptest::com::nammour::dcom::Tool* v);
        
        /************* Config.tool GETTERS AND SETTERS **********************/
    
        /************* Config.group GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Config_Group* _group;
            
        public:
            esptest::com::nammour::dcom::Config_Group* group();
            Config& group(esptest::com::nammour::dcom::Config_Group& v);
        
            Config& group(esptest::com::nammour::dcom::Config_Group* v);
        
        /************* Config.group GETTERS AND SETTERS **********************/
    
        /************* Config.type GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Tool_Type* _type;
            
        public:
            esptest::com::nammour::dcom::Tool_Type* type();
            Config& type(esptest::com::nammour::dcom::Tool_Type& v);
        
            Config& type(esptest::com::nammour::dcom::Tool_Type* v);
        
        /************* Config.type GETTERS AND SETTERS **********************/
    
        /************* Config.node GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Node* _node;
            
        public:
            esptest::com::nammour::dcom::Node* node();
            Config& node(esptest::com::nammour::dcom::Node& v);
        
            Config& node(esptest::com::nammour::dcom::Node* v);
        
        /************* Config.node GETTERS AND SETTERS **********************/
    

    

        public:
            Config& _unique();
            std::string _toDocument();
            Config& _fromDocument(unsigned char* obj);
            Config& _fromDocument(std::string obj);
            Config& _fromDocument(json obj);
            std::vector<Config>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::dcom::Config& store();
    
        std::vector<esptest::com::nammour::dcom::Config>& findAll();
    
        esptest::com::nammour::dcom::Config& find();
    
    };
    
    class Event{
        public:
            Event(){
            }
        
            ~Event(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Event.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Event& active(bool v);
        
        /************* Event.active GETTERS AND SETTERS **********************/
    
        /************* Event.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Event& enabled(bool v);
        
        /************* Event.enabled GETTERS AND SETTERS **********************/
    
        /************* Event.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Event& code(std::string v);
        
        /************* Event.code GETTERS AND SETTERS **********************/
    
        /************* Event.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Event& order(int v);
        
        /************* Event.order GETTERS AND SETTERS **********************/
    
        /************* Event.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Event& date(time_t v);
        
        /************* Event.date GETTERS AND SETTERS **********************/
    
        /************* Event.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Event& name(std::string v);
        
        /************* Event.name GETTERS AND SETTERS **********************/
    
        /************* Event.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Event& remark(std::string v);
        
            Event& remark(json v);
        
        /************* Event.remark GETTERS AND SETTERS **********************/
    
        /************* Event.className GETTERS AND SETTERS **********************/
        private:
            std::string _className;
            
        public:
            std::string className();
            Event& className(std::string v);
        
        /************* Event.className GETTERS AND SETTERS **********************/
    
        /************* Event.method GETTERS AND SETTERS **********************/
        private:
            std::string _method;
            
        public:
            std::string method();
            Event& method(std::string v);
        
        /************* Event.method GETTERS AND SETTERS **********************/
    
        /************* Event.payload GETTERS AND SETTERS **********************/
        private:
            std::string _payload;
            
        public:
            std::string payload();
            Event& payload(std::string v);
        
            Event& payload(json v);
        
        /************* Event.payload GETTERS AND SETTERS **********************/
    
        /************* Event.carrier GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Node* _carrier;
            
        public:
            esptest::com::nammour::dcom::Node* carrier();
            Event& carrier(esptest::com::nammour::dcom::Node& v);
        
            Event& carrier(esptest::com::nammour::dcom::Node* v);
        
        /************* Event.carrier GETTERS AND SETTERS **********************/
    
        /************* Event.sender GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Node* _sender;
            
        public:
            esptest::com::nammour::dcom::Node* sender();
            Event& sender(esptest::com::nammour::dcom::Node& v);
        
            Event& sender(esptest::com::nammour::dcom::Node* v);
        
        /************* Event.sender GETTERS AND SETTERS **********************/
    
        /************* Event.recipient GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Node* _recipient;
            
        public:
            esptest::com::nammour::dcom::Node* recipient();
            Event& recipient(esptest::com::nammour::dcom::Node& v);
        
            Event& recipient(esptest::com::nammour::dcom::Node* v);
        
        /************* Event.recipient GETTERS AND SETTERS **********************/
    
        /************* Event.responseTo GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Event* _responseTo;
            
        public:
            esptest::com::nammour::dcom::Event* responseTo();
            Event& responseTo(esptest::com::nammour::dcom::Event& v);
        
            Event& responseTo(esptest::com::nammour::dcom::Event* v);
        
        /************* Event.responseTo GETTERS AND SETTERS **********************/
    

    
        /************* Event.responseTo_Events GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _responseTo_Events;
        
        public:
            std::vector<std::any>&& responseTo_Events();
            Event& responseTo_Events(std::vector<std::any>&& v);
        /************* Event.responseTo_Events GETTERS AND SETTERS **********************/
    

        public:
            Event& _unique();
            std::string _toDocument();
            Event& _fromDocument(unsigned char* obj);
            Event& _fromDocument(std::string obj);
            Event& _fromDocument(json obj);
            std::vector<Event>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::dcom::Event& store();
    
        std::vector<esptest::com::nammour::dcom::Event>& findAll();
    
        esptest::com::nammour::dcom::Event& find();
    
        json listen(esptest::com::nammour::dcom::Node& node);
    
        json trigger();
    
        esptest::com::nammour::dcom::Event& process();
    
    };
    
}
	
}
	
}
	
}
	

namespace esptest{
	
namespace com{
	
namespace nammour{
	
namespace diot{
	
    
    class Device_Category{
        public:
            Device_Category(){
            }
        
            ~Device_Category(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Device_Category.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Device_Category& active(bool v);
        
        /************* Device_Category.active GETTERS AND SETTERS **********************/
    
        /************* Device_Category.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Device_Category& enabled(bool v);
        
        /************* Device_Category.enabled GETTERS AND SETTERS **********************/
    
        /************* Device_Category.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Device_Category& code(std::string v);
        
        /************* Device_Category.code GETTERS AND SETTERS **********************/
    
        /************* Device_Category.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Device_Category& order(int v);
        
        /************* Device_Category.order GETTERS AND SETTERS **********************/
    
        /************* Device_Category.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Device_Category& date(time_t v);
        
        /************* Device_Category.date GETTERS AND SETTERS **********************/
    
        /************* Device_Category.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Device_Category& name(std::string v);
        
        /************* Device_Category.name GETTERS AND SETTERS **********************/
    
        /************* Device_Category.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Device_Category& remark(std::string v);
        
            Device_Category& remark(json v);
        
        /************* Device_Category.remark GETTERS AND SETTERS **********************/
    
        /************* Device_Category.parent GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::diot::Device_Category* _parent;
            
        public:
            esptest::com::nammour::diot::Device_Category* parent();
            Device_Category& parent(esptest::com::nammour::diot::Device_Category& v);
        
            Device_Category& parent(esptest::com::nammour::diot::Device_Category* v);
        
        /************* Device_Category.parent GETTERS AND SETTERS **********************/
    

    
        /************* Device_Category.parent_Device_Categorys GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _parent_Device_Categorys;
        
        public:
            std::vector<std::any>&& parent_Device_Categorys();
            Device_Category& parent_Device_Categorys(std::vector<std::any>&& v);
        /************* Device_Category.parent_Device_Categorys GETTERS AND SETTERS **********************/
    
        /************* Device_Category.category_Device_Types GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _category_Device_Types;
        
        public:
            std::vector<std::any>&& category_Device_Types();
            Device_Category& category_Device_Types(std::vector<std::any>&& v);
        /************* Device_Category.category_Device_Types GETTERS AND SETTERS **********************/
    

        public:
            Device_Category& _unique();
            std::string _toDocument();
            Device_Category& _fromDocument(unsigned char* obj);
            Device_Category& _fromDocument(std::string obj);
            Device_Category& _fromDocument(json obj);
            std::vector<Device_Category>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::diot::Device_Category& store();
    
        std::vector<esptest::com::nammour::diot::Device_Category>& findAll();
    
        esptest::com::nammour::diot::Device_Category& find();
    
    };
    
    class Metric_Group{
        public:
            Metric_Group(){
            }
        
            ~Metric_Group(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Metric_Group.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Metric_Group& active(bool v);
        
        /************* Metric_Group.active GETTERS AND SETTERS **********************/
    
        /************* Metric_Group.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Metric_Group& enabled(bool v);
        
        /************* Metric_Group.enabled GETTERS AND SETTERS **********************/
    
        /************* Metric_Group.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Metric_Group& code(std::string v);
        
        /************* Metric_Group.code GETTERS AND SETTERS **********************/
    
        /************* Metric_Group.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Metric_Group& order(int v);
        
        /************* Metric_Group.order GETTERS AND SETTERS **********************/
    
        /************* Metric_Group.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Metric_Group& date(time_t v);
        
        /************* Metric_Group.date GETTERS AND SETTERS **********************/
    
        /************* Metric_Group.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Metric_Group& name(std::string v);
        
        /************* Metric_Group.name GETTERS AND SETTERS **********************/
    
        /************* Metric_Group.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Metric_Group& remark(std::string v);
        
            Metric_Group& remark(json v);
        
        /************* Metric_Group.remark GETTERS AND SETTERS **********************/
    

    
        /************* Metric_Group.group_Metric_Types GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _group_Metric_Types;
        
        public:
            std::vector<std::any>&& group_Metric_Types();
            Metric_Group& group_Metric_Types(std::vector<std::any>&& v);
        /************* Metric_Group.group_Metric_Types GETTERS AND SETTERS **********************/
    

        public:
            Metric_Group& _unique();
            std::string _toDocument();
            Metric_Group& _fromDocument(unsigned char* obj);
            Metric_Group& _fromDocument(std::string obj);
            Metric_Group& _fromDocument(json obj);
            std::vector<Metric_Group>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::diot::Metric_Group& store();
    
        std::vector<esptest::com::nammour::diot::Metric_Group>& findAll();
    
        esptest::com::nammour::diot::Metric_Group& find();
    
    };
    
    class Device_Type{
        public:
            Device_Type(){
            }
        
            ~Device_Type(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Device_Type.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Device_Type& active(bool v);
        
        /************* Device_Type.active GETTERS AND SETTERS **********************/
    
        /************* Device_Type.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Device_Type& enabled(bool v);
        
        /************* Device_Type.enabled GETTERS AND SETTERS **********************/
    
        /************* Device_Type.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Device_Type& code(std::string v);
        
        /************* Device_Type.code GETTERS AND SETTERS **********************/
    
        /************* Device_Type.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Device_Type& order(int v);
        
        /************* Device_Type.order GETTERS AND SETTERS **********************/
    
        /************* Device_Type.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Device_Type& date(time_t v);
        
        /************* Device_Type.date GETTERS AND SETTERS **********************/
    
        /************* Device_Type.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Device_Type& name(std::string v);
        
        /************* Device_Type.name GETTERS AND SETTERS **********************/
    
        /************* Device_Type.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Device_Type& remark(std::string v);
        
            Device_Type& remark(json v);
        
        /************* Device_Type.remark GETTERS AND SETTERS **********************/
    
        /************* Device_Type.category GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::diot::Device_Category* _category;
            
        public:
            esptest::com::nammour::diot::Device_Category* category();
            Device_Type& category(esptest::com::nammour::diot::Device_Category& v);
        
            Device_Type& category(esptest::com::nammour::diot::Device_Category* v);
        
        /************* Device_Type.category GETTERS AND SETTERS **********************/
    

    
        /************* Device_Type.deviceType_Metrics GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _deviceType_Metrics;
        
        public:
            std::vector<std::any>&& deviceType_Metrics();
            Device_Type& deviceType_Metrics(std::vector<std::any>&& v);
        /************* Device_Type.deviceType_Metrics GETTERS AND SETTERS **********************/
    
        /************* Device_Type.type_Devices GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _type_Devices;
        
        public:
            std::vector<std::any>&& type_Devices();
            Device_Type& type_Devices(std::vector<std::any>&& v);
        /************* Device_Type.type_Devices GETTERS AND SETTERS **********************/
    
        /************* Device_Type.deviceType_Type_Attributes GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _deviceType_Type_Attributes;
        
        public:
            std::vector<std::any>&& deviceType_Type_Attributes();
            Device_Type& deviceType_Type_Attributes(std::vector<std::any>&& v);
        /************* Device_Type.deviceType_Type_Attributes GETTERS AND SETTERS **********************/
    

        public:
            Device_Type& _unique();
            std::string _toDocument();
            Device_Type& _fromDocument(unsigned char* obj);
            Device_Type& _fromDocument(std::string obj);
            Device_Type& _fromDocument(json obj);
            std::vector<Device_Type>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::diot::Device_Type& store();
    
        std::vector<esptest::com::nammour::diot::Device_Type>& findAll();
    
        esptest::com::nammour::diot::Device_Type& find();
    
    };
    
    class Metric_Type{
        public:
            Metric_Type(){
            }
        
            ~Metric_Type(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Metric_Type.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Metric_Type& active(bool v);
        
        /************* Metric_Type.active GETTERS AND SETTERS **********************/
    
        /************* Metric_Type.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Metric_Type& enabled(bool v);
        
        /************* Metric_Type.enabled GETTERS AND SETTERS **********************/
    
        /************* Metric_Type.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Metric_Type& code(std::string v);
        
        /************* Metric_Type.code GETTERS AND SETTERS **********************/
    
        /************* Metric_Type.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Metric_Type& order(int v);
        
        /************* Metric_Type.order GETTERS AND SETTERS **********************/
    
        /************* Metric_Type.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Metric_Type& date(time_t v);
        
        /************* Metric_Type.date GETTERS AND SETTERS **********************/
    
        /************* Metric_Type.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Metric_Type& name(std::string v);
        
        /************* Metric_Type.name GETTERS AND SETTERS **********************/
    
        /************* Metric_Type.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Metric_Type& remark(std::string v);
        
            Metric_Type& remark(json v);
        
        /************* Metric_Type.remark GETTERS AND SETTERS **********************/
    
        /************* Metric_Type.group GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::diot::Metric_Group* _group;
            
        public:
            esptest::com::nammour::diot::Metric_Group* group();
            Metric_Type& group(esptest::com::nammour::diot::Metric_Group& v);
        
            Metric_Type& group(esptest::com::nammour::diot::Metric_Group* v);
        
        /************* Metric_Type.group GETTERS AND SETTERS **********************/
    

    
        /************* Metric_Type.type_Metrics GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _type_Metrics;
        
        public:
            std::vector<std::any>&& type_Metrics();
            Metric_Type& type_Metrics(std::vector<std::any>&& v);
        /************* Metric_Type.type_Metrics GETTERS AND SETTERS **********************/
    

        public:
            Metric_Type& _unique();
            std::string _toDocument();
            Metric_Type& _fromDocument(unsigned char* obj);
            Metric_Type& _fromDocument(std::string obj);
            Metric_Type& _fromDocument(json obj);
            std::vector<Metric_Type>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::diot::Metric_Type& store();
    
        std::vector<esptest::com::nammour::diot::Metric_Type>& findAll();
    
        esptest::com::nammour::diot::Metric_Type& find();
    
    };
    
    class Type_Attribute{
        public:
            Type_Attribute(){
            }
        
            ~Type_Attribute(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Type_Attribute.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Type_Attribute& active(bool v);
        
        /************* Type_Attribute.active GETTERS AND SETTERS **********************/
    
        /************* Type_Attribute.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Type_Attribute& enabled(bool v);
        
        /************* Type_Attribute.enabled GETTERS AND SETTERS **********************/
    
        /************* Type_Attribute.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Type_Attribute& code(std::string v);
        
        /************* Type_Attribute.code GETTERS AND SETTERS **********************/
    
        /************* Type_Attribute.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Type_Attribute& order(int v);
        
        /************* Type_Attribute.order GETTERS AND SETTERS **********************/
    
        /************* Type_Attribute.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Type_Attribute& date(time_t v);
        
        /************* Type_Attribute.date GETTERS AND SETTERS **********************/
    
        /************* Type_Attribute.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Type_Attribute& name(std::string v);
        
        /************* Type_Attribute.name GETTERS AND SETTERS **********************/
    
        /************* Type_Attribute.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Type_Attribute& remark(std::string v);
        
            Type_Attribute& remark(json v);
        
        /************* Type_Attribute.remark GETTERS AND SETTERS **********************/
    
        /************* Type_Attribute.deviceType GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::diot::Device_Type* _deviceType;
            
        public:
            esptest::com::nammour::diot::Device_Type* deviceType();
            Type_Attribute& deviceType(esptest::com::nammour::diot::Device_Type& v);
        
            Type_Attribute& deviceType(esptest::com::nammour::diot::Device_Type* v);
        
        /************* Type_Attribute.deviceType GETTERS AND SETTERS **********************/
    

    
        /************* Type_Attribute.attribute_Device_Attributes GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _attribute_Device_Attributes;
        
        public:
            std::vector<std::any>&& attribute_Device_Attributes();
            Type_Attribute& attribute_Device_Attributes(std::vector<std::any>&& v);
        /************* Type_Attribute.attribute_Device_Attributes GETTERS AND SETTERS **********************/
    

        public:
            Type_Attribute& _unique();
            std::string _toDocument();
            Type_Attribute& _fromDocument(unsigned char* obj);
            Type_Attribute& _fromDocument(std::string obj);
            Type_Attribute& _fromDocument(json obj);
            std::vector<Type_Attribute>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::diot::Type_Attribute& store();
    
        std::vector<esptest::com::nammour::diot::Type_Attribute>& findAll();
    
        esptest::com::nammour::diot::Type_Attribute& find();
    
    };
    
    class Metric{
        public:
            Metric(){
            }
        
            ~Metric(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Metric.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Metric& active(bool v);
        
        /************* Metric.active GETTERS AND SETTERS **********************/
    
        /************* Metric.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Metric& enabled(bool v);
        
        /************* Metric.enabled GETTERS AND SETTERS **********************/
    
        /************* Metric.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Metric& code(std::string v);
        
        /************* Metric.code GETTERS AND SETTERS **********************/
    
        /************* Metric.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Metric& order(int v);
        
        /************* Metric.order GETTERS AND SETTERS **********************/
    
        /************* Metric.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Metric& date(time_t v);
        
        /************* Metric.date GETTERS AND SETTERS **********************/
    
        /************* Metric.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Metric& name(std::string v);
        
        /************* Metric.name GETTERS AND SETTERS **********************/
    
        /************* Metric.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Metric& remark(std::string v);
        
            Metric& remark(json v);
        
        /************* Metric.remark GETTERS AND SETTERS **********************/
    
        /************* Metric.script GETTERS AND SETTERS **********************/
        private:
            std::string _script;
            
        public:
            std::string script();
            Metric& script(std::string v);
        
            Metric& script(json v);
        
        /************* Metric.script GETTERS AND SETTERS **********************/
    
        /************* Metric.type GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::diot::Metric_Type* _type;
            
        public:
            esptest::com::nammour::diot::Metric_Type* type();
            Metric& type(esptest::com::nammour::diot::Metric_Type& v);
        
            Metric& type(esptest::com::nammour::diot::Metric_Type* v);
        
        /************* Metric.type GETTERS AND SETTERS **********************/
    
        /************* Metric.deviceType GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::diot::Device_Type* _deviceType;
            
        public:
            esptest::com::nammour::diot::Device_Type* deviceType();
            Metric& deviceType(esptest::com::nammour::diot::Device_Type& v);
        
            Metric& deviceType(esptest::com::nammour::diot::Device_Type* v);
        
        /************* Metric.deviceType GETTERS AND SETTERS **********************/
    

    
        /************* Metric.metric_Metric_Values GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _metric_Metric_Values;
        
        public:
            std::vector<std::any>&& metric_Metric_Values();
            Metric& metric_Metric_Values(std::vector<std::any>&& v);
        /************* Metric.metric_Metric_Values GETTERS AND SETTERS **********************/
    

        public:
            Metric& _unique();
            std::string _toDocument();
            Metric& _fromDocument(unsigned char* obj);
            Metric& _fromDocument(std::string obj);
            Metric& _fromDocument(json obj);
            std::vector<Metric>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::diot::Metric& store();
    
        std::vector<esptest::com::nammour::diot::Metric>& findAll();
    
        esptest::com::nammour::diot::Metric& find();
    
    };
    
    class Device{
        public:
            Device(){
            }
        
            ~Device(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Device.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Device& active(bool v);
        
        /************* Device.active GETTERS AND SETTERS **********************/
    
        /************* Device.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Device& enabled(bool v);
        
        /************* Device.enabled GETTERS AND SETTERS **********************/
    
        /************* Device.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Device& code(std::string v);
        
        /************* Device.code GETTERS AND SETTERS **********************/
    
        /************* Device.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Device& order(int v);
        
        /************* Device.order GETTERS AND SETTERS **********************/
    
        /************* Device.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Device& date(time_t v);
        
        /************* Device.date GETTERS AND SETTERS **********************/
    
        /************* Device.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Device& name(std::string v);
        
        /************* Device.name GETTERS AND SETTERS **********************/
    
        /************* Device.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Device& remark(std::string v);
        
            Device& remark(json v);
        
        /************* Device.remark GETTERS AND SETTERS **********************/
    
        /************* Device.type GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::diot::Device_Type* _type;
            
        public:
            esptest::com::nammour::diot::Device_Type* type();
            Device& type(esptest::com::nammour::diot::Device_Type& v);
        
            Device& type(esptest::com::nammour::diot::Device_Type* v);
        
        /************* Device.type GETTERS AND SETTERS **********************/
    
        /************* Device.controller GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::dcom::Node* _controller;
            
        public:
            esptest::com::nammour::dcom::Node* controller();
            Device& controller(esptest::com::nammour::dcom::Node& v);
        
            Device& controller(esptest::com::nammour::dcom::Node* v);
        
        /************* Device.controller GETTERS AND SETTERS **********************/
    

    
        /************* Device.device_Metric_Values GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _device_Metric_Values;
        
        public:
            std::vector<std::any>&& device_Metric_Values();
            Device& device_Metric_Values(std::vector<std::any>&& v);
        /************* Device.device_Metric_Values GETTERS AND SETTERS **********************/
    
        /************* Device.device_Device_Attributes GETTERS AND SETTERS **********************/

        private:
            std::vector<std::any>* _device_Device_Attributes;
        
        public:
            std::vector<std::any>&& device_Device_Attributes();
            Device& device_Device_Attributes(std::vector<std::any>&& v);
        /************* Device.device_Device_Attributes GETTERS AND SETTERS **********************/
    

        public:
            Device& _unique();
            std::string _toDocument();
            Device& _fromDocument(unsigned char* obj);
            Device& _fromDocument(std::string obj);
            Device& _fromDocument(json obj);
            std::vector<Device>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::diot::Device& store();
    
        std::vector<esptest::com::nammour::diot::Device>& findAll();
    
        esptest::com::nammour::diot::Device& find();
    
    };
    
    class Device_Attribute{
        public:
            Device_Attribute(){
            }
        
            ~Device_Attribute(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Device_Attribute.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Device_Attribute& active(bool v);
        
        /************* Device_Attribute.active GETTERS AND SETTERS **********************/
    
        /************* Device_Attribute.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Device_Attribute& enabled(bool v);
        
        /************* Device_Attribute.enabled GETTERS AND SETTERS **********************/
    
        /************* Device_Attribute.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Device_Attribute& code(std::string v);
        
        /************* Device_Attribute.code GETTERS AND SETTERS **********************/
    
        /************* Device_Attribute.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Device_Attribute& order(int v);
        
        /************* Device_Attribute.order GETTERS AND SETTERS **********************/
    
        /************* Device_Attribute.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Device_Attribute& date(time_t v);
        
        /************* Device_Attribute.date GETTERS AND SETTERS **********************/
    
        /************* Device_Attribute.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Device_Attribute& name(std::string v);
        
        /************* Device_Attribute.name GETTERS AND SETTERS **********************/
    
        /************* Device_Attribute.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Device_Attribute& remark(std::string v);
        
            Device_Attribute& remark(json v);
        
        /************* Device_Attribute.remark GETTERS AND SETTERS **********************/
    
        /************* Device_Attribute.value GETTERS AND SETTERS **********************/
        private:
            std::string _value;
            
        public:
            std::string value();
            Device_Attribute& value(std::string v);
        
        /************* Device_Attribute.value GETTERS AND SETTERS **********************/
    
        /************* Device_Attribute.device GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::diot::Device* _device;
            
        public:
            esptest::com::nammour::diot::Device* device();
            Device_Attribute& device(esptest::com::nammour::diot::Device& v);
        
            Device_Attribute& device(esptest::com::nammour::diot::Device* v);
        
        /************* Device_Attribute.device GETTERS AND SETTERS **********************/
    
        /************* Device_Attribute.attribute GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::diot::Type_Attribute* _attribute;
            
        public:
            esptest::com::nammour::diot::Type_Attribute* attribute();
            Device_Attribute& attribute(esptest::com::nammour::diot::Type_Attribute& v);
        
            Device_Attribute& attribute(esptest::com::nammour::diot::Type_Attribute* v);
        
        /************* Device_Attribute.attribute GETTERS AND SETTERS **********************/
    

    

        public:
            Device_Attribute& _unique();
            std::string _toDocument();
            Device_Attribute& _fromDocument(unsigned char* obj);
            Device_Attribute& _fromDocument(std::string obj);
            Device_Attribute& _fromDocument(json obj);
            std::vector<Device_Attribute>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::diot::Device_Attribute& store();
    
        std::vector<esptest::com::nammour::diot::Device_Attribute>& findAll();
    
        esptest::com::nammour::diot::Device_Attribute& find();
    
    };
    
    class Metric_Value{
        public:
            Metric_Value(){
            }
        
            ~Metric_Value(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* Metric_Value.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            Metric_Value& active(bool v);
        
        /************* Metric_Value.active GETTERS AND SETTERS **********************/
    
        /************* Metric_Value.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            Metric_Value& enabled(bool v);
        
        /************* Metric_Value.enabled GETTERS AND SETTERS **********************/
    
        /************* Metric_Value.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            Metric_Value& code(std::string v);
        
        /************* Metric_Value.code GETTERS AND SETTERS **********************/
    
        /************* Metric_Value.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            Metric_Value& order(int v);
        
        /************* Metric_Value.order GETTERS AND SETTERS **********************/
    
        /************* Metric_Value.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            Metric_Value& date(time_t v);
        
        /************* Metric_Value.date GETTERS AND SETTERS **********************/
    
        /************* Metric_Value.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            Metric_Value& name(std::string v);
        
        /************* Metric_Value.name GETTERS AND SETTERS **********************/
    
        /************* Metric_Value.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            Metric_Value& remark(std::string v);
        
            Metric_Value& remark(json v);
        
        /************* Metric_Value.remark GETTERS AND SETTERS **********************/
    
        /************* Metric_Value.value GETTERS AND SETTERS **********************/
        private:
            std::string _value;
            
        public:
            std::string value();
            Metric_Value& value(std::string v);
        
        /************* Metric_Value.value GETTERS AND SETTERS **********************/
    
        /************* Metric_Value.measured GETTERS AND SETTERS **********************/
        private:
            time_t _measured;
            
        public:
            time_t measured();
            Metric_Value& measured(time_t v);
        
        /************* Metric_Value.measured GETTERS AND SETTERS **********************/
    
        /************* Metric_Value.metric GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::diot::Metric* _metric;
            
        public:
            esptest::com::nammour::diot::Metric* metric();
            Metric_Value& metric(esptest::com::nammour::diot::Metric& v);
        
            Metric_Value& metric(esptest::com::nammour::diot::Metric* v);
        
        /************* Metric_Value.metric GETTERS AND SETTERS **********************/
    
        /************* Metric_Value.device GETTERS AND SETTERS **********************/
        private:
            esptest::com::nammour::diot::Device* _device;
            
        public:
            esptest::com::nammour::diot::Device* device();
            Metric_Value& device(esptest::com::nammour::diot::Device& v);
        
            Metric_Value& device(esptest::com::nammour::diot::Device* v);
        
        /************* Metric_Value.device GETTERS AND SETTERS **********************/
    

    

        public:
            Metric_Value& _unique();
            std::string _toDocument();
            Metric_Value& _fromDocument(unsigned char* obj);
            Metric_Value& _fromDocument(std::string obj);
            Metric_Value& _fromDocument(json obj);
            std::vector<Metric_Value>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::com::nammour::diot::Metric_Value& store();
    
        std::vector<esptest::com::nammour::diot::Metric_Value>& findAll();
    
        esptest::com::nammour::diot::Metric_Value& find();
    
    };
    
}
	
}
	
}
	
}
	

namespace esptest{
	
    
    class User{
        public:
            User(){
            }
        
            ~User(){
                // for every "new" there must be a "delete"
            }
        
        private:
            unsigned long Id;

    
        /************* User.active GETTERS AND SETTERS **********************/
        private:
            bool _active;
            
        public:
            bool active();
            User& active(bool v);
        
        /************* User.active GETTERS AND SETTERS **********************/
    
        /************* User.enabled GETTERS AND SETTERS **********************/
        private:
            bool _enabled;
            
        public:
            bool enabled();
            User& enabled(bool v);
        
        /************* User.enabled GETTERS AND SETTERS **********************/
    
        /************* User.code GETTERS AND SETTERS **********************/
        private:
            std::string _code;
            
        public:
            std::string code();
            User& code(std::string v);
        
        /************* User.code GETTERS AND SETTERS **********************/
    
        /************* User.order GETTERS AND SETTERS **********************/
        private:
            int _order;
            
        public:
            int order();
            User& order(int v);
        
        /************* User.order GETTERS AND SETTERS **********************/
    
        /************* User.date GETTERS AND SETTERS **********************/
        private:
            time_t _date;
            
        public:
            time_t date();
            User& date(time_t v);
        
        /************* User.date GETTERS AND SETTERS **********************/
    
        /************* User.name GETTERS AND SETTERS **********************/
        private:
            std::string _name;
            
        public:
            std::string name();
            User& name(std::string v);
        
        /************* User.name GETTERS AND SETTERS **********************/
    
        /************* User.remark GETTERS AND SETTERS **********************/
        private:
            std::string _remark;
            
        public:
            std::string remark();
            User& remark(std::string v);
        
            User& remark(json v);
        
        /************* User.remark GETTERS AND SETTERS **********************/
    
        /************* User.username GETTERS AND SETTERS **********************/
        private:
            std::string _username;
            
        public:
            std::string username();
            User& username(std::string v);
        
        /************* User.username GETTERS AND SETTERS **********************/
    
        /************* User.password GETTERS AND SETTERS **********************/
        private:
            std::string _password;
            
        public:
            std::string password();
            User& password(std::string v);
        
        /************* User.password GETTERS AND SETTERS **********************/
    

    

        public:
            User& _unique();
            std::string _toDocument();
            User& _fromDocument(unsigned char* obj);
            User& _fromDocument(std::string obj);
            User& _fromDocument(json obj);
            std::vector<User>&& _fromDocument(std::vector<json>&& obj);
    
        esptest::User& store();
    
        std::vector<esptest::User>& findAll();
    
        esptest::User& find();
    
        json init();
    
    };
    
}
	

/************* Header File END **********************/


static esptest::com::nammour::dcom::Node& thisNode = (new esptest::com::nammour::dcom::Node())->code("abc").active(true).enabled(true);


    

esptest::User& esptest::User::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::User::active(){
    return this->_active;
}
    

esptest::User& esptest::User::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::User::enabled(){
    return this->_enabled;
}
    

esptest::User& esptest::User::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::User::code(){
    return this->_code;
}
    

esptest::User& esptest::User::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::User::order(){
    return this->_order;
}
    

esptest::User& esptest::User::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::User::date(){
    return this->_date;
}
    

esptest::User& esptest::User::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::User::name(){
    return this->_name;
}
    

esptest::User& esptest::User::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::User& esptest::User::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::User::remark(){
    return this->_remark;
}
    

esptest::User& esptest::User::username(std::string v){
    this->_username = v;
    return *this;
}
    

std::string esptest::User::username(){
    return this->_username;
}
    

esptest::User& esptest::User::password(std::string v){
    this->_password = v;
    return *this;
}
    

std::string esptest::User::password(){
    return this->_password;
}
    

    


esptest::User& esptest::User::_unique(){
    std::string __toString = "User::_unique(): ";

    User* ret = new User();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    
        
    if(this->username().empty())
        
        ret->username(this->username());
    

    return *this;
}

esptest::User& esptest::User::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::User& esptest::User::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::User>&& esptest::User::_fromDocument(std::vector<json>&& obj){
    std::vector<User>* ret = new std::vector<User>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new User())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::User& esptest::User::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("username")) this->username(
        
        obj["username"].template get<std::string>()
        
        );
    
    if(obj.contains("password")) this->password(
        
        obj["password"].template get<std::string>()
        
        );
    
    
    
    return *this;
}

std::string esptest::User::_toDocument(){
    return "";
}

    
esptest::User& esptest::User::store(){
    std::string __toString = "User::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].User.store()").method("store").className("User").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::User* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::User>& esptest::User::findAll(){
    std::string __toString = "User::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].User.findAll()").method("findAll").className("User").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::User>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::User& esptest::User::find(){
    std::string __toString = "User::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].User.find()").method("find").className("User").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::User* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
json esptest::User::init(){
    std::string __toString = "User::init(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].User.init()").method("init").className("User").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    json answer;

    

    
    if(answer!=nullptr){
    

    
        //__response.payload((std::string)answer);
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return answer;
}
    

    

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Metric::active(){
    return this->_active;
}
    

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Metric::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric::code(){
    return this->_code;
}
    

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::diot::Metric::order(){
    return this->_order;
}
    

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::diot::Metric::date(){
    return this->_date;
}
    

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric::name(){
    return this->_name;
}
    

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric::remark(){
    return this->_remark;
}
    

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::script(std::string v){
    this->_script = v;
    return *this;
}
    
esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::script(json v){
    //this->_script
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric::script(){
    return this->_script;
}
    

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::type(esptest::com::nammour::diot::Metric_Type& v){
    this->_type = &v;
    return *this;
}
    
esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::type(esptest::com::nammour::diot::Metric_Type* v){
    if(v!=nullptr){
        this->_type = v;
    }
    return *this;
}
    

esptest::com::nammour::diot::Metric_Type* esptest::com::nammour::diot::Metric::type(){
    return this->_type;
}
    

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::deviceType(esptest::com::nammour::diot::Device_Type& v){
    this->_deviceType = &v;
    return *this;
}
    
esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::deviceType(esptest::com::nammour::diot::Device_Type* v){
    if(v!=nullptr){
        this->_deviceType = v;
    }
    return *this;
}
    

esptest::com::nammour::diot::Device_Type* esptest::com::nammour::diot::Metric::deviceType(){
    return this->_deviceType;
}
    

    
std::vector<std::any>&& esptest::com::nammour::diot::Metric::metric_Metric_Values(){
    return move(*(this->_metric_Metric_Values));
}

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::metric_Metric_Values(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::_unique(){
    std::string __toString = "Metric::_unique(): ";

    Metric* ret = new Metric();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    

    return *this;
}

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::diot::Metric>&& esptest::com::nammour::diot::Metric::_fromDocument(std::vector<json>&& obj){
    std::vector<Metric>* ret = new std::vector<Metric>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Metric())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("script")) this->script(
        
        obj["script"].template get<std::string>()
        
        );
    
    if(obj.contains("type")) this->type(
        
        (new esptest::com::nammour::diot::Metric_Type())->_fromDocument(obj["type"])
        
        );
    
    if(obj.contains("deviceType")) this->deviceType(
        
        (new esptest::com::nammour::diot::Device_Type())->_fromDocument(obj["deviceType"])
        
        );
    
    
    
    if(obj.contains("metric_Metric_Values")) this->metric_Metric_Values((new Metric_Value())->_fromDocument((std::vector<json>)obj["metric_Metric_Values"]));
    
    return *this;
}

std::string esptest::com::nammour::diot::Metric::_toDocument(){
    return "";
}

    
esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::store(){
    std::string __toString = "Metric::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Metric.store()").method("store").className("Metric").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Metric* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::diot::Metric>& esptest::com::nammour::diot::Metric::findAll(){
    std::string __toString = "Metric::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Metric.findAll()").method("findAll").className("Metric").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::diot::Metric>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::diot::Metric& esptest::com::nammour::diot::Metric::find(){
    std::string __toString = "Metric::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Metric.find()").method("find").className("Metric").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Metric* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Metric_Value::active(){
    return this->_active;
}
    

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Metric_Value::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric_Value::code(){
    return this->_code;
}
    

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::diot::Metric_Value::order(){
    return this->_order;
}
    

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::diot::Metric_Value::date(){
    return this->_date;
}
    

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric_Value::name(){
    return this->_name;
}
    

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric_Value::remark(){
    return this->_remark;
}
    

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::value(std::string v){
    this->_value = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric_Value::value(){
    return this->_value;
}
    

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::measured(time_t v){
    this->_measured = v;
    return *this;
}
    

time_t esptest::com::nammour::diot::Metric_Value::measured(){
    return this->_measured;
}
    

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::metric(esptest::com::nammour::diot::Metric& v){
    this->_metric = &v;
    return *this;
}
    
esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::metric(esptest::com::nammour::diot::Metric* v){
    if(v!=nullptr){
        this->_metric = v;
    }
    return *this;
}
    

esptest::com::nammour::diot::Metric* esptest::com::nammour::diot::Metric_Value::metric(){
    return this->_metric;
}
    

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::device(esptest::com::nammour::diot::Device& v){
    this->_device = &v;
    return *this;
}
    
esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::device(esptest::com::nammour::diot::Device* v){
    if(v!=nullptr){
        this->_device = v;
    }
    return *this;
}
    

esptest::com::nammour::diot::Device* esptest::com::nammour::diot::Metric_Value::device(){
    return this->_device;
}
    

    


esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::_unique(){
    std::string __toString = "Metric_Value::_unique(): ";

    Metric_Value* ret = new Metric_Value();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->metric()!=nullptr)
        
        ret->metric(this->metric()->_unique());
    
        
    if(this->device()!=nullptr)
        
        ret->device(this->device()->_unique());
    

    return *this;
}

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::diot::Metric_Value>&& esptest::com::nammour::diot::Metric_Value::_fromDocument(std::vector<json>&& obj){
    std::vector<Metric_Value>* ret = new std::vector<Metric_Value>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Metric_Value())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("value")) this->value(
        
        obj["value"].template get<std::string>()
        
        );
    
    if(obj.contains("measured")) this->measured(
        
        obj["measured"].template get<time_t>()
        
        );
    
    if(obj.contains("metric")) this->metric(
        
        (new esptest::com::nammour::diot::Metric())->_fromDocument(obj["metric"])
        
        );
    
    if(obj.contains("device")) this->device(
        
        (new esptest::com::nammour::diot::Device())->_fromDocument(obj["device"])
        
        );
    
    
    
    return *this;
}

std::string esptest::com::nammour::diot::Metric_Value::_toDocument(){
    return "";
}

    
esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::store(){
    std::string __toString = "Metric_Value::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Metric_Value.store()").method("store").className("Metric_Value").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Metric_Value* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::diot::Metric_Value>& esptest::com::nammour::diot::Metric_Value::findAll(){
    std::string __toString = "Metric_Value::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Metric_Value.findAll()").method("findAll").className("Metric_Value").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::diot::Metric_Value>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::diot::Metric_Value& esptest::com::nammour::diot::Metric_Value::find(){
    std::string __toString = "Metric_Value::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Metric_Value.find()").method("find").className("Metric_Value").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Metric_Value* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Device::active(){
    return this->_active;
}
    

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Device::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Device::code(){
    return this->_code;
}
    

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::diot::Device::order(){
    return this->_order;
}
    

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::diot::Device::date(){
    return this->_date;
}
    

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Device::name(){
    return this->_name;
}
    

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::diot::Device::remark(){
    return this->_remark;
}
    

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::type(esptest::com::nammour::diot::Device_Type& v){
    this->_type = &v;
    return *this;
}
    
esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::type(esptest::com::nammour::diot::Device_Type* v){
    if(v!=nullptr){
        this->_type = v;
    }
    return *this;
}
    

esptest::com::nammour::diot::Device_Type* esptest::com::nammour::diot::Device::type(){
    return this->_type;
}
    

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::controller(esptest::com::nammour::dcom::Node& v){
    this->_controller = &v;
    return *this;
}
    
esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::controller(esptest::com::nammour::dcom::Node* v){
    if(v!=nullptr){
        this->_controller = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Node* esptest::com::nammour::diot::Device::controller(){
    return this->_controller;
}
    

    
std::vector<std::any>&& esptest::com::nammour::diot::Device::device_Metric_Values(){
    return move(*(this->_device_Metric_Values));
}

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::device_Metric_Values(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::diot::Device::device_Device_Attributes(){
    return move(*(this->_device_Device_Attributes));
}

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::device_Device_Attributes(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::_unique(){
    std::string __toString = "Device::_unique(): ";

    Device* ret = new Device();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    

    return *this;
}

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::diot::Device>&& esptest::com::nammour::diot::Device::_fromDocument(std::vector<json>&& obj){
    std::vector<Device>* ret = new std::vector<Device>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Device())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("type")) this->type(
        
        (new esptest::com::nammour::diot::Device_Type())->_fromDocument(obj["type"])
        
        );
    
    if(obj.contains("controller")) this->controller(
        
        (new esptest::com::nammour::dcom::Node())->_fromDocument(obj["controller"])
        
        );
    
    
    
    if(obj.contains("device_Metric_Values")) this->device_Metric_Values((new Metric_Value())->_fromDocument((std::vector<json>)obj["device_Metric_Values"]));
    
    if(obj.contains("device_Device_Attributes")) this->device_Device_Attributes((new Device_Attribute())->_fromDocument((std::vector<json>)obj["device_Device_Attributes"]));
    
    return *this;
}

std::string esptest::com::nammour::diot::Device::_toDocument(){
    return "";
}

    
esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::store(){
    std::string __toString = "Device::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Device.store()").method("store").className("Device").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Device* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::diot::Device>& esptest::com::nammour::diot::Device::findAll(){
    std::string __toString = "Device::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Device.findAll()").method("findAll").className("Device").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::diot::Device>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::diot::Device& esptest::com::nammour::diot::Device::find(){
    std::string __toString = "Device::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Device.find()").method("find").className("Device").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Device* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Device_Attribute::active(){
    return this->_active;
}
    

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Device_Attribute::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Device_Attribute::code(){
    return this->_code;
}
    

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::diot::Device_Attribute::order(){
    return this->_order;
}
    

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::diot::Device_Attribute::date(){
    return this->_date;
}
    

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Device_Attribute::name(){
    return this->_name;
}
    

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::diot::Device_Attribute::remark(){
    return this->_remark;
}
    

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::value(std::string v){
    this->_value = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Device_Attribute::value(){
    return this->_value;
}
    

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::device(esptest::com::nammour::diot::Device& v){
    this->_device = &v;
    return *this;
}
    
esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::device(esptest::com::nammour::diot::Device* v){
    if(v!=nullptr){
        this->_device = v;
    }
    return *this;
}
    

esptest::com::nammour::diot::Device* esptest::com::nammour::diot::Device_Attribute::device(){
    return this->_device;
}
    

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::attribute(esptest::com::nammour::diot::Type_Attribute& v){
    this->_attribute = &v;
    return *this;
}
    
esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::attribute(esptest::com::nammour::diot::Type_Attribute* v){
    if(v!=nullptr){
        this->_attribute = v;
    }
    return *this;
}
    

esptest::com::nammour::diot::Type_Attribute* esptest::com::nammour::diot::Device_Attribute::attribute(){
    return this->_attribute;
}
    

    


esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::_unique(){
    std::string __toString = "Device_Attribute::_unique(): ";

    Device_Attribute* ret = new Device_Attribute();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->device()!=nullptr)
        
        ret->device(this->device()->_unique());
    
        
    if(this->attribute()!=nullptr)
        
        ret->attribute(this->attribute()->_unique());
    

    return *this;
}

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::diot::Device_Attribute>&& esptest::com::nammour::diot::Device_Attribute::_fromDocument(std::vector<json>&& obj){
    std::vector<Device_Attribute>* ret = new std::vector<Device_Attribute>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Device_Attribute())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("value")) this->value(
        
        obj["value"].template get<std::string>()
        
        );
    
    if(obj.contains("device")) this->device(
        
        (new esptest::com::nammour::diot::Device())->_fromDocument(obj["device"])
        
        );
    
    if(obj.contains("attribute")) this->attribute(
        
        (new esptest::com::nammour::diot::Type_Attribute())->_fromDocument(obj["attribute"])
        
        );
    
    
    
    return *this;
}

std::string esptest::com::nammour::diot::Device_Attribute::_toDocument(){
    return "";
}

    
esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::store(){
    std::string __toString = "Device_Attribute::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Device_Attribute.store()").method("store").className("Device_Attribute").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Device_Attribute* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::diot::Device_Attribute>& esptest::com::nammour::diot::Device_Attribute::findAll(){
    std::string __toString = "Device_Attribute::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Device_Attribute.findAll()").method("findAll").className("Device_Attribute").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::diot::Device_Attribute>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::diot::Device_Attribute& esptest::com::nammour::diot::Device_Attribute::find(){
    std::string __toString = "Device_Attribute::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Device_Attribute.find()").method("find").className("Device_Attribute").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Device_Attribute* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Type_Attribute::active(){
    return this->_active;
}
    

esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Type_Attribute::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Type_Attribute::code(){
    return this->_code;
}
    

esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::diot::Type_Attribute::order(){
    return this->_order;
}
    

esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::diot::Type_Attribute::date(){
    return this->_date;
}
    

esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Type_Attribute::name(){
    return this->_name;
}
    

esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::diot::Type_Attribute::remark(){
    return this->_remark;
}
    

esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::deviceType(esptest::com::nammour::diot::Device_Type& v){
    this->_deviceType = &v;
    return *this;
}
    
esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::deviceType(esptest::com::nammour::diot::Device_Type* v){
    if(v!=nullptr){
        this->_deviceType = v;
    }
    return *this;
}
    

esptest::com::nammour::diot::Device_Type* esptest::com::nammour::diot::Type_Attribute::deviceType(){
    return this->_deviceType;
}
    

    
std::vector<std::any>&& esptest::com::nammour::diot::Type_Attribute::attribute_Device_Attributes(){
    return move(*(this->_attribute_Device_Attributes));
}

esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::attribute_Device_Attributes(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::_unique(){
    std::string __toString = "Type_Attribute::_unique(): ";

    Type_Attribute* ret = new Type_Attribute();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    
        
    if(this->deviceType()!=nullptr)
        
        ret->deviceType(this->deviceType()->_unique());
    

    return *this;
}

esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::diot::Type_Attribute>&& esptest::com::nammour::diot::Type_Attribute::_fromDocument(std::vector<json>&& obj){
    std::vector<Type_Attribute>* ret = new std::vector<Type_Attribute>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Type_Attribute())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("deviceType")) this->deviceType(
        
        (new esptest::com::nammour::diot::Device_Type())->_fromDocument(obj["deviceType"])
        
        );
    
    
    
    if(obj.contains("attribute_Device_Attributes")) this->attribute_Device_Attributes((new Device_Attribute())->_fromDocument((std::vector<json>)obj["attribute_Device_Attributes"]));
    
    return *this;
}

std::string esptest::com::nammour::diot::Type_Attribute::_toDocument(){
    return "";
}

    
esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::store(){
    std::string __toString = "Type_Attribute::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Type_Attribute.store()").method("store").className("Type_Attribute").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Type_Attribute* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::diot::Type_Attribute>& esptest::com::nammour::diot::Type_Attribute::findAll(){
    std::string __toString = "Type_Attribute::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Type_Attribute.findAll()").method("findAll").className("Type_Attribute").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::diot::Type_Attribute>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::diot::Type_Attribute& esptest::com::nammour::diot::Type_Attribute::find(){
    std::string __toString = "Type_Attribute::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Type_Attribute.find()").method("find").className("Type_Attribute").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Type_Attribute* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Device_Category::active(){
    return this->_active;
}
    

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Device_Category::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Device_Category::code(){
    return this->_code;
}
    

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::diot::Device_Category::order(){
    return this->_order;
}
    

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::diot::Device_Category::date(){
    return this->_date;
}
    

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Device_Category::name(){
    return this->_name;
}
    

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::diot::Device_Category::remark(){
    return this->_remark;
}
    

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::parent(esptest::com::nammour::diot::Device_Category& v){
    this->_parent = &v;
    return *this;
}
    
esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::parent(esptest::com::nammour::diot::Device_Category* v){
    if(v!=nullptr){
        this->_parent = v;
    }
    return *this;
}
    

esptest::com::nammour::diot::Device_Category* esptest::com::nammour::diot::Device_Category::parent(){
    return this->_parent;
}
    

    
std::vector<std::any>&& esptest::com::nammour::diot::Device_Category::parent_Device_Categorys(){
    return move(*(this->_parent_Device_Categorys));
}

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::parent_Device_Categorys(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::diot::Device_Category::category_Device_Types(){
    return move(*(this->_category_Device_Types));
}

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::category_Device_Types(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::_unique(){
    std::string __toString = "Device_Category::_unique(): ";

    Device_Category* ret = new Device_Category();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    

    return *this;
}

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::diot::Device_Category>&& esptest::com::nammour::diot::Device_Category::_fromDocument(std::vector<json>&& obj){
    std::vector<Device_Category>* ret = new std::vector<Device_Category>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Device_Category())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("parent")) this->parent(
        
        (new esptest::com::nammour::diot::Device_Category())->_fromDocument(obj["parent"])
        
        );
    
    
    
    if(obj.contains("parent_Device_Categorys")) this->parent_Device_Categorys((new Device_Category())->_fromDocument((std::vector<json>)obj["parent_Device_Categorys"]));
    
    if(obj.contains("category_Device_Types")) this->category_Device_Types((new Device_Type())->_fromDocument((std::vector<json>)obj["category_Device_Types"]));
    
    return *this;
}

std::string esptest::com::nammour::diot::Device_Category::_toDocument(){
    return "";
}

    
esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::store(){
    std::string __toString = "Device_Category::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Device_Category.store()").method("store").className("Device_Category").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Device_Category* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::diot::Device_Category>& esptest::com::nammour::diot::Device_Category::findAll(){
    std::string __toString = "Device_Category::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Device_Category.findAll()").method("findAll").className("Device_Category").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::diot::Device_Category>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::diot::Device_Category& esptest::com::nammour::diot::Device_Category::find(){
    std::string __toString = "Device_Category::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Device_Category.find()").method("find").className("Device_Category").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Device_Category* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Device_Type::active(){
    return this->_active;
}
    

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Device_Type::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Device_Type::code(){
    return this->_code;
}
    

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::diot::Device_Type::order(){
    return this->_order;
}
    

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::diot::Device_Type::date(){
    return this->_date;
}
    

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Device_Type::name(){
    return this->_name;
}
    

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::diot::Device_Type::remark(){
    return this->_remark;
}
    

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::category(esptest::com::nammour::diot::Device_Category& v){
    this->_category = &v;
    return *this;
}
    
esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::category(esptest::com::nammour::diot::Device_Category* v){
    if(v!=nullptr){
        this->_category = v;
    }
    return *this;
}
    

esptest::com::nammour::diot::Device_Category* esptest::com::nammour::diot::Device_Type::category(){
    return this->_category;
}
    

    
std::vector<std::any>&& esptest::com::nammour::diot::Device_Type::deviceType_Metrics(){
    return move(*(this->_deviceType_Metrics));
}

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::deviceType_Metrics(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::diot::Device_Type::type_Devices(){
    return move(*(this->_type_Devices));
}

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::type_Devices(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::diot::Device_Type::deviceType_Type_Attributes(){
    return move(*(this->_deviceType_Type_Attributes));
}

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::deviceType_Type_Attributes(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::_unique(){
    std::string __toString = "Device_Type::_unique(): ";

    Device_Type* ret = new Device_Type();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    

    return *this;
}

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::diot::Device_Type>&& esptest::com::nammour::diot::Device_Type::_fromDocument(std::vector<json>&& obj){
    std::vector<Device_Type>* ret = new std::vector<Device_Type>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Device_Type())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("category")) this->category(
        
        (new esptest::com::nammour::diot::Device_Category())->_fromDocument(obj["category"])
        
        );
    
    
    
    if(obj.contains("deviceType_Metrics")) this->deviceType_Metrics((new Metric())->_fromDocument((std::vector<json>)obj["deviceType_Metrics"]));
    
    if(obj.contains("type_Devices")) this->type_Devices((new Device())->_fromDocument((std::vector<json>)obj["type_Devices"]));
    
    if(obj.contains("deviceType_Type_Attributes")) this->deviceType_Type_Attributes((new Type_Attribute())->_fromDocument((std::vector<json>)obj["deviceType_Type_Attributes"]));
    
    return *this;
}

std::string esptest::com::nammour::diot::Device_Type::_toDocument(){
    return "";
}

    
esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::store(){
    std::string __toString = "Device_Type::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Device_Type.store()").method("store").className("Device_Type").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Device_Type* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::diot::Device_Type>& esptest::com::nammour::diot::Device_Type::findAll(){
    std::string __toString = "Device_Type::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Device_Type.findAll()").method("findAll").className("Device_Type").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::diot::Device_Type>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::diot::Device_Type& esptest::com::nammour::diot::Device_Type::find(){
    std::string __toString = "Device_Type::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Device_Type.find()").method("find").className("Device_Type").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Device_Type* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Metric_Group::active(){
    return this->_active;
}
    

esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Metric_Group::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric_Group::code(){
    return this->_code;
}
    

esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::diot::Metric_Group::order(){
    return this->_order;
}
    

esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::diot::Metric_Group::date(){
    return this->_date;
}
    

esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric_Group::name(){
    return this->_name;
}
    

esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric_Group::remark(){
    return this->_remark;
}
    

    
std::vector<std::any>&& esptest::com::nammour::diot::Metric_Group::group_Metric_Types(){
    return move(*(this->_group_Metric_Types));
}

esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::group_Metric_Types(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::_unique(){
    std::string __toString = "Metric_Group::_unique(): ";

    Metric_Group* ret = new Metric_Group();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    

    return *this;
}

esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::diot::Metric_Group>&& esptest::com::nammour::diot::Metric_Group::_fromDocument(std::vector<json>&& obj){
    std::vector<Metric_Group>* ret = new std::vector<Metric_Group>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Metric_Group())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    
    
    if(obj.contains("group_Metric_Types")) this->group_Metric_Types((new Metric_Type())->_fromDocument((std::vector<json>)obj["group_Metric_Types"]));
    
    return *this;
}

std::string esptest::com::nammour::diot::Metric_Group::_toDocument(){
    return "";
}

    
esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::store(){
    std::string __toString = "Metric_Group::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Metric_Group.store()").method("store").className("Metric_Group").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Metric_Group* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::diot::Metric_Group>& esptest::com::nammour::diot::Metric_Group::findAll(){
    std::string __toString = "Metric_Group::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Metric_Group.findAll()").method("findAll").className("Metric_Group").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::diot::Metric_Group>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::diot::Metric_Group& esptest::com::nammour::diot::Metric_Group::find(){
    std::string __toString = "Metric_Group::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Metric_Group.find()").method("find").className("Metric_Group").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Metric_Group* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Metric_Type::active(){
    return this->_active;
}
    

esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::diot::Metric_Type::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric_Type::code(){
    return this->_code;
}
    

esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::diot::Metric_Type::order(){
    return this->_order;
}
    

esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::diot::Metric_Type::date(){
    return this->_date;
}
    

esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric_Type::name(){
    return this->_name;
}
    

esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::diot::Metric_Type::remark(){
    return this->_remark;
}
    

esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::group(esptest::com::nammour::diot::Metric_Group& v){
    this->_group = &v;
    return *this;
}
    
esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::group(esptest::com::nammour::diot::Metric_Group* v){
    if(v!=nullptr){
        this->_group = v;
    }
    return *this;
}
    

esptest::com::nammour::diot::Metric_Group* esptest::com::nammour::diot::Metric_Type::group(){
    return this->_group;
}
    

    
std::vector<std::any>&& esptest::com::nammour::diot::Metric_Type::type_Metrics(){
    return move(*(this->_type_Metrics));
}

esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::type_Metrics(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::_unique(){
    std::string __toString = "Metric_Type::_unique(): ";

    Metric_Type* ret = new Metric_Type();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    

    return *this;
}

esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::diot::Metric_Type>&& esptest::com::nammour::diot::Metric_Type::_fromDocument(std::vector<json>&& obj){
    std::vector<Metric_Type>* ret = new std::vector<Metric_Type>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Metric_Type())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("group")) this->group(
        
        (new esptest::com::nammour::diot::Metric_Group())->_fromDocument(obj["group"])
        
        );
    
    
    
    if(obj.contains("type_Metrics")) this->type_Metrics((new Metric())->_fromDocument((std::vector<json>)obj["type_Metrics"]));
    
    return *this;
}

std::string esptest::com::nammour::diot::Metric_Type::_toDocument(){
    return "";
}

    
esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::store(){
    std::string __toString = "Metric_Type::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Metric_Type.store()").method("store").className("Metric_Type").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Metric_Type* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::diot::Metric_Type>& esptest::com::nammour::diot::Metric_Type::findAll(){
    std::string __toString = "Metric_Type::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Metric_Type.findAll()").method("findAll").className("Metric_Type").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::diot::Metric_Type>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::diot::Metric_Type& esptest::com::nammour::diot::Metric_Type::find(){
    std::string __toString = "Metric_Type::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Metric_Type.find()").method("find").className("Metric_Type").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::diot::Metric_Type* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Config::active(){
    return this->_active;
}
    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Config::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Config::code(){
    return this->_code;
}
    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::dcom::Config::order(){
    return this->_order;
}
    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::dcom::Config::date(){
    return this->_date;
}
    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Config::name(){
    return this->_name;
}
    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::dcom::Config::remark(){
    return this->_remark;
}
    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::value(std::string v){
    this->_value = v;
    return *this;
}
    
esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::value(json v){
    //this->_value
    return *this;
}
    

std::string esptest::com::nammour::dcom::Config::value(){
    return this->_value;
}
    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::script(std::string v){
    this->_script = v;
    return *this;
}
    
esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::script(json v){
    //this->_script
    return *this;
}
    

std::string esptest::com::nammour::dcom::Config::script(){
    return this->_script;
}
    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::tool(esptest::com::nammour::dcom::Tool& v){
    this->_tool = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::tool(esptest::com::nammour::dcom::Tool* v){
    if(v!=nullptr){
        this->_tool = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Tool* esptest::com::nammour::dcom::Config::tool(){
    return this->_tool;
}
    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::group(esptest::com::nammour::dcom::Config_Group& v){
    this->_group = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::group(esptest::com::nammour::dcom::Config_Group* v){
    if(v!=nullptr){
        this->_group = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Config_Group* esptest::com::nammour::dcom::Config::group(){
    return this->_group;
}
    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::type(esptest::com::nammour::dcom::Tool_Type& v){
    this->_type = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::type(esptest::com::nammour::dcom::Tool_Type* v){
    if(v!=nullptr){
        this->_type = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Tool_Type* esptest::com::nammour::dcom::Config::type(){
    return this->_type;
}
    

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::node(esptest::com::nammour::dcom::Node& v){
    this->_node = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::node(esptest::com::nammour::dcom::Node* v){
    if(v!=nullptr){
        this->_node = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Node* esptest::com::nammour::dcom::Config::node(){
    return this->_node;
}
    

    


esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::_unique(){
    std::string __toString = "Config::_unique(): ";

    Config* ret = new Config();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->name().empty())
        
        ret->name(this->name());
    

    return *this;
}

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::dcom::Config>&& esptest::com::nammour::dcom::Config::_fromDocument(std::vector<json>&& obj){
    std::vector<Config>* ret = new std::vector<Config>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Config())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("value")) this->value(
        
        obj["value"].template get<std::string>()
        
        );
    
    if(obj.contains("script")) this->script(
        
        obj["script"].template get<std::string>()
        
        );
    
    if(obj.contains("tool")) this->tool(
        
        (new esptest::com::nammour::dcom::Tool())->_fromDocument(obj["tool"])
        
        );
    
    if(obj.contains("group")) this->group(
        
        (new esptest::com::nammour::dcom::Config_Group())->_fromDocument(obj["group"])
        
        );
    
    if(obj.contains("type")) this->type(
        
        (new esptest::com::nammour::dcom::Tool_Type())->_fromDocument(obj["type"])
        
        );
    
    if(obj.contains("node")) this->node(
        
        (new esptest::com::nammour::dcom::Node())->_fromDocument(obj["node"])
        
        );
    
    
    
    return *this;
}

std::string esptest::com::nammour::dcom::Config::_toDocument(){
    return "";
}

    
esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::store(){
    std::string __toString = "Config::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Config.store()").method("store").className("Config").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Config* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::dcom::Config>& esptest::com::nammour::dcom::Config::findAll(){
    std::string __toString = "Config::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Config.findAll()").method("findAll").className("Config").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::dcom::Config>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::dcom::Config& esptest::com::nammour::dcom::Config::find(){
    std::string __toString = "Config::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Config.find()").method("find").className("Config").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Config* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Tool::active(){
    return this->_active;
}
    

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Tool::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Tool::code(){
    return this->_code;
}
    

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::dcom::Tool::order(){
    return this->_order;
}
    

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::dcom::Tool::date(){
    return this->_date;
}
    

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Tool::name(){
    return this->_name;
}
    

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::dcom::Tool::remark(){
    return this->_remark;
}
    

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::type(esptest::com::nammour::dcom::Tool_Type& v){
    this->_type = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::type(esptest::com::nammour::dcom::Tool_Type* v){
    if(v!=nullptr){
        this->_type = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Tool_Type* esptest::com::nammour::dcom::Tool::type(){
    return this->_type;
}
    

    
std::vector<std::any>&& esptest::com::nammour::dcom::Tool::tool_Configs(){
    return move(*(this->_tool_Configs));
}

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::tool_Configs(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::dcom::Tool::tool_Mappings(){
    return move(*(this->_tool_Mappings));
}

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::tool_Mappings(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::_unique(){
    std::string __toString = "Tool::_unique(): ";

    Tool* ret = new Tool();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->name().empty())
        
        ret->name(this->name());
    

    return *this;
}

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::dcom::Tool>&& esptest::com::nammour::dcom::Tool::_fromDocument(std::vector<json>&& obj){
    std::vector<Tool>* ret = new std::vector<Tool>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Tool())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("type")) this->type(
        
        (new esptest::com::nammour::dcom::Tool_Type())->_fromDocument(obj["type"])
        
        );
    
    
    
    if(obj.contains("tool_Configs")) this->tool_Configs((new Config())->_fromDocument((std::vector<json>)obj["tool_Configs"]));
    
    if(obj.contains("tool_Mappings")) this->tool_Mappings((new Mapping())->_fromDocument((std::vector<json>)obj["tool_Mappings"]));
    
    return *this;
}

std::string esptest::com::nammour::dcom::Tool::_toDocument(){
    return "";
}

    
esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::store(){
    std::string __toString = "Tool::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Tool.store()").method("store").className("Tool").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Tool* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::dcom::Tool>& esptest::com::nammour::dcom::Tool::findAll(){
    std::string __toString = "Tool::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Tool.findAll()").method("findAll").className("Tool").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::dcom::Tool>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::dcom::Tool& esptest::com::nammour::dcom::Tool::find(){
    std::string __toString = "Tool::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Tool.find()").method("find").className("Tool").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Tool* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Config_Group::active(){
    return this->_active;
}
    

esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Config_Group::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Config_Group::code(){
    return this->_code;
}
    

esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::dcom::Config_Group::order(){
    return this->_order;
}
    

esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::dcom::Config_Group::date(){
    return this->_date;
}
    

esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Config_Group::name(){
    return this->_name;
}
    

esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::dcom::Config_Group::remark(){
    return this->_remark;
}
    

    
std::vector<std::any>&& esptest::com::nammour::dcom::Config_Group::group_Configs(){
    return move(*(this->_group_Configs));
}

esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::group_Configs(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::dcom::Config_Group::group_Mappings(){
    return move(*(this->_group_Mappings));
}

esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::group_Mappings(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::_unique(){
    std::string __toString = "Config_Group::_unique(): ";

    Config_Group* ret = new Config_Group();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    

    return *this;
}

esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::dcom::Config_Group>&& esptest::com::nammour::dcom::Config_Group::_fromDocument(std::vector<json>&& obj){
    std::vector<Config_Group>* ret = new std::vector<Config_Group>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Config_Group())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    
    
    if(obj.contains("group_Configs")) this->group_Configs((new Config())->_fromDocument((std::vector<json>)obj["group_Configs"]));
    
    if(obj.contains("group_Mappings")) this->group_Mappings((new Mapping())->_fromDocument((std::vector<json>)obj["group_Mappings"]));
    
    return *this;
}

std::string esptest::com::nammour::dcom::Config_Group::_toDocument(){
    return "";
}

    
esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::store(){
    std::string __toString = "Config_Group::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Config_Group.store()").method("store").className("Config_Group").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Config_Group* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::dcom::Config_Group>& esptest::com::nammour::dcom::Config_Group::findAll(){
    std::string __toString = "Config_Group::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Config_Group.findAll()").method("findAll").className("Config_Group").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::dcom::Config_Group>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::dcom::Config_Group& esptest::com::nammour::dcom::Config_Group::find(){
    std::string __toString = "Config_Group::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Config_Group.find()").method("find").className("Config_Group").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Config_Group* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Mapping_Group::active(){
    return this->_active;
}
    

esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Mapping_Group::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Mapping_Group::code(){
    return this->_code;
}
    

esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::dcom::Mapping_Group::order(){
    return this->_order;
}
    

esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::dcom::Mapping_Group::date(){
    return this->_date;
}
    

esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Mapping_Group::name(){
    return this->_name;
}
    

esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::dcom::Mapping_Group::remark(){
    return this->_remark;
}
    

    


esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::_unique(){
    std::string __toString = "Mapping_Group::_unique(): ";

    Mapping_Group* ret = new Mapping_Group();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    

    return *this;
}

esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::dcom::Mapping_Group>&& esptest::com::nammour::dcom::Mapping_Group::_fromDocument(std::vector<json>&& obj){
    std::vector<Mapping_Group>* ret = new std::vector<Mapping_Group>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Mapping_Group())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    
    
    return *this;
}

std::string esptest::com::nammour::dcom::Mapping_Group::_toDocument(){
    return "";
}

    
esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::store(){
    std::string __toString = "Mapping_Group::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Mapping_Group.store()").method("store").className("Mapping_Group").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Mapping_Group* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::dcom::Mapping_Group>& esptest::com::nammour::dcom::Mapping_Group::findAll(){
    std::string __toString = "Mapping_Group::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Mapping_Group.findAll()").method("findAll").className("Mapping_Group").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::dcom::Mapping_Group>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::dcom::Mapping_Group& esptest::com::nammour::dcom::Mapping_Group::find(){
    std::string __toString = "Mapping_Group::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Mapping_Group.find()").method("find").className("Mapping_Group").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Mapping_Group* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Tool_Type::active(){
    return this->_active;
}
    

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Tool_Type::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Tool_Type::code(){
    return this->_code;
}
    

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::dcom::Tool_Type::order(){
    return this->_order;
}
    

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::dcom::Tool_Type::date(){
    return this->_date;
}
    

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Tool_Type::name(){
    return this->_name;
}
    

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::dcom::Tool_Type::remark(){
    return this->_remark;
}
    

    
std::vector<std::any>&& esptest::com::nammour::dcom::Tool_Type::type_Configs(){
    return move(*(this->_type_Configs));
}

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::type_Configs(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::dcom::Tool_Type::type_Tools(){
    return move(*(this->_type_Tools));
}

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::type_Tools(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::dcom::Tool_Type::type_Mappings(){
    return move(*(this->_type_Mappings));
}

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::type_Mappings(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::_unique(){
    std::string __toString = "Tool_Type::_unique(): ";

    Tool_Type* ret = new Tool_Type();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->name().empty())
        
        ret->name(this->name());
    

    return *this;
}

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::dcom::Tool_Type>&& esptest::com::nammour::dcom::Tool_Type::_fromDocument(std::vector<json>&& obj){
    std::vector<Tool_Type>* ret = new std::vector<Tool_Type>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Tool_Type())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    
    
    if(obj.contains("type_Configs")) this->type_Configs((new Config())->_fromDocument((std::vector<json>)obj["type_Configs"]));
    
    if(obj.contains("type_Tools")) this->type_Tools((new Tool())->_fromDocument((std::vector<json>)obj["type_Tools"]));
    
    if(obj.contains("type_Mappings")) this->type_Mappings((new Mapping())->_fromDocument((std::vector<json>)obj["type_Mappings"]));
    
    return *this;
}

std::string esptest::com::nammour::dcom::Tool_Type::_toDocument(){
    return "";
}

    
esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::store(){
    std::string __toString = "Tool_Type::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Tool_Type.store()").method("store").className("Tool_Type").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Tool_Type* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::dcom::Tool_Type>& esptest::com::nammour::dcom::Tool_Type::findAll(){
    std::string __toString = "Tool_Type::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Tool_Type.findAll()").method("findAll").className("Tool_Type").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::dcom::Tool_Type>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::dcom::Tool_Type& esptest::com::nammour::dcom::Tool_Type::find(){
    std::string __toString = "Tool_Type::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Tool_Type.find()").method("find").className("Tool_Type").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Tool_Type* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Event::active(){
    return this->_active;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Event::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Event::code(){
    return this->_code;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::dcom::Event::order(){
    return this->_order;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::dcom::Event::date(){
    return this->_date;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Event::name(){
    return this->_name;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::dcom::Event::remark(){
    return this->_remark;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::className(std::string v){
    this->_className = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Event::className(){
    return this->_className;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::method(std::string v){
    this->_method = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Event::method(){
    return this->_method;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::payload(std::string v){
    this->_payload = v;
    return *this;
}
    
esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::payload(json v){
    //this->_payload
    return *this;
}
    

std::string esptest::com::nammour::dcom::Event::payload(){
    return this->_payload;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::carrier(esptest::com::nammour::dcom::Node& v){
    this->_carrier = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::carrier(esptest::com::nammour::dcom::Node* v){
    if(v!=nullptr){
        this->_carrier = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Node* esptest::com::nammour::dcom::Event::carrier(){
    return this->_carrier;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::sender(esptest::com::nammour::dcom::Node& v){
    this->_sender = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::sender(esptest::com::nammour::dcom::Node* v){
    if(v!=nullptr){
        this->_sender = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Node* esptest::com::nammour::dcom::Event::sender(){
    return this->_sender;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::recipient(esptest::com::nammour::dcom::Node& v){
    this->_recipient = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::recipient(esptest::com::nammour::dcom::Node* v){
    if(v!=nullptr){
        this->_recipient = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Node* esptest::com::nammour::dcom::Event::recipient(){
    return this->_recipient;
}
    

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::responseTo(esptest::com::nammour::dcom::Event& v){
    this->_responseTo = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::responseTo(esptest::com::nammour::dcom::Event* v){
    if(v!=nullptr){
        this->_responseTo = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Event* esptest::com::nammour::dcom::Event::responseTo(){
    return this->_responseTo;
}
    

    
std::vector<std::any>&& esptest::com::nammour::dcom::Event::responseTo_Events(){
    return move(*(this->_responseTo_Events));
}

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::responseTo_Events(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::_unique(){
    std::string __toString = "Event::_unique(): ";

    Event* ret = new Event();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    

    return *this;
}

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::dcom::Event>&& esptest::com::nammour::dcom::Event::_fromDocument(std::vector<json>&& obj){
    std::vector<Event>* ret = new std::vector<Event>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Event())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("className")) this->className(
        
        obj["className"].template get<std::string>()
        
        );
    
    if(obj.contains("method")) this->method(
        
        obj["method"].template get<std::string>()
        
        );
    
    if(obj.contains("payload")) this->payload(
        
        obj["payload"].template get<std::string>()
        
        );
    
    if(obj.contains("carrier")) this->carrier(
        
        (new esptest::com::nammour::dcom::Node())->_fromDocument(obj["carrier"])
        
        );
    
    if(obj.contains("sender")) this->sender(
        
        (new esptest::com::nammour::dcom::Node())->_fromDocument(obj["sender"])
        
        );
    
    if(obj.contains("recipient")) this->recipient(
        
        (new esptest::com::nammour::dcom::Node())->_fromDocument(obj["recipient"])
        
        );
    
    if(obj.contains("responseTo")) this->responseTo(
        
        (new esptest::com::nammour::dcom::Event())->_fromDocument(obj["responseTo"])
        
        );
    
    
    
    if(obj.contains("responseTo_Events")) this->responseTo_Events((new Event())->_fromDocument((std::vector<json>)obj["responseTo_Events"]));
    
    return *this;
}

std::string esptest::com::nammour::dcom::Event::_toDocument(){
    return "";
}

    
esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::store(){
    std::string __toString = "Event::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Event.store()").method("store").className("Event").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Event* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::dcom::Event>& esptest::com::nammour::dcom::Event::findAll(){
    std::string __toString = "Event::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Event.findAll()").method("findAll").className("Event").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::dcom::Event>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::find(){
    std::string __toString = "Event::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Event.find()").method("find").className("Event").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Event* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
json esptest::com::nammour::dcom::Event::listen(esptest::com::nammour::dcom::Node& node){
    std::string __toString = "Event::listen(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Event.listen()").method("listen").className("Event").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    json answer;

    

    
    if(answer!=nullptr){
    

    
        //__response.payload((std::string)answer);
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return answer;
}
    
json esptest::com::nammour::dcom::Event::trigger(){
    std::string __toString = "Event::trigger(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Event.trigger()").method("trigger").className("Event").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    json answer;

    

    
    if(answer!=nullptr){
    

    
        //__response.payload((std::string)answer);
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return answer;
}
    
esptest::com::nammour::dcom::Event& esptest::com::nammour::dcom::Event::process(){
    std::string __toString = "Event::process(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Event.process()").method("process").className("Event").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Event* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Node::active(){
    return this->_active;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Node::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node::code(){
    return this->_code;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::dcom::Node::order(){
    return this->_order;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::dcom::Node::date(){
    return this->_date;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node::name(){
    return this->_name;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node::remark(){
    return this->_remark;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::address(std::string v){
    this->_address = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node::address(){
    return this->_address;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::backup(esptest::com::nammour::dcom::Node& v){
    this->_backup = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::backup(esptest::com::nammour::dcom::Node* v){
    if(v!=nullptr){
        this->_backup = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Node* esptest::com::nammour::dcom::Node::backup(){
    return this->_backup;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::parent(esptest::com::nammour::dcom::Node& v){
    this->_parent = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::parent(esptest::com::nammour::dcom::Node* v){
    if(v!=nullptr){
        this->_parent = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Node* esptest::com::nammour::dcom::Node::parent(){
    return this->_parent;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::group(esptest::com::nammour::dcom::Node_Group& v){
    this->_group = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::group(esptest::com::nammour::dcom::Node_Group* v){
    if(v!=nullptr){
        this->_group = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Node_Group* esptest::com::nammour::dcom::Node::group(){
    return this->_group;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::context(esptest::com::nammour::dcom::Node_Context& v){
    this->_context = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::context(esptest::com::nammour::dcom::Node_Context* v){
    if(v!=nullptr){
        this->_context = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Node_Context* esptest::com::nammour::dcom::Node::context(){
    return this->_context;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::port(int v){
    this->_port = v;
    return *this;
}
    

int esptest::com::nammour::dcom::Node::port(){
    return this->_port;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::online(time_t v){
    this->_online = v;
    return *this;
}
    

time_t esptest::com::nammour::dcom::Node::online(){
    return this->_online;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::secure(bool v){
    this->_secure = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Node::secure(){
    return this->_secure;
}
    

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::type(esptest::com::nammour::dcom::Node_Type& v){
    this->_type = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::type(esptest::com::nammour::dcom::Node_Type* v){
    if(v!=nullptr){
        this->_type = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Node_Type* esptest::com::nammour::dcom::Node::type(){
    return this->_type;
}
    

    
std::vector<std::any>&& esptest::com::nammour::dcom::Node::controller_Devices(){
    return move(*(this->_controller_Devices));
}

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::controller_Devices(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::dcom::Node::node_Configs(){
    return move(*(this->_node_Configs));
}

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::node_Configs(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::dcom::Node::carrier_Events(){
    return move(*(this->_carrier_Events));
}

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::carrier_Events(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::dcom::Node::sender_Events(){
    return move(*(this->_sender_Events));
}

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::sender_Events(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::dcom::Node::recipient_Events(){
    return move(*(this->_recipient_Events));
}

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::recipient_Events(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::dcom::Node::backup_Nodes(){
    return move(*(this->_backup_Nodes));
}

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::backup_Nodes(std::vector<std::any>&& v){
    return *this;
}
    
std::vector<std::any>&& esptest::com::nammour::dcom::Node::parent_Nodes(){
    return move(*(this->_parent_Nodes));
}

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::parent_Nodes(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::_unique(){
    std::string __toString = "Node::_unique(): ";

    Node* ret = new Node();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    

    return *this;
}

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::dcom::Node>&& esptest::com::nammour::dcom::Node::_fromDocument(std::vector<json>&& obj){
    std::vector<Node>* ret = new std::vector<Node>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Node())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("address")) this->address(
        
        obj["address"].template get<std::string>()
        
        );
    
    if(obj.contains("backup")) this->backup(
        
        (new esptest::com::nammour::dcom::Node())->_fromDocument(obj["backup"])
        
        );
    
    if(obj.contains("parent")) this->parent(
        
        (new esptest::com::nammour::dcom::Node())->_fromDocument(obj["parent"])
        
        );
    
    if(obj.contains("group")) this->group(
        
        (new esptest::com::nammour::dcom::Node_Group())->_fromDocument(obj["group"])
        
        );
    
    if(obj.contains("context")) this->context(
        
        (new esptest::com::nammour::dcom::Node_Context())->_fromDocument(obj["context"])
        
        );
    
    if(obj.contains("port")) this->port(
        
        obj["port"].template get<int>()
        
        );
    
    if(obj.contains("online")) this->online(
        
        obj["online"].template get<time_t>()
        
        );
    
    if(obj.contains("secure")) this->secure(
        
        obj["secure"].template get<bool>()
        
        );
    
    if(obj.contains("type")) this->type(
        
        (new esptest::com::nammour::dcom::Node_Type())->_fromDocument(obj["type"])
        
        );
    
    
    
    if(obj.contains("controller_Devices")) this->controller_Devices((new Device())->_fromDocument((std::vector<json>)obj["controller_Devices"]));
    
    if(obj.contains("node_Configs")) this->node_Configs((new Config())->_fromDocument((std::vector<json>)obj["node_Configs"]));
    
    if(obj.contains("carrier_Events")) this->carrier_Events((new Event())->_fromDocument((std::vector<json>)obj["carrier_Events"]));
    
    if(obj.contains("sender_Events")) this->sender_Events((new Event())->_fromDocument((std::vector<json>)obj["sender_Events"]));
    
    if(obj.contains("recipient_Events")) this->recipient_Events((new Event())->_fromDocument((std::vector<json>)obj["recipient_Events"]));
    
    if(obj.contains("backup_Nodes")) this->backup_Nodes((new Node())->_fromDocument((std::vector<json>)obj["backup_Nodes"]));
    
    if(obj.contains("parent_Nodes")) this->parent_Nodes((new Node())->_fromDocument((std::vector<json>)obj["parent_Nodes"]));
    
    return *this;
}

std::string esptest::com::nammour::dcom::Node::_toDocument(){
    return "";
}

    
esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::store(){
    std::string __toString = "Node::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node.store()").method("store").className("Node").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Node* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::dcom::Node>& esptest::com::nammour::dcom::Node::findAll(){
    std::string __toString = "Node::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node.findAll()").method("findAll").className("Node").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::dcom::Node>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::find(){
    std::string __toString = "Node::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node.find()").method("find").className("Node").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Node* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
json esptest::com::nammour::dcom::Node::authCode(std::string code, esptest::com::nammour::dcom::Tool& tool){
    std::string __toString = "Node::authCode(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node.authCode()").method("authCode").className("Node").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    json answer;

    

    
    if(answer!=nullptr){
    

    
        //__response.payload((std::string)answer);
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return answer;
}
    
esptest::com::nammour::dcom::Node& esptest::com::nammour::dcom::Node::init(int online, std::string code, std::string uid){
    std::string __toString = "Node::init(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node.init()").method("init").className("Node").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Node* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Node_Context::active(){
    return this->_active;
}
    

esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Node_Context::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node_Context::code(){
    return this->_code;
}
    

esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::dcom::Node_Context::order(){
    return this->_order;
}
    

esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::dcom::Node_Context::date(){
    return this->_date;
}
    

esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node_Context::name(){
    return this->_name;
}
    

esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node_Context::remark(){
    return this->_remark;
}
    

    
std::vector<std::any>&& esptest::com::nammour::dcom::Node_Context::context_Nodes(){
    return move(*(this->_context_Nodes));
}

esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::context_Nodes(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::_unique(){
    std::string __toString = "Node_Context::_unique(): ";

    Node_Context* ret = new Node_Context();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->code().empty())
        
        ret->code(this->code());
    

    return *this;
}

esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::dcom::Node_Context>&& esptest::com::nammour::dcom::Node_Context::_fromDocument(std::vector<json>&& obj){
    std::vector<Node_Context>* ret = new std::vector<Node_Context>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Node_Context())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    
    
    if(obj.contains("context_Nodes")) this->context_Nodes((new Node())->_fromDocument((std::vector<json>)obj["context_Nodes"]));
    
    return *this;
}

std::string esptest::com::nammour::dcom::Node_Context::_toDocument(){
    return "";
}

    
esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::store(){
    std::string __toString = "Node_Context::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node_Context.store()").method("store").className("Node_Context").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Node_Context* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::dcom::Node_Context>& esptest::com::nammour::dcom::Node_Context::findAll(){
    std::string __toString = "Node_Context::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node_Context.findAll()").method("findAll").className("Node_Context").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::dcom::Node_Context>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::dcom::Node_Context& esptest::com::nammour::dcom::Node_Context::find(){
    std::string __toString = "Node_Context::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node_Context.find()").method("find").className("Node_Context").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Node_Context* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Node_Group::active(){
    return this->_active;
}
    

esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Node_Group::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node_Group::code(){
    return this->_code;
}
    

esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::dcom::Node_Group::order(){
    return this->_order;
}
    

esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::dcom::Node_Group::date(){
    return this->_date;
}
    

esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node_Group::name(){
    return this->_name;
}
    

esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node_Group::remark(){
    return this->_remark;
}
    

    
std::vector<std::any>&& esptest::com::nammour::dcom::Node_Group::group_Nodes(){
    return move(*(this->_group_Nodes));
}

esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::group_Nodes(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::_unique(){
    std::string __toString = "Node_Group::_unique(): ";

    Node_Group* ret = new Node_Group();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->name().empty())
        
        ret->name(this->name());
    

    return *this;
}

esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::dcom::Node_Group>&& esptest::com::nammour::dcom::Node_Group::_fromDocument(std::vector<json>&& obj){
    std::vector<Node_Group>* ret = new std::vector<Node_Group>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Node_Group())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    
    
    if(obj.contains("group_Nodes")) this->group_Nodes((new Node())->_fromDocument((std::vector<json>)obj["group_Nodes"]));
    
    return *this;
}

std::string esptest::com::nammour::dcom::Node_Group::_toDocument(){
    return "";
}

    
esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::store(){
    std::string __toString = "Node_Group::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node_Group.store()").method("store").className("Node_Group").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Node_Group* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::dcom::Node_Group>& esptest::com::nammour::dcom::Node_Group::findAll(){
    std::string __toString = "Node_Group::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node_Group.findAll()").method("findAll").className("Node_Group").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::dcom::Node_Group>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::dcom::Node_Group& esptest::com::nammour::dcom::Node_Group::find(){
    std::string __toString = "Node_Group::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node_Group.find()").method("find").className("Node_Group").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Node_Group* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Node_Type::active(){
    return this->_active;
}
    

esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Node_Type::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::code(std::string v){
    this->_code = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node_Type::code(){
    return this->_code;
}
    

esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::dcom::Node_Type::order(){
    return this->_order;
}
    

esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::date(time_t v){
    this->_date = v;
    return *this;
}
    

time_t esptest::com::nammour::dcom::Node_Type::date(){
    return this->_date;
}
    

esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::name(std::string v){
    this->_name = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node_Type::name(){
    return this->_name;
}
    

esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::remark(std::string v){
    this->_remark = v;
    return *this;
}
    
esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::remark(json v){
    //this->_remark
    return *this;
}
    

std::string esptest::com::nammour::dcom::Node_Type::remark(){
    return this->_remark;
}
    

esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::dynamic(bool v){
    this->_dynamic = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Node_Type::dynamic(){
    return this->_dynamic;
}
    

    
std::vector<std::any>&& esptest::com::nammour::dcom::Node_Type::type_Nodes(){
    return move(*(this->_type_Nodes));
}

esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::type_Nodes(std::vector<std::any>&& v){
    return *this;
}
    


esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::_unique(){
    std::string __toString = "Node_Type::_unique(): ";

    Node_Type* ret = new Node_Type();
    if(this->Id!=0) ret->Id = this->Id;
    
        
    if(this->name().empty())
        
        ret->name(this->name());
    

    return *this;
}

esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::dcom::Node_Type>&& esptest::com::nammour::dcom::Node_Type::_fromDocument(std::vector<json>&& obj){
    std::vector<Node_Type>* ret = new std::vector<Node_Type>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Node_Type())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("code")) this->code(
        
        obj["code"].template get<std::string>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("date")) this->date(
        
        obj["date"].template get<time_t>()
        
        );
    
    if(obj.contains("name")) this->name(
        
        obj["name"].template get<std::string>()
        
        );
    
    if(obj.contains("remark")) this->remark(
        
        obj["remark"].template get<std::string>()
        
        );
    
    if(obj.contains("dynamic")) this->dynamic(
        
        obj["dynamic"].template get<bool>()
        
        );
    
    
    
    if(obj.contains("type_Nodes")) this->type_Nodes((new Node())->_fromDocument((std::vector<json>)obj["type_Nodes"]));
    
    return *this;
}

std::string esptest::com::nammour::dcom::Node_Type::_toDocument(){
    return "";
}

    
esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::store(){
    std::string __toString = "Node_Type::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node_Type.store()").method("store").className("Node_Type").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Node_Type* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::dcom::Node_Type>& esptest::com::nammour::dcom::Node_Type::findAll(){
    std::string __toString = "Node_Type::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node_Type.findAll()").method("findAll").className("Node_Type").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::dcom::Node_Type>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::dcom::Node_Type& esptest::com::nammour::dcom::Node_Type::find(){
    std::string __toString = "Node_Type::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Node_Type.find()").method("find").className("Node_Type").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Node_Type* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    

    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::active(bool v){
    this->_active = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Mapping::active(){
    return this->_active;
}
    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::enabled(bool v){
    this->_enabled = v;
    return *this;
}
    

bool esptest::com::nammour::dcom::Mapping::enabled(){
    return this->_enabled;
}
    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::order(int v){
    this->_order = v;
    return *this;
}
    

int esptest::com::nammour::dcom::Mapping::order(){
    return this->_order;
}
    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::className(std::string v){
    this->_className = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Mapping::className(){
    return this->_className;
}
    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::scope(std::string v){
    this->_scope = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Mapping::scope(){
    return this->_scope;
}
    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::context(std::string v){
    this->_context = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Mapping::context(){
    return this->_context;
}
    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::source(std::string v){
    this->_source = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Mapping::source(){
    return this->_source;
}
    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::target(std::string v){
    this->_target = v;
    return *this;
}
    

std::string esptest::com::nammour::dcom::Mapping::target(){
    return this->_target;
}
    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::inScript(std::string v){
    this->_inScript = v;
    return *this;
}
    
esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::inScript(json v){
    //this->_inScript
    return *this;
}
    

std::string esptest::com::nammour::dcom::Mapping::inScript(){
    return this->_inScript;
}
    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::outScript(std::string v){
    this->_outScript = v;
    return *this;
}
    
esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::outScript(json v){
    //this->_outScript
    return *this;
}
    

std::string esptest::com::nammour::dcom::Mapping::outScript(){
    return this->_outScript;
}
    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::tool(esptest::com::nammour::dcom::Tool& v){
    this->_tool = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::tool(esptest::com::nammour::dcom::Tool* v){
    if(v!=nullptr){
        this->_tool = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Tool* esptest::com::nammour::dcom::Mapping::tool(){
    return this->_tool;
}
    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::group(esptest::com::nammour::dcom::Config_Group& v){
    this->_group = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::group(esptest::com::nammour::dcom::Config_Group* v){
    if(v!=nullptr){
        this->_group = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Config_Group* esptest::com::nammour::dcom::Mapping::group(){
    return this->_group;
}
    

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::type(esptest::com::nammour::dcom::Tool_Type& v){
    this->_type = &v;
    return *this;
}
    
esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::type(esptest::com::nammour::dcom::Tool_Type* v){
    if(v!=nullptr){
        this->_type = v;
    }
    return *this;
}
    

esptest::com::nammour::dcom::Tool_Type* esptest::com::nammour::dcom::Mapping::type(){
    return this->_type;
}
    

    


esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::_unique(){
    std::string __toString = "Mapping::_unique(): ";

    Mapping* ret = new Mapping();
    if(this->Id!=0) ret->Id = this->Id;
    

    return *this;
}

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::_fromDocument(unsigned char* obj){
    return this->_fromDocument(std::string( obj, obj + sizeof obj / sizeof obj[0] ));
}

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::_fromDocument(std::string obj){
    if(obj.empty()) return *this;

    if (std::regex_match(obj, std::regex(R""((([A-Za-z]{3,9}:(?://)?)(?:[-;:&=+$,w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=+$,w]+@)[A-Za-z0-9.-]+)((?:/[+~%/.w-_]*)???(?:[-+=&;%@.w_]*)#?(?:[w]*))?)""))){
        std::string readBuffer;
        CURL *curl = curl_easy_init();
        curl_easy_setopt(curl, CURLOPT_URL, obj);
        curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1L);
        //curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, +[](void *ptr, size_t size, size_t nmemb, void *stream) -> size_t { readBuffer.append(*ptr, size * nmemb); });
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &readBuffer);
        curl_easy_perform(curl);
        curl_easy_cleanup(curl);
        return this->_fromDocument(readBuffer);
    }

    return this->_fromDocument(json::parse(obj));
}

std::vector<esptest::com::nammour::dcom::Mapping>&& esptest::com::nammour::dcom::Mapping::_fromDocument(std::vector<json>&& obj){
    std::vector<Mapping>* ret = new std::vector<Mapping>(obj.size());
    
    for (const json& j : obj){
        ret->push_back((new Mapping())->_fromDocument(j));
    }
    
    return move(*ret);
}

esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::_fromDocument(json obj){
    
    if(obj.contains("active")) this->active(
        
        obj["active"].template get<bool>()
        
        );
    
    if(obj.contains("enabled")) this->enabled(
        
        obj["enabled"].template get<bool>()
        
        );
    
    if(obj.contains("order")) this->order(
        
        obj["order"].template get<int>()
        
        );
    
    if(obj.contains("className")) this->className(
        
        obj["className"].template get<std::string>()
        
        );
    
    if(obj.contains("scope")) this->scope(
        
        obj["scope"].template get<std::string>()
        
        );
    
    if(obj.contains("context")) this->context(
        
        obj["context"].template get<std::string>()
        
        );
    
    if(obj.contains("source")) this->source(
        
        obj["source"].template get<std::string>()
        
        );
    
    if(obj.contains("target")) this->target(
        
        obj["target"].template get<std::string>()
        
        );
    
    if(obj.contains("inScript")) this->inScript(
        
        obj["inScript"].template get<std::string>()
        
        );
    
    if(obj.contains("outScript")) this->outScript(
        
        obj["outScript"].template get<std::string>()
        
        );
    
    if(obj.contains("tool")) this->tool(
        
        (new esptest::com::nammour::dcom::Tool())->_fromDocument(obj["tool"])
        
        );
    
    if(obj.contains("group")) this->group(
        
        (new esptest::com::nammour::dcom::Config_Group())->_fromDocument(obj["group"])
        
        );
    
    if(obj.contains("type")) this->type(
        
        (new esptest::com::nammour::dcom::Tool_Type())->_fromDocument(obj["type"])
        
        );
    
    
    
    return *this;
}

std::string esptest::com::nammour::dcom::Mapping::_toDocument(){
    return "";
}

    
esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::store(){
    std::string __toString = "Mapping::store(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Mapping.store()").method("store").className("Mapping").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Mapping* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
std::vector<esptest::com::nammour::dcom::Mapping>& esptest::com::nammour::dcom::Mapping::findAll(){
    std::string __toString = "Mapping::findAll(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Mapping.findAll()").method("findAll").className("Mapping").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    std::vector<esptest::com::nammour::dcom::Mapping>* answer;

    

    
    if(answer->empty()){
    

    
        
        //__response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    
esptest::com::nammour::dcom::Mapping& esptest::com::nammour::dcom::Mapping::find(){
    std::string __toString = "Mapping::find(): ";
    esptest::com::nammour::dcom::Event __response = (new esptest::com::nammour::dcom::Event())->code("["+thisNode.code()+"@time"+"].Mapping.find()").method("find").className("Mapping").carrier(thisNode).sender(thisNode).recipient(thisNode.parent());

    esptest::com::nammour::dcom::Mapping* answer;

    

    
    if(answer!=nullptr){
    

    
        
        __response.payload(answer->_toDocument());
        
    
    }else{
        json _jRet;
        _jRet["__this"] = this->_toDocument();
        __response.payload(_jRet);
        //__response.payload({"__this": this->_toDocument()});
    }

    //__response.trigger();

    return *answer;
}
    


int main(int argc, char* argv[]) {

    const std::string SERVER_ADDRESS("mqtt://test.mosquitto.org:1883");
    mqtt::async_client cli(SERVER_ADDRESS, "", mqtt::create_options(MQTTVERSION_5));
    cli.set_message_callback([](mqtt::const_message_ptr msg) { (new esptest::com::nammour::dcom::Event())->_fromDocument(msg.get_payload_str()).process(); });
    auto tok = cli.connect(mqtt::connect_options_builder()
		.properties({
			{mqtt::property::SESSION_EXPIRY_INTERVAL, 604800}
		})
		.clean_start(false)
		//.will(std::move(lwt))
		.keep_alive_interval(std::chrono::seconds(20))
		.finalize());
    tok.wait();

    return 0;
}",
	"__keys": ["name"],
	"__trMap": []
}