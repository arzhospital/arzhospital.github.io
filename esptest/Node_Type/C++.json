{
	"Id": "55ad9287c8c6494377614b2110922af91f749ff8",
	"active": "true",
	"enabled": "true",
	"code": "c++",
	"date": "2024-10-21T08:17:50.210Z",
	"name": "C++",
	"remark": "",
	"__keys": ["name"],
	"__trMap": []
}