{
	"Id": "52e17795ebcda2aed8827eeb1aace401bd797c20",
	"after": null,
	"async": null,
	"before": null,
	"date": "undefined",
	"name": "DynaForm",
	"order": null,
	"remark": "dW5kZWZpbmVk",
	"script": "d2luZG93LkR5bmFGb3JtID0gY2xhc3MgewoJY29uc3RydWN0b3IoKSB7CgkJdGhpcy50aXRsZSA9ICJGb3JtIFRpdGxlIjsKCQl0aGlzLm5hbWUgPSAiZnJtRm9ybSI7CgkJdGhpcy5lbGVtZW50cyA9IFtdOwoJCXRoaXMuc2VsZWN0cyA9IFtdOwoJCXRoaXMuZ3JpZHMgPSBbXTsKCQl0aGlzLmJ1dHRvbnMgPSBbXTsKCQl0aGlzLnpvbmVzID0gWydub3J0aCcsICdzb3V0aCcsICdlYXN0JywgJ3dlc3QnLCAnY2VudGVyJ107CgkJdGhpcy5zVGFibGUgPSBudWxsOwoJCXRoaXMuYkRlYnVnID0gZmFsc2U7CgkJdGhpcy51aVR5cGVzID0gewoJCQlpbnQ6ICJudW1iZXJzcGlubmVyIiwKCQkJbWVudTogInNwbGl0YnV0dG9uIiwKCQkJZGF0ZXRpbWU6ICJkYXRldGltZWJveCIsCgkJCWJvb2w6ICJzd2l0Y2hidXR0b24iLAoJCQlmaWxlOiAiZmlsZWJveCIsCgkJCXRleHQ6ICJ0ZXh0Ym94IiwKCQkJbGFiZWw6ICJodG1sIiwKCQkJcGFzc3dvcmQ6ICJwYXNzd29yZGJveCIsCgkJCXN0cmluZzogInRleHRib3giLAoJCQlpbWFnZTogImRpYWxvZyIsCgkJCXByb2dyZXNzOiAicHJvZ3Jlc3NiYXIiLAoJCQlsaW5rOiAibGlua2J1dHRvbiIsCgkJCXRyZWU6ICJjb21ib3RyZWUiLAoJCQluYXZpZ2F0aW9uOiAidHJlZSIsCgkJCXNlYXJjaDogJ3NlYXJjaGJveCcsCgkJfTsKCQl0aGlzLmV2ZW50cyA9IFt7CgkJCW5hbWU6ICdvbkNsaWNrJywKCQkJaGFuZGxlcjogJ29uVG9nZ2xlJywKCQkJcGFyYW1zOiAnbj1ldmVudCcsCgkJCXR5cGU6ICd0b2dnbGUnLAoJCX0sIHsKCQkJbmFtZTogJ29uQ2xvc2UnLAoJCQloYW5kbGVyOiAnUGFuT25DbG9zZScsCgkJCXBhcmFtczogJ249ZXZlbnQnLAoJCQl0eXBlOiAnd2luZG93JywKCQl9LCB7CgkJCW5hbWU6ICdvblNlbGVjdCcsCgkJCWhhbmRsZXI6ICdTZWxlY3RDaGFuZ2UnLAoJCQlwYXJhbXM6ICduJywKCQkJdHlwZTogJ3RhYnMnLAoJCX0sIHsKCQkJbmFtZTogJ3NlYXJjaGVyJywKCQkJaGFuZGxlcjogJ0ZpZWxkQ2hhbmdlJywKCQkJcGFyYW1zOiAnbiwgbycsCgkJCXR5cGU6ICdzZWFyY2hib3gnLAoJCX0sIHsKCQkJbmFtZTogJ29uQmVmb3JlRXhwYW5kJywKCQkJaGFuZGxlcjogJ0V4cGFuZCcsCgkJCXBhcmFtczogJ24nLAoJCQl0eXBlOiAndHJlZScsCgkJfSwgewoJCQluYW1lOiAnb25DaGFuZ2UnLAoJCQloYW5kbGVyOiAnRmllbGRDaGFuZ2UnLAoJCQlwYXJhbXM6ICduLCBvJywKCQl9LCB7CgkJCW5hbWU6ICdvbkJlZm9yZU9wZW4nLAoJCQloYW5kbGVyOiAnUGFuZWxPcGVuJywKCQkJcGFyYW1zOiAnJywKCQkJdHlwZTogJ3dpbmRvdycsCgkJfSwgewoJCQluYW1lOiAnb25PcGVuJywKCQkJaGFuZGxlcjogJ1BlbmRBZnRlck9wZW4nLAoJCQlwYXJhbXM6ICcnLAoJCQl0eXBlOiAnd2luZG93JywKCQl9LCB7CgkJCW5hbWU6ICdvbkNsaWNrJywKCQkJaGFuZGxlcjogJ2RvTGluaycsCgkJCXBhcmFtczogJ249ZXZlbnQsIG8nLAoJCQl0eXBlOiAnbGluaycsCgkJfSwgewoJCQluYW1lOiAnb25DbGlja1JvdycsCgkJCWhhbmRsZXI6ICdGaWVsZENoYW5nZScsCgkJCXBhcmFtczogJ24sIG8nLAoJCQl0eXBlOiAnZ3JpZCcsCgkJfV07CgoJCWlmICh0eXBlb2YoJCkgIT09ICd1bmRlZmluZWQnKSAkKHdpbmRvdykucmVzaXplKHRoaXMud2luZG93UmVzaXplZCk7CgkJdGhpcy53aW5kb3dSZXNpemVkKCk7Cgl9CgoJc3IoKSB7CgkJcmV0dXJuIHR5cGVvZihfRnJFTUQpICE9PSAndW5kZWZpbmVkJyA/IF9GckVNRC5zcigpIDogd2luZG93LnNyOwoJfQoKCXBhcnNlKCkgewoJCSQucGFyc2VyLnBhcnNlKCk7Cgl9CgoJd2luZG93UmVzaXplZCgpIHsKCQl0aGlzLndpZHRoID0gd2luZG93LmlubmVyV2lkdGg7CgkJdGhpcy5oZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQgKiAwLjg7Cgl9CgoJaW5pdCgpIHsKCQl2YXIgc2VsZWN0ID0gewoJCQlpbml0OiBmdW5jdGlvbihjb250YWluZXIsIG9wdGlvbnMpIHsKCQkJCXZhciBvcCA9IG51bGw7CgkJCQl2YXIgZm9wID0gbnVsbDsKCQkJCWZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ncmlkcy5sZW5ndGg7IGkrKykKCQkJCQlpZiAodHJ1ZSB8fCB0aGlzLmdyaWRzW2ldLmlkID09IG9wdGlvbnMuc291cmNlKSBvcCA9IHRoaXMuZ3JpZHNbaV0ub3B0aW9uczsKCQkJCWZvciAoaSA9IDA7IGkgPCBvcC5jb2x1bW5zLmxlbmd0aDsgaSsrKQoJCQkJCWlmIChvcC5jb2x1bW5zW2ldLm5hbWUgPT0gb3B0aW9ucy5maWVsZCkgZm9wID0gb3AuY29sdW1uc1tpXTsKCQkJCWZvcC53aWR0aCA9ICh0aGlzLndpZHRoIC8gMyk7CgkJCQl2YXIgZSA9ICQodGhpcy5zZWxlY3QoZm9wKSk7CgkJCQl2YXIgaW5wdXQgPSBlLmFwcGVuZFRvKGNvbnRhaW5lcik7CgkJCQlpbnB1dC5jb21ib2dyaWQoKTsKCQkJCXRoaXMuYmluZChpbnB1dCk7CgkJCQlyZXR1cm4gaW5wdXQ7CgkJCX0sCgkJCWRlc3Ryb3k6IGZ1bmN0aW9uKHRhcmdldCkgewoJCQkJJCh0YXJnZXQpLnJlbW92ZSgpOwoJCQl9LAoJCQlnZXRWYWx1ZTogZnVuY3Rpb24odGFyZ2V0KSB7CgkJCQlyZXR1cm4gJCh0YXJnZXQpLnZhbCgpOwoJCQl9LAoJCQlzZXRWYWx1ZTogZnVuY3Rpb24odGFyZ2V0LCB2YWx1ZSkgewoJCQkJJCh0YXJnZXQpLnZhbCh2YWx1ZSk7CgkJCX0sCgkJCXJlc2l6ZTogZnVuY3Rpb24odGFyZ2V0LCB3aWR0aCkgewoJCQkJJCh0YXJnZXQpLl9vdXRlcldpZHRoKHdpZHRoKTsKCQkJfQoJCX07CgkJJC5leHRlbmQoJC5mbi5kYXRhZ3JpZC5kZWZhdWx0cy5lZGl0b3JzLCB7CgkJCWRhdGV0aW1lOiB7CgkJCQlpbml0OiBmdW5jdGlvbihjb250YWluZXIsIG9wdGlvbnMpIHsKCQkJCQlvcHRpb25zLndpZHRoID0gdGhpcy5jV2lkdGgob3B0aW9ucyk7CgkJCQkJdmFyIGlucHV0ID0gJCh0aGlzLmRhdGV0aW1lKG9wdGlvbnMpKS5hcHBlbmRUbyhjb250YWluZXIpOwoJCQkJCWlucHV0LmRhdGV0aW1lYm94KCk7CgkJCQkJcmV0dXJuIGlucHV0OwoJCQkJfSwKCQkJCWRlc3Ryb3k6IGZ1bmN0aW9uKHRhcmdldCkgewoJCQkJCSQodGFyZ2V0KS5yZW1vdmUoKTsKCQkJCX0sCgkJCQlnZXRWYWx1ZTogZnVuY3Rpb24odGFyZ2V0KSB7CgkJCQkJcmV0dXJuICQodGFyZ2V0KS52YWwoKTsKCQkJCX0sCgkJCQlzZXRWYWx1ZTogZnVuY3Rpb24odGFyZ2V0LCB2YWx1ZSkgewoJCQkJCSQodGFyZ2V0KS52YWwodmFsdWUpOwoJCQkJfSwKCQkJCXJlc2l6ZTogZnVuY3Rpb24odGFyZ2V0LCB3aWR0aCkgewoJCQkJCSQodGFyZ2V0KS5fb3V0ZXJXaWR0aCh3aWR0aCk7CgkJCQl9CgkJCX0sCgkJCWNoZWNrYm94OiB7CgkJCQlpbml0OiBmdW5jdGlvbihjb250YWluZXIsIG9wdGlvbnMpIHsKCQkJCQl2YXIgaW5wdXQgPSAkKHRoaXMuYm9vbChvcHRpb25zKSkuYXBwZW5kVG8oY29udGFpbmVyKTsKCQkJCQlpbnB1dC5zd2l0Y2hidXR0b24oKTsKCQkJCQlyZXR1cm4gaW5wdXQ7CgkJCQl9LAoJCQkJZGVzdHJveTogZnVuY3Rpb24odGFyZ2V0KSB7CgkJCQkJJCh0YXJnZXQpLnJlbW92ZSgpOwoJCQkJfSwKCQkJCWdldFZhbHVlOiBmdW5jdGlvbih0YXJnZXQpIHsKCQkJCQlyZXR1cm4gJCh0YXJnZXQpLnZhbCgpOwoJCQkJfSwKCQkJCXNldFZhbHVlOiBmdW5jdGlvbih0YXJnZXQsIHZhbHVlKSB7CgkJCQkJJCh0YXJnZXQpLnZhbCh2YWx1ZSk7CgkJCQl9LAoJCQkJcmVzaXplOiBmdW5jdGlvbih0YXJnZXQsIHdpZHRoKSB7CgkJCQkJJCh0YXJnZXQpLl9vdXRlcldpZHRoKHdpZHRoKTsKCQkJCX0KCQkJfSwKCQkJY29tYm90cmVlZ3JpZDogc2VsZWN0LAoJCQlzZWxlY3Q6IHNlbGVjdCwKCQl9KTsKCX0KCglhc2socXVlc3Rpb24sIGZBbnN3ZXIgPSB2ID0+IHYsIG9wdGlvbnMpIHsKCQkkLm1lc3NhZ2VyLmNvbmZpcm0odGhpcy50aXRsZSwgcXVlc3Rpb24sIGZ1bmN0aW9uKHIpIHsKCQkJaWYgKG9wdGlvbnMpIHsKCQkJCWZvciAodmFyIGkgPSAwOyBpIDwgb3B0aW9ucy5sZW5ndGg7IGkrKykgewoJCQkJCWlmIChvcHRpb25zW2ldLmFuc3dlciA9PSByKSB7CgkJCQkJCXJldHVybiBmQW5zd2VyKG9wdGlvbnNbaV0udmFsdWUpOwoJCQkJCX0KCQkJCX0KCQkJfSBlbHNlIHsKCQkJCXJldHVybiBmQW5zd2VyKHIpOwoJCQl9CgkJfSk7Cgl9CgoJdG9wRGF0YShhciwgZ0ZpZWxkLCB2RmllbGQsIHRvcCkgewoJCWlmICghdG9wKSB7CgkJCXJldHVybiBhcjsKCQl9CgkJcmV0ID0gW107CgkJJC5lYWNoKHRoaXMuc3IoKS5ncm91cEJ5KGFyLCBnRmllbGQpLCBmdW5jdGlvbihrZXksIHZhbHVlcykgewoJCQl2YWx1ZXMudmFsdWVzLnNvcnQoKGEsIGIpID0+IHsKCQkJCWlmIChwYXJzZUZsb2F0KGFbdkZpZWxkXSkgPCBwYXJzZUZsb2F0KGJbdkZpZWxkXSkpIHsKCQkJCQlyZXR1cm4gMTsKCQkJCX0gZWxzZSBpZiAocGFyc2VGbG9hdChhW3ZGaWVsZF0pID4gcGFyc2VGbG9hdChiW3ZGaWVsZF0pKSB7CgkJCQkJcmV0dXJuIC0xOwoJCQkJfSBlbHNlIHsKCQkJCQlyZXR1cm4gMDsKCQkJCX0KCQkJfSk7CgkJCSQuZWFjaCh2YWx1ZXMudmFsdWVzLCBmdW5jdGlvbihpLCB2KSB7CgkJCQlpZiAoaSA8IHRvcCkgewoJCQkJCXJldC5wdXNoKHYpOwoJCQkJfQoJCQl9KTsKCQl9KTsKCQlyZXR1cm4gcmV0OwoJfQoKCWFzeW5jIGRvQ2xpY2soYnV0dG9uKSB7CgkJbGV0IF90aGlzID0gdHlwZW9mKHRoaXMuZG9DbGljaykgPT09ICdmdW5jdGlvbicgPyB0aGlzIDogd2luZG93LkRGb3JtOwoJCWJ1dHRvbiA9IF90aGlzLmJ1dHRvbnMuZmluZChiID0+IGIubmFtZSA9PSBidXR0b24ubmFtZSAmJiBiLmdyb3VwID09IGJ1dHRvbi5ncm91cCk7CgkJX3RoaXMuYnVzeSh0cnVlKTsKCQlfdGhpcy5zZXQoewoJCQlXb3JrUHJvZ3Jlc3NWYWx1ZTogMjAKCQl9KQoKCQl2YXIgbyA9IF90aGlzLmdldCgpOwoJCXZhciBzTWlzc2luZyA9IF90aGlzLmVsZW1lbnRzLmZpbHRlcihlID0+IChidXR0b24ud2luZG93ID8gYnV0dG9uLmdyb3VwID09IGUuZ3JvdXAgOiB0cnVlKSkuZmlsdGVyKGUgPT4gZS5yZXF1aXJlZCAmJiAhb1tlLm5hbWVdKS5tYXAoZSA9PiAiPGxpPiIgKyAoZS5sYWJlbCB8fCBlLm5hbWUpICsgIjwvbGk+Iikuam9pbigiIik7CgkJaWYgKHNNaXNzaW5nKSB7CgkJCXdpbmRvdy5fRnJFTUQuX2Vycm9yKCJNaXNzaW5nIG1hbmRhdG9yeSBmaWVsZHM6PGJyLz48dWw+IiArIHNNaXNzaW5nICsgIjwvdWw+IiwgNTAwMCk7CgkJCV90aGlzLmJ1c3koZmFsc2UpOwoJCQlyZXR1cm47CgkJfQoJCWlmIChidXR0b24ub25jbGljaykgYXdhaXQgYnV0dG9uLm9uY2xpY2sobyk7CgkJaWYgKGJ1dHRvbi5vbkNsaWNrKSBhd2FpdCBidXR0b24ub25DbGljayhvKTsKCQlfdGhpcy5idXN5KGZhbHNlKTsKCX0KCglidXN5KGJCdXN5KSB7CgkJaWYgKCFiQnVzeSkgewoJCQl2YXIgdG90YWwgPSAwOwoJCQlpZiAodHlwZW9mIG1vbWVudCAhPT0gJ3VuZGVmaW5lZCcpIHsKCQkJCXRvdGFsID0gbW9tZW50KCkuZGlmZihtb21lbnQodGhpcy5idXN5U3RhbXApLCAnc2Vjb25kcycpOwoJCQl9IGVsc2UgewoJCQkJLy8gbm8gbW9tZW50LCB1c2Ugc3RhbmRhcmQgRGF0ZQoJCQkJdG90YWwgPSAobmV3IERhdGUoKS5nZXRUaW1lKCkgLSB0aGlzLmJ1c3lTdGFtcCA/IHRoaXMuYnVzeVN0YW1wLmdldFRpbWUoKSA6IDApIC8gMTAwMCAvIDM2MDA7CgkJCX0KCQkJaWYgKHRoaXMuYkRlYnVnKSB7CgkJCQl3aW5kb3cuX0ZyRU1ELl9hbGVydCgiRXhlY3V0aW9uIFRpbWU6ICIgKyB0b3RhbCArICIgc2Vjb25kcy4iKTsKCQkJfQoJCQlkZWxldGUgdGhpcy5idXN5U3RhbXA7CgoJCQlzZXRJbnRlcnZhbCgxLCAoKSA9PiB0aGlzLlNldCh7CgkJCQlMb2FkaW5nOiAxMAoJCQl9KSk7CgkJfSBlbHNlIHsKCQkJdGhpcy5idXN5U3RhbXAgPSBuZXcgRGF0ZSgpOwoJCX0KCgkJJC5lYWNoKCQubWVyZ2UoJC5tYXAodGhpcy5idXR0b25zLCBiID0+IGIubmFtZSksICQubWFwKHRoaXMuZWxlbWVudHMuZmlsdGVyKGUgPT4gZS50eXBlID09ICdsaW5rJyksIGUgPT4gZS5uYW1lKSksIChfLCBlKSA9PiAkKCcjJyArIGUpLmxpbmtidXR0b24oYkJ1c3kgPyAnZGlzYWJsZScgOiAnZW5hYmxlJykpOwoJfQoKCXByZWZpeChlKSB7CgkJc3dpdGNoIChlLnR5cGUpIHsKCQkJY2FzZSAnbGFiZWwnOgoJCQkJcmV0dXJuICdsYmwnOwoJCQljYXNlICd0ZXh0JzoKCQkJY2FzZSAnc3RyaW5nJzoKCQkJY2FzZSAnc2VhcmNoJzoKCQkJY2FzZSAncGFzc3dvcmQnOgoJCQkJcmV0dXJuICd0eHQnOwoJCQljYXNlICJEYXRlVGltZSI6CgkJCWNhc2UgImRhdGV0aW1lIjoKCQkJCXJldHVybiAnZHRwJzsKCQkJY2FzZSAiaW50IjoKCQkJY2FzZSAiaW50ZWdlciI6CgkJCWNhc2UgIm51bWJlciI6CgkJCWNhc2UgImxvbmciOgoJCQljYXNlICJMb25nIjoKCQkJCXJldHVybiAnbnVkJzsKCQkJY2FzZSAnZmlsZSc6CgkJCQlyZXR1cm4gJ2ZpbCc7CgkJCWNhc2UgJ2ltYWdlJzoKCQkJCXJldHVybiAnaW1nJzsKCQkJY2FzZSAiYm9vbCI6CgkJCQlyZXR1cm4gJ2Noayc7CgkJCWNhc2UgIndpbmRvdyI6CgkJCQlyZXR1cm4gJ3BubCc7CgkJCWNhc2UgInByb2dyZXNzIjoKCQkJCXJldHVybiAncHJnJzsKCQkJY2FzZSAiZ3JpZCI6CgkJCWNhc2UgInRyZWUiOgoJCQljYXNlICJzZWxlY3QiOgoJCQkJcmV0dXJuICdjbWInOwoJCQlkZWZhdWx0OgoJCQkJcmV0dXJuICcnOwoJCX0KCX0KCgljbGVhcihncm91cCkgewoJCXZhciBvID0ge307CgkJJC5lYWNoKHRoaXMuZWxlbWVudHMuZmlsdGVyKGUgPT4gZ3JvdXAgPyBlLmdyb3VwID09IGdyb3VwIDogdHJ1ZSksIChfLCBlKSA9PiB7CgkJCXZhciBuYW1lID0gKGUuZW1zU291cmNlID8gIl8iIDogIiIpICsgZS5uYW1lOwoJCQlzd2l0Y2ggKGUudHlwZSkgewoJCQkJY2FzZSAndGV4dCc6CgkJCQljYXNlICdzdHJpbmcnOgoJCQkJY2FzZSAnc2VhcmNoJzoKCQkJCWNhc2UgJ3Bhc3N3b3JkJzoKCQkJCWNhc2UgIkRhdGVUaW1lIjoKCQkJCWNhc2UgImRhdGV0aW1lIjoKCQkJCQlvW25hbWVdID0gIiI7CgkJCQkJYnJlYWs7CgkJCQljYXNlICJpbnQiOgoJCQkJY2FzZSAibnVtYmVyIjoKCQkJCWNhc2UgImludGVnZXIiOgoJCQkJY2FzZSAibG9uZyI6CgkJCQljYXNlICJMb25nIjoKCQkJCWNhc2UgInByb2dyZXNzIjoKCQkJCQlvW25hbWVdID0gMDsKCQkJCQlicmVhazsKCQkJCWNhc2UgInRyZWUiOgoJCQkJY2FzZSAic2VsZWN0IjoKCQkJCQlvW25hbWVdID0gbnVsbDsKCQkJCQlicmVhazsKCQkJCWNhc2UgImdyaWQiOgoJCQkJCW9bbmFtZV0gPyBvW25hbWVdLmRhdGEgPSBbXSA6IG51bGw7CgkJCQkJYnJlYWs7CgkJCQljYXNlICJib29sIjoKCQkJCQlvW25hbWVdID0gZmFsc2U7CgkJCQkJYnJlYWs7CgkJCQlkZWZhdWx0OgoJCQkJCWJyZWFrOwoJCQl9CgkJfSk7CgkJLy9jb25zb2xlLmxvZygiY2xlYXIiLCBvKTsKCQl0aGlzLnNldChvKTsKCQl0aGlzLmJ1c3koZmFsc2UpOwoJfQoKCXNldChvLCBlTmFtZSkgewoJCWlmIChlTmFtZSkgewoJCQl2YXIgb0VsZW1lbnQgPSB0aGlzLmJ5TmFtZShlTmFtZSk7CgkJCWlmICghb0VsZW1lbnQpIHJldHVybjsKCQkJdmFyIGF0dCA9IG51bGw7CgkJCWlmIChvICYmIG8uSWQgJiYgby5FbnRpdHlBdHRyaWJ1dGUpIHsKCQkJCS8vIGFuIEVudGl0eVZhbHVlCgkJCQlmb3IgKHZhciBwIGluIG8pCgkJCQkJaWYgKHAuZW5kc1dpdGgoIlZhbHVlIikpIGF0dCA9IHA7CgkJCQlvRWxlbWVudC5lbXNTb3VyY2UgPSBvOwoJCQl9CgkJCXRyeSB7CgkJCQlsZXQgZU5hbWUgPSAiIyIgKyB0aGlzLnByZWZpeChvRWxlbWVudCkgKyBvRWxlbWVudC5uYW1lOwoJCQkJbGV0IGVUeXBlID0gdGhpcy51aVR5cGVzW29FbGVtZW50LnR5cGVdOwoJCQkJLy8gY29uc29sZS5sb2coIkR5bmFGb3JtOjpzZXQoIiArIG9FbGVtZW50Lm5hbWUgKyAiKTogIiwgZU5hbWUsIGVUeXBlLCBvKTsKCQkJCXN3aXRjaCAob0VsZW1lbnQudHlwZSkgewoJCQkJCWNhc2UgJ2xhYmVsJzoKCQkJCQkJaWYgKGF0dCkgewoJCQkJCQkJJChlTmFtZSkuaHRtbChvW2F0dF0pOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJJChlTmFtZSkuaHRtbCgobyAmJiBvLkVudGl0eUF0dHJpYnV0ZSkgPyAiIiA6IG8pOwoJCQkJCQl9CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgJ3RleHQnOgoJCQkJCWNhc2UgJ3N0cmluZyc6CgkJCQkJY2FzZSAncGFzc3dvcmQnOgoJCQkJCWNhc2UgImludCI6CgkJCQkJY2FzZSAic2VhcmNoIjoKCQkJCQljYXNlICJpbnRlZ2VyIjoKCQkJCQljYXNlICJudW1iZXIiOgoJCQkJCWNhc2UgImxvbmciOgoJCQkJCWNhc2UgIkxvbmciOgoJCQkJCQlpZiAoYXR0KSB7CgkJCQkJCQkkKGVOYW1lKVtlVHlwZV0oInNldFZhbHVlIiwgb1thdHRdKTsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCSQoZU5hbWUpW2VUeXBlXSgic2V0VmFsdWUiLCAobyAmJiBvLkVudGl0eUF0dHJpYnV0ZSkgPyAiIiA6IG8pOwoJCQkJCQl9CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgIkRhdGVUaW1lIjoKCQkJCQljYXNlICJkYXRldGltZSI6CgkJCQkJCWlmIChhdHQpIHsKCQkJCQkJCSQoZU5hbWUpW2VUeXBlXSgnc2V0VmFsdWUnLCAob1thdHRdID8gdGhpcy5zcigpLnRvRGF0ZVRpbWUob1thdHRdKSA6ICIiKSk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQkkKGVOYW1lKVtlVHlwZV0oJ3NldFZhbHVlJywgKG8gJiYgby5FbnRpdHlBdHRyaWJ1dGUpID8gIiIgOiAobyA/IHRoaXMuc3IoKS50b0RhdGVUaW1lKG8pIDogIiIpKTsKCQkJCQkJfQoJCQkJCQlicmVhazsKCQkJCQljYXNlICJib29sIjoKCQkJCQkJaWYgKGF0dCkgewoJCQkJCQkJJChlTmFtZSlbZVR5cGVdKChvW2F0dF0gPyAnJyA6ICd1bicpICsgJ2NoZWNrJyk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQkkKGVOYW1lKVtlVHlwZV0oKCgobyAmJiBvLkVudGl0eUF0dHJpYnV0ZSkgPyAiIiA6IG8pID8gJycgOiAndW4nKSArICdjaGVjaycpOwoJCQkJCQl9CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgIndpbmRvdyI6CgkJCQkJCWlmIChhdHQpIHsKCQkJCQkJCW9FbGVtZW50LnZhbHVlID0gb1thdHRdOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJb0VsZW1lbnQudmFsdWUgPSAobyAmJiBvLkVudGl0eUF0dHJpYnV0ZSkgPyAiIiA6IG87CgkJCQkJCX0KCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAicHJvZ3Jlc3MiOgoJCQkJCQl2YXIgdiA9IDA7CgkJCQkJCWlmIChhdHQpIHsKCQkJCQkJCXYgPSBvW2F0dF07CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQl2ID0gKG8gJiYgby5FbnRpdHlBdHRyaWJ1dGUpID8gIiIgOiBvOwoJCQkJCQl9CgkJCQkJCS8vY29uc29sZS5sb2coIiMiICsgdGhpcy5wcmVmaXgob0VsZW1lbnQpICsgb0VsZW1lbnQubmFtZSwgdGhpcy51aVR5cGVzW29FbGVtZW50LnR5cGVdLCBNYXRoLnJvdW5kKHYgKiAxMCkgLyAxMCk7CgkJCQkJCSQoZU5hbWUpW2VUeXBlXSgnc2V0VmFsdWUnLCBNYXRoLnJvdW5kKHYgKiAxMCkgLyAxMCk7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgImdyaWQiOgoJCQkJCQlsZXQgY29scyA9IEpTT04ucGFyc2UoInsiICsgdGhpcy5tYXBDb2x1bW5zKG9FbGVtZW50LCB0cnVlKSArICJ9Iik7CgkJCQkJCSQuZWFjaChjb2xzLmNvbHVtbnNbMF0sIChfLCBjKSA9PiBjLmZvcm1hdHRlciA9IHRoaXMuc3IoKS5ydW5TY3JpcHQodGhpcy5mb3JtYXR0ZXIob0VsZW1lbnQubmFtZSwgYykpKTsKCQkJCQkJJChlTmFtZSkuZGF0YWdyaWQoY29scyk7CgkJCQkJCWlmIChhdHQpIHsKCQkJCQkJCSQoZU5hbWUpLmRhdGFncmlkKHsKCQkJCQkJCQlkYXRhOiBvW2F0dF0KCQkJCQkJCX0pOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJJChlTmFtZSkuZGF0YWdyaWQoewoJCQkJCQkJCWRhdGE6IChvICYmIG8uRW50aXR5QXR0cmlidXRlKSA/ICIiIDogbwoJCQkJCQkJfSk7CgkJCQkJCX0KCQkJCQkJJChlTmFtZSkuZGF0YWdyaWQoInVuc2VsZWN0QWxsIik7CgkJCQkJCSQoZU5hbWUpLmRhdGFncmlkKCk7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgInRyZWUiOgoJCQkJCQl2YXIgdiA9IGF0dCA/IG9bYXR0XSA6ICgobyAmJiBvLkVudGl0eUF0dHJpYnV0ZSkgPyAiIiA6IG8pOwoJCQkJCQlpZiAoQXJyYXkuaXNBcnJheSh2KSkgewoJCQkJCQkJJChlTmFtZSlbZVR5cGVdKCJ0cmVlIikudHJlZSgibG9hZERhdGEiLCB2KTsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCSQoZU5hbWUpW2VUeXBlXSgnc2V0VmFsdWUnLCB2KTsKCQkJCQkJfQoJCQkJCQlicmVhazsKCQkJCQljYXNlICJzZWxlY3QiOgoJCQkJCQlpZiAoYXR0KSB7CgkJCQkJCQlpZiAob0VsZW1lbnQub3B0aW9ucykgewoJCQkJCQkJCSQoZU5hbWUpLmNvbWJvKCdzZXRWYWx1ZScgKyAob0VsZW1lbnQubXVsdGlwbGUgPyAncycgOiAnJyksIChvW2F0dF0gPyBvW2F0dF0gOiAiIikpOwoJCQkJCQkJCSQoZU5hbWUpLmNvbWJvKCdzZXRWYWx1ZScgKyAob0VsZW1lbnQubXVsdGlwbGUgPyAncycgOiAnJyksIChvW2F0dF0gPyBvW2F0dF0gOiAiIikpOwoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQkkKGVOYW1lKS5jb21ib2dyaWQoJ3NldFZhbHVlJyArIChvRWxlbWVudC5tdWx0aXBsZSA/ICdzJyA6ICcnKSwgKG9bYXR0XSA/IG9bYXR0XSA6ICIiKSk7CgkJCQkJCQl9CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQl2ID0gbnVsbDsKCQkJCQkJCWlmIChvID09PSBudWxsKSB7CgoJCQkJCQkJfSBlbHNlIGlmIChvLmNvbnN0cnVjdG9yID09PSBBcnJheSkgewoKCQkJCQkJCX0gZWxzZSBpZiAoIW8uRW50aXR5QXR0cmlidXRlKSB7CgkJCQkJCQkJdiA9IG8gfHwgewoJCQkJCQkJCQlJZDogby5JZCwKCQkJCQkJCQkJX1RvU3RyaW5nOiBvLl9Ub1N0cmluZywKCQkJCQkJCQkJdG9TdHJpbmc6IGZ1bmN0aW9uKCkgewoJCQkJCQkJCQkJcmV0dXJuIHRoaXMuX1RvU3RyaW5nOwoJCQkJCQkJCQl9CgkJCQkJCQkJfTsKCQkJCQkJCX0KCQkJCQkJCWlmIChvRWxlbWVudC5vcHRpb25zKSB7CgkJCQkJCQkJJChlTmFtZSkuY29tYm8oJ3NldFZhbHVlJyArIChvRWxlbWVudC5tdWx0aXBsZSA/ICdzJyA6ICcnKSwgdik7CgkJCQkJCQkJJChlTmFtZSkuY29tYm8oJ3NldFRleHQnICsgKG9FbGVtZW50Lm11bHRpcGxlID8gJ3MnIDogJycpLCB2KTsKCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJJChlTmFtZSkuY29tYm9ncmlkKCdzZXRWYWx1ZScgKyAob0VsZW1lbnQubXVsdGlwbGUgPyAncycgOiAnJyksIHYpOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJCWJyZWFrOwoJCQkJCWRlZmF1bHQ6CgkJCQkJCWJyZWFrOwoJCQkJfQoJCQl9IGNhdGNoIChleCkgewoJCQkJY29uc29sZS5sb2coZXgpOwoJCQl9CgkJfSBlbHNlIHsKCQkJZm9yICh2YXIgcCBpbiBvKSB7CgkJCQlpZiAocC5pbmRleE9mKCdfJykgPT09IDApIHAgPSBwLnN1YnN0cmluZygxKTsKCQkJCXZhciBlID0gdGhpcy5ieU5hbWUocCk7CgkJCQlpZiAoIWUgfHwgIWUubmFtZSkgY29udGludWU7CgkJCQl2YXIgdmFsdWUgPSBvW3BdOwoJCQkJaWYgKGUubmFtZSA9PSB0aGlzLnNUYWJsZSkgewoJCQkJCXZhbHVlID0gbzsKCQkJCQl2YWx1ZS5EYXRlID0gbmV3IERhdGUoKTsKCQkJCX0KCQkJCWlmIChwID09ICJFbnRpdHlWYWx1ZXMiKSB7CgkJCQkJLy8gYW4gZW1zRm9ybVZhbHVlcyBzb3VyY2UKCQkJCQkvLyBmaW5kIHRoZSBFbnRpdHlWYWx1ZSBmb3IgdGhpcyBlbGVtZW50IGFuZCBzZXQgaXQKCQkJCQlmb3IgKHZhciBqID0gMDsgaiA8IG8uRW50aXR5VmFsdWVzLmxlbmd0aDsgaisrKSB7CgkJCQkJCWlmIChvLkVudGl0eVZhbHVlc1tqXS5FbnRpdHlBdHRyaWJ1dGUuTmFtZSA9PSBlLm5hbWUpIHsKCQkJCQkJCS8vIGZvdW5kIHRoZSBFbnRpdHlWYWx1ZSBmb3IgdGhpcyBlbGVtZW50CgkJCQkJCQlfdiA9IG8uRW50aXR5VmFsdWVzW2pdOwoJCQkJCQkJZm9yICh2YXIgcSBpbiBfdikgewoJCQkJCQkJCWlmIChxLmVuZHNXaXRoKCJWYWx1ZSIpKSB7CgkJCQkJCQkJCV92W3FdID0gdmFsdWU7CgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCQl0aGlzLnNldCh2YWx1ZSwgZS5uYW1lKTsKCQkJfQoJCX0KCX0KCglnZXQoKSB7CgkJdmFyIG8gPSB7fTsKCQlpZiAodGhpcy5zVGFibGUgJiYgd2luZG93W3RoaXMuc1RhYmxlXSkgbyA9IG5ldyB3aW5kb3dbdGhpcy5zVGFibGVdKCk7CgkJZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmVsZW1lbnRzLmxlbmd0aDsgaSsrKSB7CgkJCXZhciBjbiA9IG51bGw7CgkJCXZhciB2ID0gbnVsbDsKCQkJdHJ5IHsKCQkJCWxldCBlTmFtZSA9ICIjIiArIHRoaXMucHJlZml4KHRoaXMuZWxlbWVudHNbaV0pICsgdGhpcy5lbGVtZW50c1tpXS5uYW1lOwoJCQkJc3dpdGNoICh0aGlzLmVsZW1lbnRzW2ldLnR5cGUpIHsKCQkJCQljYXNlICdsYWJlbCc6CgkJCQkJCWNuID0gJChlTmFtZSk7CgkJCQkJCXYgPSBjbi5odG1sKCk7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgJ3RleHQnOgoJCQkJCWNhc2UgJ3N0cmluZyc6CgkJCQkJY2FzZSAnc2VhcmNoJzoKCQkJCQljYXNlICdwYXNzd29yZCc6CgkJCQkJCWNuID0gJChlTmFtZSk7CgkJCQkJCXYgPSBjbi52YWwoKTsKCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAiZmlsZSI6CgkJCQkJY2FzZSAiaW1hZ2UiOgoJCQkJCQljbiA9ICQoZU5hbWUpOwoJCQkJCQl2ID0gdGhpcy5lbGVtZW50c1tpXS5kYXRhOwoJCQkJCQlicmVhazsKCQkJCQljYXNlICJEYXRlVGltZSI6CgkJCQkJY2FzZSAiZGF0ZXRpbWUiOgoJCQkJCQl2ID0gbmV3IERhdGUoJChlTmFtZSkuZGF0ZXRpbWVib3goJ2dldFZhbHVlJykpOwoJCQkJCQljbiA9ICQoZU5hbWUpOwoJCQkJCQlicmVhazsKCQkJCQljYXNlICJwcm9ncmVzcyI6CgkJCQkJCWNuID0gJChlTmFtZSk7CgkJCQkJCXYgPSBjbi5wcm9ncmVzc2JhcignZ2V0VmFsdWUnKTsKCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAiaW50IjoKCQkJCQljYXNlICJpbnRlZ2VyIjoKCQkJCQljYXNlICJudW1iZXIiOgoJCQkJCWNhc2UgImxvbmciOgoJCQkJCWNhc2UgIkxvbmciOgoJCQkJCQljbiA9ICQoZU5hbWUpOwoJCQkJCQl2ID0gcGFyc2VGbG9hdChjbi52YWwoKSk7CgkJCQkJCWlmIChpc05hTih2KSkgdiA9IDA7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgImdyaWQiOgoJCQkJCQljbiA9ICQoZU5hbWUpOwoJCQkJCQl2ID0gY24uZGF0YWdyaWQoJ2dldERhdGEnKTsKCQkJCQkJdi5zZWxlY3RlZCA9IGNuLmRhdGFncmlkKCJnZXRTZWxlY3RlZCIpOwoJCQkJCQlicmVhazsKCQkJCQljYXNlICJ0cmVlIjoKCQkJCQkJY24gPSAkKGVOYW1lKTsKCQkJCQkJdiA9IGNuLmNvbWJvdHJlZSgidHJlZSIpLnRyZWUoImdldFNlbGVjdGVkIik7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgIndpbmRvdyI6CgkJCQkJCXYgPSB0aGlzLmVsZW1lbnRzW2ldLnZhbHVlOwoJCQkJCQlicmVhazsKCQkJCQljYXNlICJzZWxlY3QiOgoJCQkJCQlpZiAodGhpcy5lbGVtZW50c1tpXS5vcHRpb25zKSB7CgkJCQkJCQl2ID0gJChlTmFtZSkuY29tYm9ncmlkKCdnZXRWYWx1ZScgKyAodGhpcy5lbGVtZW50c1tpXS5tdWx0aXBsZSA/ICdzJyA6ICcnKSk7CgkJCQkJCQl2ID0gdGhpcy5zcigpLnJ1blNjcmlwdCh2KTsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCXYgPSAkKGVOYW1lKS5jb21ib2dyaWQoJ2dyaWQnKS5kYXRhZ3JpZCgnZ2V0U2VsZWN0aW9ucycpOwoJCQkJCQkJaWYgKCF2IHx8ICF2Lmxlbmd0aCkgewoJCQkJCQkJCXYgPSAkKGVOYW1lKS5jb21ib2dyaWQoJ2dldFZhbHVlJyArICh0aGlzLmVsZW1lbnRzW2ldLm11bHRpcGxlID8gJ3MnIDogJycpKTsKCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJaWYgKCF0aGlzLmVsZW1lbnRzW2ldLm11bHRpcGxlKSB2ID0gdlswXTsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCQljbiA9ICQoZU5hbWUpOwoJCQkJCQlicmVhazsKCQkJCQljYXNlICJib29sIjoKCQkJCQkJY24gPSAkKGVOYW1lKTsKCQkJCQkJdiA9IGNuLnN3aXRjaGJ1dHRvbignb3B0aW9ucycpLmNoZWNrZWQ7CgkJCQkJCWJyZWFrOwoJCQkJCWRlZmF1bHQ6CgkJCQkJCWJyZWFrOwoJCQkJfQoJCQkJb1t0aGlzLmVsZW1lbnRzW2ldLm5hbWVdKHYpOwoJCQl9IGNhdGNoIChlKSB7CgkJCQkvL2NvbnNvbGUubG9nKHRoaXMuZWxlbWVudHNbaV0ubmFtZSwgZSk7CgkJCQlvW3RoaXMuZWxlbWVudHNbaV0ubmFtZV0gPSB2OwoJCQl9CgkJCWlmIChjbikgewoJCQkJaWYgKG8uRW50aXR5VmFsdWVzKSB7CgkJCQkJZm9yICh2YXIgaiA9IDA7IGogPCBvLkVudGl0eVZhbHVlcy5sZW5ndGg7IGorKykgewoJCQkJCQlpZiAodGhpcy5lbGVtZW50c1tpXS5uYW1lID09IHRoaXMuc1RhYmxlICYmIHRoaXMuZWxlbWVudHNbaV0uZW1zU291cmNlKSBvLklkID0gdGhpcy5lbGVtZW50c1tpXS5lbXNTb3VyY2UuSWQ7CgkJCQkJCWlmIChvLkVudGl0eVZhbHVlc1tqXS5FbnRpdHlBdHRyaWJ1dGUuTmFtZSA9PSB0aGlzLmVsZW1lbnRzW2ldLm5hbWUgJiYgdGhpcy5lbGVtZW50c1tpXS5lbXNTb3VyY2UpIHsKCQkJCQkJCW8uRW50aXR5VmFsdWVzW2pdLklkID0gdGhpcy5lbGVtZW50c1tpXS5lbXNTb3VyY2UuSWQ7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgkJcmV0dXJuIG87Cgl9CgoJY0hlaWdodChvcHRpb25zKSB7CgkJaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5lZGl0b3IpIHJldHVybiB3aW5kb3cuaW5uZXJIZWlnaHQ7CgkJaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5oZWlnaHQgJiYgdHlwZW9mKG9wdGlvbnMuaGVpZ2h0KSA9PT0gJ3N0cmluZycpIHJldHVybiB0aGlzLmhlaWdodDsKCQlpZiAob3B0aW9ucyAmJiBvcHRpb25zLnR5cGUgPT0gJ3dpbmRvdycgJiYgIW9wdGlvbnMuaGVpZ2h0KSByZXR1cm4gdGhpcy5oZWlnaHQgKiAwLjk7CgkJcmV0dXJuIE1hdGguZmxvb3IoKChvcHRpb25zID8gb3B0aW9ucy5oZWlnaHQgOiBudWxsKSB8fCAodGhpcy5oZWlnaHQgLyAzKSkpOwoJfQoKCXNlYXJjaChvcHRpb25zKSB7CgkJcmV0dXJuIHRoaXMuc3RyaW5nKG9wdGlvbnMpOwoJfQoKCXN0cmluZyhvcHRpb25zKSB7CgkJb3B0aW9ucy5oZWlnaHQgPSAyMDsKCQlvcHRpb25zLnNpbXBsZSA9IHRydWU7CgkJcmV0dXJuIHRoaXMudGV4dChvcHRpb25zKTsKCX0KCglkYXRldGltZShvcHRpb25zKSB7CgkJcmV0dXJuIGA8aW5wdXQgaWQ9ImR0cCR7b3B0aW9ucy5uYW1lfSIgY2xhc3M9ImVhc3l1aS0ke3RoaXMudWlUeXBlc1tvcHRpb25zLnR5cGVdfSIgcmVxdWlyZWQ9IiR7b3B0aW9ucy5yZXF1aXJlZCA/ICd0cnVlJyA6ICdmYWxzZSd9IiB2YWx1ZT0iJHt0aGlzLnZhbHVlKG9wdGlvbnMpfSIgc3R5bGU9IndpZHRoOiR7dGhpcy5jV2lkdGgob3B0aW9ucyl9cHgiPmA7Cgl9CgoJcXVlcnkob3B0aW9ucykgewoJCXJldHVybiAiPGRpdiBpZD0ndnMiICsgb3B0aW9ucy5uYW1lICsgIic+PC9kaXY+IjsKCX0KCglEYXRlVGltZShvcHRpb25zKSB7CgkJcmV0dXJuIHRoaXMuZGF0ZXRpbWUob3B0aW9ucyk7Cgl9CgoJbG9uZyhvcHRpb25zKSB7CgkJcmV0dXJuIHRoaXMuaW50KG9wdGlvbnMpOwoJfQoKCUxvbmcob3B0aW9ucykgewoJCXJldHVybiB0aGlzLmxvbmcob3B0aW9ucyk7Cgl9CgoJdmFsdWUob3B0aW9ucykgewoJCWlmICh0eXBlb2Ygb3B0aW9ucy52YWx1ZSA9PT0gJ2Z1bmN0aW9uJykgewoJCQl0cnkgewoJCQkJcmV0dXJuIG9wdGlvbnMudmFsdWUodGhpcy5nZXQoKSk7CgkJCX0gY2F0Y2ggKGV4KSB7CgkJCQljb25zb2xlLmxvZyhgREZvcm0udmFsdWUoJHtvcHRpb25zLm5hbWV9KTogJHtleH1gKTsKCQkJCXJldHVybiAnJzsKCQkJfQoJCX0gZWxzZSB7CgkJCXN3aXRjaCAob3B0aW9ucy50eXBlKSB7CgkJCQljYXNlICdpbnQnOgoJCQkJY2FzZSAncHJvZ3Jlc3MnOgoJCQkJCXJldHVybiBvcHRpb25zLnZhbHVlIHx8IG9wdGlvbnMubWluIHx8IDA7CgkJCQljYXNlICdzdHJpbmcnOgoJCQkJY2FzZSAndGV4dCc6CgkJCQljYXNlICdkYXRldGltZSc6CgkJCQljYXNlICdsYWJlbCc6CgkJCQkJcmV0dXJuIG9wdGlvbnMudmFsdWUgfHwgIiI7CgkJCQlkZWZhdWx0OgoJCQkJCXJldHVybiBvcHRpb25zLnZhbHVlOwoJCQl9CgkJfQoJfQoKCWludChvcHRpb25zKSB7CgkJbGV0IHJldCA9IGA8aW5wdXQgaWQ9Im51ZCR7b3B0aW9ucy5uYW1lfSIgY2xhc3M9ImVhc3l1aS0ke3RoaXMudWlUeXBlc1tvcHRpb25zLnR5cGVdfSIgcmVxdWlyZWQ9IiR7b3B0aW9ucy5yZXF1aXJlZCA/ICd0cnVlJyA6ICdmYWxzZSd9IiB2YWx1ZT0iJHt0aGlzLnZhbHVlKG9wdGlvbnMpfSIgZGF0YS1vcHRpb25zPSJtaW46JHtvcHRpb25zLm1pbiB8fCAwfSxtYXg6JHtvcHRpb25zLm1heCB8fCAxMDB9LGluY3JlbWVudDoke29wdGlvbnMuaW5jcmVtZW50IHx8IDF9IiBzdHlsZT0id2lkdGg6JHt0aGlzLmNXaWR0aChvcHRpb25zKX1weDsiPjwvaW5wdXQ+YDsKCQkvL2NvbnNvbGUubG9nKHJldCk7CgkJcmV0dXJuIHJldDsKCX0KCgltZW51KG9wdGlvbnMpIHsKCQlvcHRpb25zLnR5cGUgPSBvcHRpb25zLnR5cGUgfHwgJ21lbnUnOwoKCQlvcHRpb25zLm1lbnUgPSAob3B0aW9ucy5tZW51IHx8IFtdKS5zb3J0KChhLCBiKSA9PiBhLm9yZGVyIC0gYi5vcmRlcik7CgoJCS8vY29uc29sZS5sb2coIkR5bmFGb3JtOjptZW51KCk6IG9wdGlvbnMiLCBvcHRpb25zKTsKCgkJbGV0IHJldCA9ICIiOwoJCXJldCArPSAnPGRpdiBjbGFzcz0iZWFzeXVpLXBhbmVsIiBpZD0ibW51JyArIG9wdGlvbnMubmFtZSArICciIHN0eWxlPSJwYWRkaW5nOjVweDsiPlxuJzsKCgkJcmV0ICs9IG9wdGlvbnMubWVudS5tYXAobSA9PiBgPGEgaHJlZj0iIyIgY2xhc3M9ImVhc3l1aS0ke3RoaXMudWlUeXBlc1tvcHRpb25zLnR5cGVdfSIgZGF0YS1vcHRpb25zPSJtZW51OicjbW0ke20ubGFiZWwucmVwbGFjZSgvIC9nLCAnJyl9JyxpY29uQ2xzOidpY29uLSR7bS5pY29uIHx8ICdub25lJ30nIj4ke20ubGFiZWx9PC9hPmApLmpvaW4oJ1xuJyk7CgoJCS8qJC5lYWNoKG9wdGlvbnMubWVudSwgKF8sIG0pID0+IHJldCArPSBgPGEgaHJlZj0iIyIgY2xhc3M9ImVhc3l1aS0ke3RoaXMudWlUeXBlc1tvcHRpb25zLnR5cGVdfSIgZGF0YS1vcHRpb25zPSJtZW51OicjbW0ke20ubGFiZWwucmVwbGFjZSgvIC9nLCAnJyl9JyxpY29uQ2xzOidpY29uLSR7bS5pY29uIHx8ICdub25lJ30nIj4ke20ubGFiZWx9PC9hPlxuYCk7Ki8KCQlyZXQgKz0gIjwvZGl2PlxuIjsKCgkJbGV0IGR2ID0gbSA9PiB7CgkJCWxldCByZXQgPSAnPGRpdicgKyAobS5zdWJNZW51cyA/ICcnIDogYCBkYXRhLW9wdGlvbnM9Imljb25DbHM6J2ljb24tJHttLmljb24gfHwgJ25vbmUnfSciYCkgKyAnPlxuJzsKCQkJcmV0ICs9IG0uc3ViTWVudXMgPyAnPHNwYW4+JyArIChtLmxhYmVsIHx8IHRoaXMuZW5nbGlzaChtLmNvZGUpKSArICc8L3NwYW4+XG48ZGl2PicgOiAoYDxzcGFuIHdpZHRoPScxMDAlJyBvbmNsaWNrPScoYXN5bmMgKCkgPT4ge2xldCBtID0gJHtfRnJFTUQuX3RvSlMobSl9OyBpZihtLmFjdGlvbil7cmV0dXJuIGF3YWl0IG0uYWN0aW9uKERGb3JtLmdldCgpLCBtKTt9IGlmIChtLnN1Yk1lbnVzKSByZXR1cm47IGF3YWl0IF9GckVNRC5SZW5kZXJQYWdlKHtfY29kZTogbS5jb2RlIHx8IG0ubGFiZWwucmVwbGFjZSgvIC9nLCAiIikudG9Mb3dlckNhc2UoKX0sIG0uZGF0YSk7fSkoKSc+JHttLmxhYmVsIHx8IHRoaXMuZW5nbGlzaChtLmNvZGUpfTwvc3Bhbj5gKTsKCQkJJC5lYWNoKG0uc3ViTWVudXMsIChfLCBzKSA9PiByZXQgKz0gZHYocykpOwoJCQlyZXQgKz0gKG0uc3ViTWVudXMgPyAiPC9kaXY+XG4iIDogIiIpICsgYDwvZGl2PlxuYDsKCQkJcmV0dXJuIHJldDsKCQl9OwoKCQlyZXQgKz0gb3B0aW9ucy5tZW51Lm1hcChtID0+IGA8ZGl2IGlkPSJtbSR7bS5sYWJlbC5yZXBsYWNlKC8gL2csICcnKX0iIHN0eWxlPSJ3aWR0aDoxNTBweDsiPiR7bS5zdWJNZW51cy5tYXAoc20gPT4gZHYoc20pKS5qb2luKCcnKX08L2Rpdj5gKS5qb2luKCdcbicpOwoKCQlyZXR1cm4gcmV0OwoJfQoKCWludGVnZXIob3B0aW9ucykgewoJCXJldHVybiB0aGlzLmludChvcHRpb25zKTsKCX0KCgludW1iZXIob3B0aW9ucykgewoJCXJldHVybiB0aGlzLmludChvcHRpb25zKTsKCX0KCglJbnRlZ2VyKG9wdGlvbnMpIHsKCQlyZXR1cm4gdGhpcy5pbnQob3B0aW9ucyk7Cgl9CgoJYm9vbChvcHRpb25zKSB7CgkJcmV0dXJuIGA8aW5wdXQgaWQ9IiR7dGhpcy5wcmVmaXgob3B0aW9ucyl9JHtvcHRpb25zLm5hbWV9IiBkYXRhLWRmb3JtPSJlbGVtZW50OiR7b3B0aW9ucy5uYW1lfSIgcmVxdWlyZWQ9IiR7b3B0aW9ucy5yZXF1aXJlZD8ndHJ1ZSc6J2ZhbHNlJ30iIGRhdGEtb3B0aW9ucz0nZGlzYWJsZWQ6JHtvcHRpb25zLmRpc2FibGVkPyd0cnVlJzonZmFsc2UnfSwke3RoaXMuZXZlbnRIYW5kbGVycyhvcHRpb25zKX0nIGNsYXNzPSJlYXN5dWktJHt0aGlzLnVpVHlwZXNbb3B0aW9ucy50eXBlXX0iICR7b3B0aW9ucy5jaGVja2VkPydjaGVja2VkJzonJ30gLz5gOwoJfQoKCWxhYmVsKG9wdGlvbnMpIHsKCQlyZXR1cm4gYDxzcGFuIGlkPSIke3RoaXMucHJlZml4KG9wdGlvbnMpfSR7b3B0aW9ucy5uYW1lfSIgc3R5bGU9IndpZHRoOiR7dGhpcy5jV2lkdGgob3B0aW9ucyl9cHgiIGRhdGEtb3B0aW9ucz0iZGlzYWJsZWQ6JHtvcHRpb25zLmRpc2FibGVkPyd0cnVlJzonZmFsc2UnfSI+JHt0aGlzLnZhbHVlKG9wdGlvbnMpfTwvc3Bhbj5gOwoJfQoKCXVybChvcHRpb25zKSB7CgkJcmV0dXJuIHRoaXMuc3RyaW5nKG9wdGlvbnMpLnJlcGxhY2UoIkZpZWxkQ2hhbmdlIiwgIlVSTENoYW5nZSIpOwoJfQoKCXRleHQob3B0aW9ucykgewoJCXJldHVybiBgPGlucHV0IGlkPSIke3RoaXMucHJlZml4KG9wdGlvbnMpfSR7b3B0aW9ucy5uYW1lfSIgY2xhc3M9ImVhc3l1aS0ke29wdGlvbnMuZWRpdG9yIHx8IHRoaXMudWlUeXBlc1tvcHRpb25zLnR5cGVdfSIgZGF0YS1vcHRpb25zPSdkaXNhYmxlZDoke29wdGlvbnMuZGlzYWJsZWQ/J3RydWUnOidmYWxzZSd9LCR7dGhpcy5ldmVudEhhbmRsZXJzKG9wdGlvbnMpfScgbXVsdGlsaW5lPSIke29wdGlvbnMuc2ltcGxlID8gJ2ZhbHNlJyA6ICd0cnVlJ30iIHN0eWxlPSJ3aGl0ZS1zcGFjZTpwcmUtd3JhcDt3aWR0aDoke3RoaXMuY1dpZHRoKG9wdGlvbnMpfXB4O2hlaWdodDoke3RoaXMuY0hlaWdodChvcHRpb25zKX1weCIgcmVxdWlyZWQ9IiR7b3B0aW9ucy5yZXF1aXJlZCA/ICd0cnVlJyA6ICdmYWxzZSd9IiB2YWx1ZT0iJHt0aGlzLnZhbHVlKG9wdGlvbnMpfSIgLz5gOwoJfQoKCXBhc3N3b3JkKG9wdGlvbnMpIHsKCQl2YXIgcmV0ID0gdGhpcy5zdHJpbmcob3B0aW9ucyk7CgkJcmV0ID0gcmV0LnJlcGxhY2UoJzxpbnB1dCAnLCAnPGlucHV0IHR5cGU9InBhc3N3b3JkIiAnKTsKCQlyZXR1cm4gcmV0OwoJfQoKCWZpbGUob3B0aW9ucykgewoJCXJldHVybiBgPGlucHV0IGlkPSIke3RoaXMucHJlZml4KG9wdGlvbnMpfSR7b3B0aW9ucy5uYW1lfSIgY2xhc3M9ImVhc3l1aS0ke3RoaXMudWlUeXBlc1tvcHRpb25zLnR5cGVdfSIgZGF0YS1vcHRpb25zPSJvbkNoYW5nZTpmdW5jdGlvbihuLG8pe3ZhciBzID0gJCgnIycgKyB0aGlzLmlkKS5maWxlYm94KCdvcHRpb25zJyk7IERGb3JtLlVwbG9hZEZpbGUocywgREZvcm0uYnlOYW1lKCcke29wdGlvbnMubmFtZX0nKSk7fSIgc3R5bGU9IndpZHRoOiR7dGhpcy5jV2lkdGgob3B0aW9ucyl9cHgiPmA7Cgl9CgoJaW1hZ2Uob3B0aW9ucykgewoJCXJldHVybiB0aGlzLmZpbGUob3B0aW9ucykgKyBgPGRpdiBpZD0iZGxnJHtvcHRpb25zLm5hbWV9IiBjbGFzcz0iZWFzeXVpLSR7dGhpcy51aVR5cGVzW29wdGlvbnMudHlwZV19IiB0aXRsZT0iSW1hZ2UgUHJldmlldyIgZGF0YS1vcHRpb25zPSJjbG9zZWQ6dHJ1ZSxpY29uQ2xzOidpY29uLXNhdmUnLHJlc2l6YWJsZTpmYWxzZSxtb2RhbDp0cnVlIiBzdHlsZT0id2lkdGg6NDAwcHg7aGVpZ2h0OjIwMHB4O3BhZGRpbmc6MTBweCI+PGltZyBpZD0iJHt0aGlzLnByZWZpeChvcHRpb25zKX0ke29wdGlvbnMubmFtZX0iIHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiLz48L2Rpdj5gOwoJfQoKCXByb2dyZXNzKG9wdGlvbnMpIHsKCQlpZiAoIW9wdGlvbnMuaGVpZ2h0KSBvcHRpb25zLmhlaWdodCA9IDIwOyAvLyBmaXggYmlnIHByb2dyZXNzCgkJcmV0dXJuIGA8ZGl2IGlkPSIke3RoaXMucHJlZml4KG9wdGlvbnMpfSR7b3B0aW9ucy5uYW1lfSIgY2xhc3M9ImVhc3l1aS0ke3RoaXMudWlUeXBlc1tvcHRpb25zLnR5cGVdfSIgZGF0YS1vcHRpb25zPSJ2YWx1ZToke3RoaXMudmFsdWUob3B0aW9ucyl9IiBzdHlsZT0id2lkdGg6JHt0aGlzLmNXaWR0aChvcHRpb25zKX1weDtoZWlnaHQ6JHt0aGlzLmNIZWlnaHQob3B0aW9ucyl9cHgiPjwvZGl2PmA7Cgl9CgoJZmxvd2NoYXJ0KG9wdGlvbnMpIHsKCQlyZXR1cm4gYDxkaXYgaWQ9ImZsdyR7b3B0aW9ucy5uYW1lfSIgd2lkdGg9IiR7dGhpcy5jV2lkdGgob3B0aW9ucyl9IiBoZWlnaHQ9IiR7dGhpcy5jSGVpZ2h0KG9wdGlvbnMpfSI+PC9kaXY+YDsKCX0KCgljaGFydChvcHRpb25zKSB7CgkJcmV0dXJuIGA8ZGl2IGlkPSJjaHQke29wdGlvbnMubmFtZX0iIHdpZHRoPSIke3RoaXMuY1dpZHRoKG9wdGlvbnMpfSIgaGVpZ2h0PSIke3RoaXMuY0hlaWdodChvcHRpb25zKX0iPjwvZGl2PmA7Cgl9CgoJZm9ybWF0dGVyKG5hbWUsIGMsIGpzb24pIHsKCQlqc29uID0ganNvbiA/ICciJyA6ICcnOwoJCXJldHVybiBgJHtqc29ufSh2YWx1ZSwgcm93LCBpbmRleCkgPT4ge3RyeXt2YXIgYyA9IChERm9ybS5ieU5hbWUoXGAke25hbWV9XGApLmNvbHVtbnMgfHwgW10pLmZpbmQoYyA9PiBjLmZpZWxkPT1cYCR7Yy5maWVsZH1cYCk7IHJldHVybiBjJiZjLmZvcm1hdD9jLmZvcm1hdCh2YWx1ZSxyb3csaW5kZXgpOnZhbHVlO31jYXRjaChleCl7cmV0dXJuIHZhbHVlO30gfSR7anNvbn1gOwoJfQoKCW1hcENvbHVtbnMob3B0aW9ucywganNvbikgewoJCWxldCBjVGl0bGUgPSBjID0+IGMudGl0bGUgfHwgdGhpcy5lbmdsaXNoKGMuZmllbGQpOwoKCQl2YXIgY29scyA9ICQuZ3JlcChvcHRpb25zLmNvbHVtbnMgfHwgW10sIGMgPT4gIWMuaWdub3JlKTsKCQlsZXQgcmV0ID0gIiI7CgkJaWYgKG9wdGlvbnMubXVsdGlwbGUpIHJldCArPSBgeyJmaWVsZCI6J2NrJywiY2hlY2tib3giOnRydWV9LGA7CgkJcmV0ID0gYCJmcm96ZW5Db2x1bW5zIjogW1tgOwoJCWlmICghb3B0aW9ucy5mcm96ZW4pIHsKCQkJcmV0ICs9IGB7ImZpZWxkIjoiJHtvcHRpb25zLmlkRmllbGQuZmllbGR9IiwidGl0bGUiOiAiJHtvcHRpb25zLmlkRmllbGQudGl0bGV9Iiwic29ydGFibGUiOiAidHJ1ZSIsICJmb3JtYXR0ZXIiOiAke3RoaXMuZm9ybWF0dGVyKG9wdGlvbnMubmFtZSwgb3B0aW9ucy5pZEZpZWxkLCBqc29uKX19LGA7CgkJCWlmIChvcHRpb25zLnRleHRGaWVsZC5maWVsZCAhPSBvcHRpb25zLmlkRmllbGQuZmllbGQpIHJldCArPSBgeyJmaWVsZCI6IiR7b3B0aW9ucy50ZXh0RmllbGQuZmllbGQgfHwgb3B0aW9ucy50ZXh0RmllbGQudGl0bGV9IiwidGl0bGUiOiIke29wdGlvbnMudGV4dEZpZWxkLnRpdGxlIHx8IG9wdGlvbnMudGV4dEZpZWxkLmZpZWxkfSIsIndpZHRoIjoiJHtvcHRpb25zLnRleHRGaWVsZC53aWR0aHx8MTIwfSIsICJzb3J0YWJsZSI6ICJ0cnVlIiwgImZvcm1hdHRlciI6ICR7dGhpcy5mb3JtYXR0ZXIob3B0aW9ucy5uYW1lLCBvcHRpb25zLnRleHRGaWVsZCwganNvbil9fWA7CgkJfSBlbHNlIHsKCQkJJC5tYXAoJC5ncmVwKGNvbHMsIGMgPT4gYy5mcm96ZW4pLCBjID0+IGB7ImZpZWxkIjoiJHtjLmZpZWxkIHx8IGNUaXRsZShjKX0iLCJ0aXRsZSI6IiR7Y1RpdGxlKGMpIHx8IGMuZmllbGR9Iiwid2lkdGgiOiIke2Mud2lkdGh8fDEyMH0iLCJhbGlnbiI6J2xlZnQnLCJzb3J0YWJsZSI6InRydWUiLCAiZm9ybWF0dGVyIjogJHt0aGlzLmZvcm1hdHRlcihvcHRpb25zLm5hbWUsIGMsIGpzb24pfX1gKS5qb2luKCIsIik7CgkJfQoJCXJldCArPSBgXV0sICJjb2x1bW5zIjogW1tgOwoJCXJldCArPSAkLm1hcCgkLmdyZXAoY29scywgYyA9PiAhYy5mcm96ZW4pLCBjID0+IGB7ImZpZWxkIjoiJHtjLmZpZWxkIHx8IGNUaXRsZShjKX0iLCJ0aXRsZSI6IiR7Y1RpdGxlKGMpIHx8IGMuZmllbGR9IiwiYWxpZ24iOiJsZWZ0Iiwic29ydGFibGUiOiJ0cnVlIiwgImZvcm1hdHRlciI6ICR7dGhpcy5mb3JtYXR0ZXIob3B0aW9ucy5uYW1lLCBjLCBqc29uKX19YCkuam9pbigiLCIpOwoJCXJldCArPSAnXV0nOwoKCQkvL2NvbnNvbGUubG9nKCJEeW5hRm9ybTo6bWFwQ29sdW1ucygiICsgb3B0aW9ucy5uYW1lICsgIik6ICIsIHJldCwganNvbik7CgkJcmV0dXJuIHJldDsKCX0KCglzZWxlY3Qob3B0aW9ucywgdGFnID0gb3B0aW9ucy50YWcsIHR5cGUpIHsKCQlyZXR1cm4gdGhpcy5jb21ibyhvcHRpb25zLCB0YWcsIHR5cGUpOwoJfQoKCXRyZWUob3B0aW9ucykgewoJCXJldHVybiB0aGlzLnNlbGVjdChvcHRpb25zLCAic2VsZWN0Iik7Cgl9CgoJbmF2aWdhdGlvbihvcHRpb25zKSB7CgkJcmV0dXJuIHRoaXMuY29tYm8ob3B0aW9ucywgJ3VsJywgJ3RyZWUnKTsKCX0KCgljb21ibyhvcHRpb25zLCB0YWcsIHR5cGUpIHsKCQl2YXIgY29scyA9ICQuZ3JlcChvcHRpb25zLmNvbHVtbnMgfHwgW10sIGMgPT4gIWMuaWdub3JlKTsKCQl0YWcgPSB0YWcgfHwgInNlbGVjdCI7CgoJCW9wdGlvbnMuaWRGaWVsZCA9ICQudW5pcXVlU29ydChbewoJCQlmaWVsZDogb3B0aW9ucy5pZEZpZWxkLAoJCQl0aXRsZTogb3B0aW9ucy5pZEZpZWxkCgkJfV0uY29uY2F0KCQuZ3JlcChjb2xzLCBjID0+IGMucHJpbWFyeSksIFt7CgkJCWZpZWxkOiAnSWQnLAoJCQl0aXRsZTogJ0lEJwoJCX1dKSkuZmluZCh4ID0+IHR5cGVvZih4LmZpZWxkKSAhPT0gInVuZGVmaW5lZCIpOwoKCQlvcHRpb25zLnRleHRGaWVsZCA9ICQudW5pcXVlU29ydChbewoJCQlmaWVsZDogb3B0aW9ucy50ZXh0RmllbGQsCgkJCXRpdGxlOiBvcHRpb25zLnRleHRGaWVsZAoJCX1dLmNvbmNhdCgkLmdyZXAoY29scywgYyA9PiBjLmRpc3BsYXkpLCBbewoJCQlmaWVsZDogJ19Ub1N0cmluZycsCgkJCXRpdGxlOiBvcHRpb25zLm5hbWUsCgkJfV0pKS5maW5kKHggPT4gdHlwZW9mKHguZmllbGQpICE9PSAidW5kZWZpbmVkIik7CgoJCS8vY29uc29sZS5sb2coIkR5bmFGb3JtOjpjb21ibygpOiBvcHRpb25zIiwgb3B0aW9ucyk7CgoJCXZhciBmdW4gPSB0eXBlIHx8IHRoaXMuZUZ1bihvcHRpb25zKTsKCgkJdmFyIGRyb3Bkb3duID0gWydjb21ib3RyZWVncmlkJywgJ2NvbWJvdHJlZScsICdjb21ib2dyaWQnLCAnc2VsZWN0J10uaW5kZXhPZihmdW4pID4gLTE7CgkJaWYgKGRyb3Bkb3duKSB0aGlzLnNlbGVjdHMucHVzaCh7CgkJCWlkOiAiY21iIiArIG9wdGlvbnMubmFtZSwKCQkJb3B0aW9uczogdGhpcy5ieU5hbWUob3B0aW9ucy5uYW1lKQoJCX0pOwoJCXRoaXMuc2VsZWN0cyA9ICQudW5pcXVlU29ydCh0aGlzLnNlbGVjdHMpOwoJCXZhciByZXQgPSBgPCR7dGFnfSBpZD0iY21iJHtvcHRpb25zLm5hbWV9IiBjbGFzcz0iZWFzeXVpLSR7ZnVufSIgc3R5bGU9Im1heC13aWR0aDoke2Ryb3Bkb3duPyc0MDBweCc6dGhpcy5jV2lkdGgob3B0aW9ucyl9OyB3aWR0aDoke3RoaXMuY1dpZHRoKG9wdGlvbnMpfXB4IiByZXF1aXJlZD0iJHsob3B0aW9ucy5yZXF1aXJlZCA/ICd0cnVlJyA6ICdmYWxzZScpfSIgZGF0YS1vcHRpb25zPSdkaXNhYmxlZDoke29wdGlvbnMuZGlzYWJsZWQ/J3RydWUnOidmYWxzZSd9LCR7dGhpcy5ldmVudEhhbmRsZXJzKG9wdGlvbnMpfSwgdmFsdWU6IiR7dGhpcy52YWx1ZShvcHRpb25zKX0iLCByb3dudW1iZXJzOiR7dHlwZW9mKG9wdGlvbnMucm93TnVtYmVycykhPT0ndW5kZWZpbmVkJz9vcHRpb25zLnJvd051bWJlcnM6KGZ1bi5pbmRleE9mKCd0cmVlJyk8LTE/J2ZhbHNlJzondHJ1ZScpfSwgcGFnaW5hdGlvbjoke3R5cGVvZihvcHRpb25zLnBhZ2luYXRpb24pIT09J3VuZGVmaW5lZCc/b3B0aW9ucy5wYWdpbmF0aW9uOihmdW4uaW5kZXhPZigndHJlZScpPC0xPydmYWxzZSc6J3RydWUnKX0sIHBhbmVsV2lkdGg6JHsyKnRoaXMuY1dpZHRoKG9wdGlvbnMpfSwgZml0Q29sdW1uczogdHJ1ZSwgc2luZ2xlU2VsZWN0OiB0cnVlLCBtdWx0aXBsZTokeyhvcHRpb25zLm11bHRpcGxlIHx8ICdmYWxzZScpfSwgaWRGaWVsZDogIiR7b3B0aW9ucy5pZEZpZWxkLmZpZWxkfSIsIGVuYWJsZUZpbHRlcjogJHtvcHRpb25zLmZpbHRlcj8ndHJ1ZSc6J2ZhbHNlJ30sIG5vd3JhcDogZmFsc2UsIHRleHRGaWVsZDogIiR7b3B0aW9ucy50ZXh0RmllbGQuZmllbGR9IiwgdHJlZUZpZWxkOiAiJHtvcHRpb25zLnRleHRGaWVsZC5maWVsZH0iLGA7CgkJaWYgKGZ1bi5pbmRleE9mKCd0cmVlJykgPT0gLTEpIHsKCQkJcmV0ICs9ICdmaXRDb2x1bW5zOiBmYWxzZSwnICsgdGhpcy5tYXBDb2x1bW5zKG9wdGlvbnMpOwoJCX0KCQlpZiAob3B0aW9ucy5kYXRhKSB7CgkJCXJldCArPSBgLGRhdGE6ICR7SlNPTi5zdHJpbmdpZnkob3B0aW9ucy5kYXRhKX1gOwoJCX0KCQlyZXQgKz0gYCc+YDsKCQlpZiAob3B0aW9ucy5vcHRpb25zKSB7CgkJCXJldCArPSAkLm1hcChvcHRpb25zLm9wdGlvbnMsIG8gPT4gYDxvcHRpb24gdmFsdWU9JyR7X0ZyRU1ELl90b0pTKG8pfSc+JHtvLm5hbWUgfHwgb308L29wdGlvbj5gKS5qb2luKCdcbicpOwoJCX0KCQlyZXQgKz0gYDwvJHt0YWd9PmA7CgkJLy8gY29uc29sZS5sb2cocmV0KTsKCQlyZXR1cm4gcmV0OwoJfQoKCWdyaWQob3B0aW9ucywgdGFnLCB0eXBlKSB7CgkJcmV0dXJuIHRoaXMuY29tYm8ob3B0aW9ucywgInRhYmxlIiwgImRhdGFncmlkIik7Cgl9CgoJdHJlZWdyaWQob3B0aW9ucykgewoJCXJldHVybiB0aGlzLmNvbWJvKG9wdGlvbnMsICd0YWJsZScsICd0cmVlJyk7Cgl9CgoJYXN5bmMgZG9MaW5rKGUsIGV2ZW50KSB7CgkJdGhpcy5idXN5KHRydWUpOwoJCXRyeSB7CgkJCWF3YWl0IGUubGlua3MuZmluZChsID0+IGwubGFiZWwgPT0gZXZlbnQudGFyZ2V0LmlubmVyVGV4dCkub25DbGljayh0aGlzLmdldCgpKTsKCQl9IGNhdGNoIChleCkgewoJCQljb25zb2xlLmxvZygiRHluYUZvcm06OmRvTGluaygpOiBFeGNlcHRpb246ICIgKyBleCk7CgkJfQoJCXRoaXMuYnVzeShmYWxzZSk7Cgl9CgoJRWRpdGVkVmFsdWUoZSkgewoJCXJldHVybiAodHlwZW9mKGFjZSkgIT09ICJ1bmRlZmluZWQiKSA/IGFjZS5lZGl0KCdwbmwnICsgZS5uYW1lKS5zZXNzaW9uLmdldFZhbHVlKCkgOiAnJzsKCX0KCglhc3luYyBQYW5PbkNsb3NlKGUpIHsKCQlpZiAoZS5lZGl0b3IpIHsKCQkJZS52YWx1ZSA9IHRoaXMuRWRpdGVkVmFsdWUoZSk7CgkJfQoJCWlmIChlLmNsb3NlKSB7CgkJCWF3YWl0IGUuY2xvc2UodGhpcy5nZXQoKSk7CgkJfQoJfQoKCWFzeW5jIFBlbmRBZnRlck9wZW4oZSkgewoJCWlmIChlLmVkaXRvciAmJiB0eXBlb2YoYWNlKSAhPT0gInVuZGVmaW5lZCIpIHsKCQkJYXdhaXQgX0ZyRU1ELk9wZW5FZGl0b3IoJ3BubCcgKyBlLm5hbWUgLyorICctY2VudGVyJyovICwgZS5sYW5ndWFnZSwgZS5sb2FkZXIgfHwgKG8gPT4gZS52YWx1ZSksIGUuc2F2ZXIsIHRoaXMuZ2V0KCksIGUpOwoJCX0KCQlpZiAoZS5vcGVuKSB7CgkJCWF3YWl0IGUub3Blbih0aGlzLmdldCgpKTsKCQl9Cgl9CgoJbGluayhvcHRpb25zKSB7CgkJcmV0dXJuIChvcHRpb25zLmxpbmtzIHx8IFtdKS5maWx0ZXIobCA9PiAhbC5pZ25vcmUpLm1hcChsID0+IGA8YSBocmVmPSIjIiBjbGFzcz0iZWFzeXVpLSR7dGhpcy51aVR5cGVzW29wdGlvbnMudHlwZV19IiBkYXRhLW9wdGlvbnM9JyR7dGhpcy5ldmVudEhhbmRsZXJzKG9wdGlvbnMpfSwgaWNvbkNsczoiaWNvbi0ke2wuaWNvbiB8fCAnb2snfSInPiR7bC5sYWJlbH08L2E+YCkuam9pbignXG4nKTsKCX0KCglhc3luYyBTZXRUcmVlRGF0YShlLCBuLCBkYXRhKSB7CgkJJC5lYWNoKCQoIiNjbWIiICsgZS5uYW1lKVt0aGlzLmVGdW4oZSldKCd0cmVlJykudHJlZSgiZ2V0Q2hpbGRyZW4iLCBuLnRhcmdldCksIChfLCBjKSA9PiAkKCIjY21iIiArIGUubmFtZSlbdGhpcy5lRnVuKGUpXSgndHJlZScpLnRyZWUoInJlbW92ZSIsIGMudGFyZ2V0KSk7CgkJJCgiI2NtYiIgKyBlLm5hbWUpW3RoaXMuZUZ1bihlKV0oJ3RyZWUnKS50cmVlKCJhcHBlbmQiLCB7CgkJCXBhcmVudDogbi50YXJnZXQsCgkJCWRhdGE6IGRhdGEKCQl9KTsKCQlyZXR1cm4gdHJ1ZTsKCX0KCglhc3luYyBFeHBhbmQoZSwgbikgewoJCXRoaXMuU2V0VHJlZURhdGEoZSwgbiwgW3sKCQkJaWQ6IG51bGwsCgkJCXRleHQ6ICJsb2FkaW5nLi4uIgoJCX1dKTsKCQl2YXIgb2JqID0ge307CgkJdmFyIHBGaWVsZCA9IGUucGFyZW50RmllbGQgfHwgJC5tYXAoJC5ncmVwKGUuY29sdW1ucyB8fCBbXSwgYyA9PiBjLnBhcmVudCksIGMgPT4gYy5maWVsZCkuY29uY2F0KFtudWxsXSlbMF07CgkJdmFyIGlkRmllbGQgPSAkLmdyZXAoZS5jb2x1bW5zIHx8IFtdLCBjID0+IGMucHJpbWFyeSkuY29uY2F0KGUuaWRGaWVsZClbMF0uZmllbGQ7CgkJaWYgKHBGaWVsZCkgewoJCQlvYmpbcEZpZWxkXSA9IHsKCQkJCV9zb3VyY2U6IG4uX3NvdXJjZQoJCQl9OwoJCQlpZiAoaWRGaWVsZCkgewoJCQkJb2JqW3BGaWVsZF1baWRGaWVsZF0gPSBuLmlkOwoJCQl9IGVsc2UgewoJCQkJb2JqW3BGaWVsZF0gPSBuLmlkOwoJCQl9CgkJfQoJCWxldCBkYXRhID0gYXdhaXQgdGhpcy5fbG9hZERhdGEoewoJCQlpZDogImNtYiIgKyBlLm5hbWUsCgkJCW9wdGlvbnM6IGUKCQl9LCBvYmopOwoJCXRoaXMuU2V0VHJlZURhdGEoZSwgbiwgZGF0YSk7Cgl9CgoJYXN5bmMgX2xvYWREYXRhKHMsIG8sIHN0YXJ0LCBlbmQpIHsKCQl2YXIgbmFtZSA9IChzICYmIHMub3B0aW9ucyA/IChzLm9wdGlvbnMuQ2xhc3MgPyBzLm9wdGlvbnMuQ2xhc3MuTmFtZS5yZXBsYWNlKCcgJywgJ18nKSA6IChzLm9wdGlvbnMudGFibGUgfHwgcy5vcHRpb25zLm5hbWUpKSA6IHMubmFtZSk7CgkJbmFtZSA9IG5hbWUudHJpbSgpOyAvLy5zcGxpdCgnLicpLnNsaWNlKC0xKVswXTsKCgkJbGV0IG9TY29wZSA9ICh0eXBlb2YoY29tcGFueSkgIT09ICd1bmRlZmluZWQnICYmIGNvbXBhbnkuU2NvcGUpID8gd2luZG93W2NvbXBhbnkuU2NvcGVdIDogd2luZG93OwoJCS8vY29uc29sZS5sb2coIkR5bmFGb3JtOjpfbG9hZERhdGEoKTogb1Njb3BlIiwgb1Njb3BlKTsKCgkJbyA9IG8gfHwgKChvU2NvcGUgJiYgb1Njb3BlW25hbWVdKSA/IG5ldyBvU2NvcGVbbmFtZV0oKSA6IHsKCQkJQWN0aXZlOiB0cnVlLAoJCX0pOwoKCQlvID0gKHR5cGVvZiBmaWx0ZXJzICE9PSAidW5kZWZpbmVkIiAmJiBmaWx0ZXJzICYmIGZpbHRlcnNbbmFtZV0pID8gZmlsdGVyc1tuYW1lXShvKSA6IG87CgkJdmFyIGZ1biA9IHRoaXMuZUZ1bihzLm9wdGlvbnMpOwoJCWxldCBzVGV4dCA9ICQoIiMiICsgcy5pZClbZnVuXSgnZ2V0VGV4dCcpOwoKCQlvID0gKHMgJiYgcy5vcHRpb25zICYmIHMub3B0aW9ucy5zb3VyY2UpID8gcy5vcHRpb25zLnNvdXJjZShvLCB0aGlzLmdldCgpLCBzVGV4dCkgOiBvOwoJCWxldCBuYW1lcyA9ICQudW5pcXVlU29ydChbcy5vcHRpb25zLnNlYXJjaEZpZWxkXS5jb25jYXQoJC5tYXAoJC5ncmVwKHMub3B0aW9ucy5jb2x1bW5zIHx8IFtdLCBjID0+IGMuc2VhcmNoKSwgYyA9PiBjLmZpZWxkKSwgWyJOYW1lIl0pKS5maWx0ZXIodiA9PiB2KTsKCQlpZiAoIW9bbmFtZXNbMF1dKSBvW25hbWVzWzBdXSA9IHNUZXh0OwoJCS8vY29uc29sZS5sb2coIkR5bmFGb3JtOjpfbG9hZERhdGEoKTogbyIsIG8pOwoJCXZhciBkYXRhID0gbnVsbDsKCgkJbGV0IGxpYiA9ICcnOwoJCWlmIChuYW1lLmluZGV4T2YoJy4nKSA+IDApIHsKCQkJbGliID0gbmFtZS5zcGxpdCgnLicpWzBdICsgJy4nOwoJCQluYW1lID0gbmFtZS5zcGxpdCgnLicpWzFdOwoJCX0KCgkJaWYgKHMub3B0aW9ucy5sb2FkZXIpIHsKCQkJZGF0YSA9IGF3YWl0IHMub3B0aW9ucy5sb2FkZXIodGhpcy5nZXQoKSwgcy5vcHRpb25zLCBvLCBzVGV4dCk7CgkJfSBlbHNlIGlmIChvICYmIHR5cGVvZihvLmZpbmRBbGwpID09PSAnZnVuY3Rpb24nKSB7CgkJCWRhdGEgPSBhd2FpdCBvLmZpbmRBbGwoKTsKCQl9IGVsc2UgaWYgKHR5cGVvZihjb21wYW55KSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29tcGFueS5saWJyYXJ5ICYmIGNvbXBhbnkuQ29kZSAmJiB3aW5kb3cuYkxvY2FsKSB7CgkJCS8vY29uc29sZS5sb2coIkRGb3JtOjpfbG9hZERhdGEoKTogc3IoKS5fKCIgKyBsaWIgKyBjb21wYW55LkNvZGUudG9Mb3dlckNhc2UoKSArIG5hbWUgKyAiRmluZGFsbCIgKyAiKSIsIG8pOwoJCQlkYXRhID0gYXdhaXQgdGhpcy5zcigpLl8obGliICsgY29tcGFueS5Db2RlLnRvTG93ZXJDYXNlKCkgKyBuYW1lICsgIkZpbmRhbGwiLCBudWxsLCBvLCBudWxsLCBzdGFydCwgZW5kKTsKCQl9IGVsc2UgaWYgKF9GckVNRC5hcGlTZXJ2ZXIpIHsKCQkJbyA9IE9iamVjdC5hc3NpZ24oLi4uT2JqZWN0LmtleXMobykubWFwKGsgPT4gKHsKCQkJCVtTdHJpbmcoaykuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgKyBTdHJpbmcoaykuc2xpY2UoMSldOiBvW2tdCgkJCX0pKSk7CgkJCS8vY29uc29sZS5sb2coIkRGb3JtOjpfbG9hZERhdGEoKTogdXNpbmcgX0ZyRU1ELmFwaVNlcnZlcjogbyIsIG8pOwoJCQlkYXRhID0gYXdhaXQgX0ZyRU1ELmFwaVNlcnZlci5fbmV3KG5hbWUpLl9mcm9tRG9jdW1lbnQobykuZmluZEFsbCgpOwoJCQkvL2RhdGEuZmlsdGVyKGQgPT4gZC5JZCAhPSBkLklkKS5mb3JFYWNoKGQgPT4gZC5JZCA9IGQuX3V1aWQobnVsbCwgbnVsbCwgdHJ1ZSkpOwoJCX0KCgkJaWYgKHMub3B0aW9ucy5wb3N0bG9hZCkgewoJCQlhd2FpdCBzLm9wdGlvbnMucG9zdGxvYWQoZGF0YSk7CgkJfQoJCSQuZWFjaChkYXRhLCAoaSwgZCkgPT4gewoJCQlkLl9fT1dORVIgPSBzOwoJCQkkLmVhY2gocy5vcHRpb25zLmNvbHVtbnMsIChfLCBjKSA9PiB7CgkJCQlpZiAoYy52YWx1ZSkgewoJCQkJCWRbYy5maWVsZF0gPSBjLnZhbHVlKGQsIGRhdGEsIGkpOwoJCQkJfQoJCQl9KTsKCQl9KTsKCQlpZiAoIXMub3B0aW9ucy5jb2x1bW5zICYmIGZ1bi5pbmRleE9mKCd0cmVlJykgPiAtMSkgewoJCQlkYXRhID0gJC5tYXAoZGF0YSwgZCA9PiB7CgkJCQlsZXQgcmV0ID0gewoJCQkJCWlkOiBkW3Mub3B0aW9ucy5pZEZpZWxkLmZpZWxkXSwKCQkJCQl0ZXh0OiBkW3Mub3B0aW9ucy50ZXh0RmllbGQuZmllbGRdLAoJCQkJCXN0YXRlOiBkLnN0YXRlIHx8IChzLm9wdGlvbnMubG9hZGVyID8gImZpbGUiIDogImNsb3NlZCIpLAoJCQkJCV9zb3VyY2U6IGQsCgkJCQl9OwoJCQkJcmV0LmNoaWxkcmVuID0gKHJldC5zdGF0ZSA9PSAiY2xvc2VkIikgPyBbewoJCQkJCXRleHQ6ICdsb2FkaW5nLi4uJwoJCQkJfV0gOiBudWxsOwoJCQkJcmV0dXJuIHJldDsKCQkJfSk7CgkJfQoJCXJldHVybiBkYXRhIHx8IFtdOwoJfQoKCWFzeW5jIGZpbGxEYXRhKGcsIG8sIHN0YXJ0LCBlbmQpIHsKCQl2YXIgcyA9IG51bGw7CgkJZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnNlbGVjdHMubGVuZ3RoOyBpKyspIHsKCQkJaWYgKHRoaXMuc2VsZWN0c1tpXS5pZCA9PSBnWzBdLmlkKSBzID0gdGhpcy5zZWxlY3RzW2ldOwoJCX0KCQlpZiAoIXMpIHJldHVybjsKCQl0aGlzLmJ1c3kodHJ1ZSk7CgkJdHJ5IHsKCQkJdmFyIGZ1biA9IGdbMF0uY2xhc3NMaXN0WyIwIl0ucmVwbGFjZSgnZWFzeXVpLScsICcnKTsKCQkJdHJ5IHsKCQkJCSQoIiMiICsgcy5pZClbZnVuXSgnZ3JpZCcpLmRhdGFncmlkKCdnZXRQYWdlcicpLnBhZ2luYXRpb24oJ2xvYWRpbmcnKTsKCQkJfSBjYXRjaCAoZXgpIHt9CgkJCWlmIChzLm9wdGlvbnMubm9sb2FkKSB7CgkJCQlsZXQgX2RhdGEgPSBudWxsOwoJCQkJdHJ5IHsKCQkJCQlfZGF0YSA9ICQoIiMiICsgcy5pZClbZnVuXSgnZ3JpZCcpLmRhdGFncmlkKCJnZXREYXRhIik7CgkJCQl9IGNhdGNoIChleCkgewoJCQkJCV9kYXRhID0gJCgiIyIgKyBzLmlkKVtmdW5dKCd0cmVlJykudHJlZSgnZ2V0Um9vdCcpOwoJCQkJfQoJCQkJaWYgKF9kYXRhKSB7CgkJCQkJcmV0dXJuIHRoaXMuYnVzeShmYWxzZSk7CgkJCQl9CgkJCX0KCQkJdmFyIGRhdGEgPSBhd2FpdCB0aGlzLl9sb2FkRGF0YShzLCBvLCBzdGFydCwgZW5kKTsKCQkJdHJ5IHsKCQkJCWlmICgkKCIjIiArIHMuaWQpW2Z1bl0oJ2dyaWQnKSkgJCgiIyIgKyBzLmlkKVtmdW5dKCdncmlkJykuZGF0YWdyaWQoJ2dldFBhZ2VyJykucGFnaW5hdGlvbignbG9hZGVkJyk7CgkJCX0gY2F0Y2ggKGV4KSB7fQoJCQl0cnkgewoJCQkJJCgiIyIgKyBzLmlkKVtmdW5dKCdncmlkJykuZGF0YWdyaWQoJ2xvYWREYXRhJywgewoJCQkJCXRvdGFsOiBkYXRhLkNvdW50IHx8IGRhdGEubGVuZ3RoLAoJCQkJCXJvd3M6IGRhdGEsCgkJCQl9KTsKCQkJfSBjYXRjaCAoZXgpIHsKCQkJCSQoIiMiICsgcy5pZClbZnVuXSgndHJlZScpLnRyZWUoJ2xvYWREYXRhJywgZGF0YSk7CgkJCX0KCQl9IGNhdGNoIChleCkgewoJCQljb25zb2xlLmxvZyhleCk7CgkJfQoJCXRoaXMuYnVzeShmYWxzZSk7Cgl9CgoJZXZlbnRIYW5kbGVycyhvcHRpb25zKSB7CgkJLy9jb25zb2xlLmxvZygiRHluYUZvcm06OmV2ZW50SGFuZGxlcnMoKTogb3B0aW9ucyIsIG9wdGlvbnMpOwoJCWlmICghdGhpcy5ieU5hbWUob3B0aW9ucy5uYW1lKSkgcmV0dXJuOyAvLyBpZiBub3QgYW4gZWxlbWVudCwgZG8gbm90IHJ1biB0aGUgaGFuZGxlcnMKCgkJcmV0dXJuIHRoaXMuZXZlbnRzLmZpbHRlcihlID0+IGUudHlwZSA9PSBvcHRpb25zLnR5cGUgfHwgdHlwZW9mKGUudHlwZSkgPT09ICd1bmRlZmluZWQnKS5tYXAoZSA9PiBgJHtlLm5hbWV9OiAoJHtlLnBhcmFtcyB8fCAnJ30pID0+IHt0cnl7REZvcm0uJHtlLmhhbmRsZXJ9KERGb3JtLmJ5TmFtZSgiJHtvcHRpb25zLm5hbWV9IikgfHwgJHtfRnJFTUQuX3RvSlMob3B0aW9ucyl9IHx8IHtuYW1lOiAiJHtvcHRpb25zLm5hbWV9Iix0eXBlOiAiJHtvcHRpb25zLnR5cGV9In0sICR7ZS5wYXJhbXN9KX1jYXRjaChleCl7Y29uc29sZS5sb2coIkV2ZW50IEVycm9yOiAke29wdGlvbnMubmFtZX0vJHtvcHRpb25zLnR5cGV9LyR7ZS5uYW1lfSIsIGV4KTt9fWApLmpvaW4oJywnKTsKCX0KCglhc3luYyBQYW5lbE9wZW4oZSkgewoJCWlmIChlLmVkaXRvcikgcmV0dXJuIHRydWU7CgkJbGV0IGNvbnRlbnQgPSBlLnZhbHVlOwoJCWlmIChlLmxvYWRlcikgewoJCQljb250ZW50ID0gYXdhaXQgZS5sb2FkZXIodGhpcy5nZXQoKSk7CgkJfQoJCWlmIChjb250ZW50KSB7CgkJCXRyeSB7CgkJCQkkKCIjcG5sIiArIGUubmFtZSkucGFuZWwoJ2JvZHknKS5odG1sKGNvbnRlbnQpOwoJCQkJY29uc29sZS5sb2coInBubCIgKyBlLm5hbWUgKyAiOiBDb250ZW50IFZhbGlkIik7CgkJCX0gY2F0Y2ggKGV4KSB7CgkJCQkvL2NvbnNvbGUubG9nKGV4KTsKCQkJfQoJCX0KCQlyZXR1cm4gY29udGVudDsKCX0KCglhc3luYyBTZWxlY3RDaGFuZ2Uob3B0aW9ucywgdGFiKSB7CgkJdGhpcy5idXN5KHRydWUpOwoJCSQuZ3JlcCh0aGlzLmVsZW1lbnRzLCBlID0+IGUudHlwZSA9PSAiZ3JpZCIgJiYgZS5ncm91cCA9PSB0YWIpLmZvckVhY2goZSA9PiAkKCIjY21iIiArIGUubmFtZSkuZGF0YWdyaWQoKSk7CgkJdGhpcy5idXN5KGZhbHNlKTsKCX0KCglhc3luYyBGaWVsZENoYW5nZShvcHRpb25zLCB2YWx1ZSkgewoJCXRoaXMuYnVzeSh0cnVlKTsKCQlpZiAob3B0aW9ucyAmJiBvcHRpb25zLmNoYW5nZSkgewoJCQlhd2FpdCBvcHRpb25zLmNoYW5nZSh0aGlzLmdldCgpLCB2YWx1ZSk7CgkJfQoJCXRoaXMuYnVzeShmYWxzZSk7Cgl9CgoJYXN5bmMgVVJMQ2hhbmdlKHMsIG9wdGlvbnMpIHsKCQlvcHRpb25zLmRhdGEgPSBhd2FpdCAkLmdldChzLnZhbHVlKTsKCQlyZXR1cm4gYXdhaXQgdGhpcy5GaWVsZENoYW5nZShzLCBvcHRpb25zKTsKCX0KCglhc3luYyBVcGxvYWRGaWxlKGYsIG9wdGlvbnMpIHsKCQl0aGlzLmJ1c3kodHJ1ZSk7CgkJdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CgkJdmFyIGZpbGVpZCA9IE1hdGgucmFuZG9tKCk7CgkJdmFyIG1ldGhvZCA9IG9wdGlvbnMubWV0aG9kIHx8ICJDb250ZW50TWFuYWdlci5jbXNVcGxvYWRGaWxlIjsKCQlmb3JtRGF0YS5hcHBlbmQoJ2ZpbGVpZCcsIGZpbGVpZCk7CgkJdmFyIGZpbGUgPSAkKCIjIiArIGYuZmlsZWJveElkKVswXS5maWxlc1swXTsKCQlmb3JtRGF0YS5hcHBlbmQoJ19fVUZJTEUnLCBmaWxlKTsKCQlpZiAob3B0aW9ucy5sb2NhbCkgewoJCQkvLyBoYW5kbGluZyB0aGUgZmlsZSBsb2NhbGx5CgkJCXZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwoJCQlyZWFkZXIub25sb2FkID0gYXN5bmMgKGUpID0+IHsKCQkJCXZhciBkYXRhID0gZS50YXJnZXQucmVzdWx0OwoKCQkJCWxldCBmRXh0ID0gZi52YWx1ZS5zcGxpdCgnLicpWzFdOwoJCQkJbGV0IGZMb2FkZXIgPSBudWxsOwoJCQkJbGV0IGZEYXRhID0gbnVsbDsKCgkJCQlpZiAoKGZFeHQgPT0gJ3htbCcgfHwgb3B0aW9ucy54bWwpICYmIHR5cGVvZihmYXN0WE1MKSAhPT0gJ3VuZGVmaW5lZCcpIHsKCQkJCQlmRGF0YSA9IG5ldyBmYXN0WE1MLlhNTFBhcnNlcih7CgkJCQkJCWlnbm9yZUF0dHJpYnV0ZXM6IGZhbHNlCgkJCQkJfSkucGFyc2UoZGF0YSk7CgkJCQkJZkxvYWRlciA9IG9wdGlvbnMueG1sOwoJCQkJfSBlbHNlIGlmICgoZkV4dCA9PSAneGxzeCcgfHwgb3B0aW9ucy5leGNlbCkgJiYgdHlwZW9mKEV4Y2VsSlMpICE9PSAndW5kZWZpbmVkJykgewoJCQkJCS8vIGRhdGEgaXMgYW4gZXhjZWwgYmluYXJ5IGZpbGUKCQkJCQljb25zdCB3YiA9IG5ldyBFeGNlbEpTLldvcmtib29rKCk7CgkJCQkJbGV0IHdvcmtib29rID0gYXdhaXQgd2IueGxzeC5sb2FkKGRhdGEpOwoJCQkJCWxldCBhckRhdGEgPSB7fTsKCQkJCQl3b3JrYm9vay5lYWNoU2hlZXQoKHNoZWV0LCBpZCkgPT4gewoJCQkJCQlsZXQgY29sdW1ucyA9IFtdOwoJCQkJCQlmb3IgKHZhciBpID0gMDsgc2hlZXQuZ2V0Q2VsbChTdHJpbmcuZnJvbUNoYXJDb2RlKCdBJy5jaGFyQ29kZUF0KDApICsgaSkgKyAnMScpLnZhbHVlOyBpKyspIGNvbHVtbnMucHVzaChzaGVldC5nZXRDZWxsKFN0cmluZy5mcm9tQ2hhckNvZGUoJ0EnLmNoYXJDb2RlQXQoMCkgKyBpKSArICcxJykudmFsdWUpOwoKCQkJCQkJbGV0IHJEYXRhID0gW107CgkJCQkJCWZvciAodmFyIGogPSAyOyBzaGVldC5nZXRDZWxsKCJBIiArIGopLnZhbHVlOyBqKyspIHsKCQkJCQkJCXJEYXRhLnB1c2goT2JqZWN0LmFzc2lnbiguLi5jb2x1bW5zLm1hcCgoYywgaSkgPT4gKHsKCQkJCQkJCQlbY106IHNoZWV0LmdldENlbGwoU3RyaW5nLmZyb21DaGFyQ29kZSgnQScuY2hhckNvZGVBdCgwKSArIGkpICsgaikudmFsdWUKCQkJCQkJCX0pKSkpOwoJCQkJCQl9CgoJCQkJCQlhckRhdGFbc2hlZXQubmFtZV0gPSByRGF0YTsKCQkJCQl9KTsKCQkJCQlmRGF0YSA9IGFyRGF0YTsKCQkJCQlmTG9hZGVyID0gb3B0aW9ucy5leGNlbDsKCQkJCX0KCgkJCQlERm9ybS5ieU5hbWUob3B0aW9ucy5uYW1lKS5kYXRhID0gZkRhdGEgfHwgZGF0YTsKCQkJCWF3YWl0IChmTG9hZGVyIHx8IG9wdGlvbnMudXBsb2FkKSh0aGlzLmdldCgpLCBmRGF0YSB8fCBkYXRhLCBmLnZhbHVlKTsKCgkJCQl0aGlzLmJ1c3koZmFsc2UpOwoJCQl9OwoJCQlpZiAob3B0aW9ucy5iaW5hcnkpIHsKCQkJCXJlYWRlci5yZWFkQXNCaW5hcnlTdHJpbmcoZmlsZSk7CgkJCX0gZWxzZSBpZiAob3B0aW9ucy5kYXRhdXJsKSB7CgkJCQlyZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTsKCQkJfSBlbHNlIHsKCQkJCXJlYWRlci5yZWFkQXNUZXh0KGZpbGUpOwoJCQl9CgkJfSBlbHNlIGlmIChtZXRob2QpIHsKCQkJJC5hamF4KHsKCQkJCXVybDogdGhpcy5zcigpLnNyVVJMICsgIiZtZXRob2Q9IiArIG1ldGhvZCArICImc0lucHV0PSIgKyBmaWxlaWQgKyAiJnByZVRhZz0mcG9zdFRhZz0iLAoJCQkJZGF0YTogZm9ybURhdGEsCgkJCQkvLyBUSElTIE1VU1QgQkUgRE9ORSBGT1IgRklMRSBVUExPQURJTkcKCQkJCWNhY2hlOiBmYWxzZSwKCQkJCWNvbnRlbnRUeXBlOiBmYWxzZSwKCQkJCXR5cGU6ICdQT1NUJywKCQkJCXByb2Nlc3NEYXRhOiBmYWxzZSwKCQkJCXN1Y2Nlc3M6IGRhdGEgPT4gewoJCQkJCXRoaXMuc3IoKS5ydW5TY3JpcHQoZGF0YSk7CgkJCQkJdGhpcy5ieU5hbWUob3B0aW9ucy5uYW1lKS5kYXRhID0gcmV0OwoJCQkJCWlmIChvcHRpb25zICYmIG9wdGlvbnMudXBsb2FkKSBvcHRpb25zLnVwbG9hZCh0aGlzLmdldCgpLCByZXQpOwoJCQkJCXRoaXMuYnVzeShmYWxzZSk7CgkJCQl9CgkJCX0pOwoJCX0KCX0KCgllRnVuKGUpIHsKCQl0cnkgewoJCQlpZiAoZS50eXBlID09ICJ0cmVlIikgewoJCQkJaWYgKGUuY29sdW1ucykgewoJCQkJCXJldHVybiAiY29tYm90cmVlZ3JpZCI7CgkJCQl9IGVsc2UgaWYgKHR5cGVvZihlLmNvbWJvKSAhPT0gJ3VuZGVmaW5lZCcgJiYgIWUuY29tYm8pIHsKCQkJCQlyZXR1cm4gJ3RyZWUnOwoJCQkJfSBlbHNlIHsKCQkJCQlyZXR1cm4gImNvbWJvdHJlZSI7CgkJCQl9CgkJCX0gZWxzZSBpZiAoZS50eXBlID09ICduYXZpZ2F0aW9uJykgewoJCQkJcmV0dXJuICd0cmVlJzsKCQkJfSBlbHNlIGlmIChlLnR5cGUgPT0gImNvbWJvdHJlZSIpIHsKCQkJCXJldHVybiAiY29tYm90cmVlZ3JpZCI7CgkJCX0gZWxzZSBpZiAoZS50eXBlID09ICJzZWxlY3QiICYmIGUub3B0aW9ucykgewoJCQkJcmV0dXJuICJjb21ib2JveCI7CgkJCX0KCQkJcmV0dXJuICJjb21ib2dyaWQiOwoJCX0gY2F0Y2ggKGV4KSB7CgkJCXJldHVybiAiY29tYm9ncmlkIjsKCQl9Cgl9CgoJX2ZpbGxXaW5kb3cod2luTmFtZSwgdiwgbWFwKSB7CgkJdiA9IHYgfHwge307CgkJbWFwID0gbWFwIHx8IHt9OwoJCWlmIChBcnJheS5pc0FycmF5KG1hcCkpIHsKCQkJbWFwID0gT2JqZWN0LmZyb21FbnRyaWVzKG5ldyBNYXAobWFwKSk7CgkJfQoKCQltYXAgPSAkLmV4dGVuZCh7fSwgbWFwLCBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmtleXModikubWFwKGsgPT4gW3dpbk5hbWUgKyBrLCBrXSkpKTsKCgkJbGV0IHMgPSB7fTsKCQlmb3IgKHZhciBtIGluIG1hcCkgewoJCQlpZiAodHlwZW9mKHZbbWFwW21dXSkgPT09ICJ1bmRlZmluZWQiKSB7CgkJCQkvL2NvbnNvbGUubG9nKCdpc191bmRlZmluZWQnLCBtLCBtYXBbbV0sIHZbbWFwW21dXSk7CgkJCQlzW21dID0gbWFwW21dOwoJCQl9IGVsc2UgewoJCQkJLy9jb25zb2xlLmxvZygnaXNfbm90X3VuZGVmaW5lZCcsIG0sIG1hcFttXSwgdlttYXBbbV1dKTsKCQkJCXNbbV0gPSB2W21hcFttXV07CgkJCX0KCQl9CgkJdGhpcy5jbGVhcih3aW5OYW1lKTsKCQkvL2NvbnNvbGUubG9nKCJzIiwgcyk7CgkJdGhpcy5zZXQocyk7CgkJJCgiI3BubF8iICsgd2luTmFtZSkud2luZG93KCJvcGVuIik7Cgl9CgoJd2luZG93VG9FbnRpdHkobywgYkVtcHR5LCBncmlkLCBwcmVmaXgsIGZpbHRlcikgewoJCW8gPSBvIHx8IHRoaXMuZ2V0KCk7CgkJZmlsdGVyID0gZmlsdGVyIHx8ICh2ID0+IHYpOwoJCWxldCByZXQgPSBncmlkID8gKGdyaWQuc2VsZWN0ZWQgfHwgZ3JpZCkgOiBudWxsOwoJCWlmIChiRW1wdHkpIHsKCQkJcmV0ID0ge307CgkJCW8gPSB7fTsKCQl9IGVsc2UgewoJCQlyZXQgPSAocmV0ICYmIHJldC5JZCkgPyB7CgkJCQlJZDogcmV0LklkCgkJCX0gOiB7fTsKCQl9CgoJCXRoaXMuZWxlbWVudHMuZmlsdGVyKGUgPT4gKHByZWZpeCA/IGUuZ3JvdXAgPT0gcHJlZml4IDogdHJ1ZSkgJiYgZS50eXBlICE9ICdsaW5rJyAmJiBbJ18nXS5pbmRleE9mKGUubmFtZS5yZXBsYWNlKHByZWZpeCwgIiIpKSA8IDApLmZvckVhY2goZSA9PiB7CgkJCXJldFtlLm5hbWUucmVwbGFjZShwcmVmaXgsICIiKV0gPSBvW2UubmFtZV07CgkJCXJldHVybiB0cnVlOwoJCX0pOwoKCQlmaWx0ZXIocmV0KTsKCgkJcmV0dXJuIHJldDsKCX0KCgliaW5kKG9iaikgewoJCXZhciBvYmpCaW5kID0gKG8sIGUpID0+IHsKCQkJb1t0aGlzLmVGdW4oZSldKHsKCQkJCW9uU2hvd1BhbmVsOiAoKSA9PiB7CgkJCQkJdGhpcy5maWxsRGF0YSgkKCIjIiArIGUuaWQpLCBudWxsLCAwLCAxMCk7CgkJCQl9LAoJCQkJb25DbGlja1JvdzogKGluZGV4LCByb3cpID0+IHsKCQkJCQl2YXIgcyA9IHJvdyA/IHJvdy5fX09XTkVSIDogbnVsbDsKCQkJCQkvLyBjb25zb2xlLmxvZygib25DbGlja1JvdygpOiAiLCBpbmRleCwgcm93LCBzKTsKCQkJCQlpZiAocyAmJiBzLm9wdGlvbnMuc2VsZWN0KSB7CgkJCQkJCXMub3B0aW9ucy5zZWxlY3Qocm93LCB0aGlzLmdldCgpKTsKCQkJCQl9CgkJCQl9CgkJCX0pOwoJCQl0cnkgewoJCQkJdmFyIGRnID0gb1t0aGlzLmVGdW4oZSldKCdncmlkJyk7CgkJCQkvLyBkZy5kYXRhZ3JpZCgnZW5hYmxlRmlsdGVyJykKCQkJCXZhciBzdGF0ZSA9IGRnLmRhdGEoJ2RhdGFncmlkJyk7CgkJCQl2YXIgb3B0cyA9IHN0YXRlLm9wdGlvbnM7CgkJCQl2YXIgb25CZWZvcmVMb2FkID0gb3B0cy5vbkJlZm9yZUxvYWQ7CgkJCQlvcHRzLm9uQmVmb3JlTG9hZCA9IChwYXJhbSkgPT4gewoJCQkJCXN0YXRlLmFsbFJvd3MgPSBudWxsOwoJCQkJCXJldHVybiBvbkJlZm9yZUxvYWQuY2FsbCh0aGlzLCBwYXJhbSk7CgkJCQl9OwoJCQkJdmFyIHBhZ2VyID0gZGcuZGF0YWdyaWQoJ2dldFBhZ2VyJyk7CgkJCQlkZy5kYXRhZ3JpZCgnZ2V0UGFuZWwnKS5wYW5lbCh7CgkJCQkJSUQ6IGkKCQkJCX0pOwoJCQkJcGFnZXIucGFnaW5hdGlvbih7CgkJCQkJb25TZWxlY3RQYWdlOiBmdW5jdGlvbihwYWdlTnVtLCBwYWdlU2l6ZSkgewoJCQkJCQl0cnkgewoJCQkJCQkJREZvcm0uZmlsbERhdGEoJCgiIyIgKyBERm9ybS5zZWxlY3RzWyQodGhpcy5wYXJlbnROb2RlKS5wYW5lbCgnb3B0aW9ucycpLklEXS5pZCksIG51bGwsIHBhZ2VTaXplICogKHBhZ2VOdW0gLSAxKSwgcGFnZVNpemUgKiBwYWdlTnVtKTsKCQkJCQkJfSBjYXRjaCAoX2V4KSB7CgkJCQkJCQljb25zb2xlLmxvZygiRHluYUZvcm06Om9uU2VsZWN0UGFnZSgpICIsIF9leCk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9KTsKCQkJCWRnLmRhdGFncmlkKCdsb2FkRGF0YScsIHN0YXRlLmRhdGEpOwoJCQl9IGNhdGNoIChleCkge30KCQl9OwoJCWlmIChvYmopIHsKCQkJb2JqQmluZChvYmopOwoJCX0gZWxzZSB7CgkJCWZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5zZWxlY3RzLmxlbmd0aDsgaSsrKSB7CgkJCQlpZiAodGhpcy5zZWxlY3RzW2ldLm9wdGlvbnMub3B0aW9ucykgewoJCQkJCS8vJCgiIyIgKyB0aGlzLnNlbGVjdHNbaV0uaWQpLmNvbWJvKCk7CgkJCQl9IGVsc2UgewoJCQkJCW9iakJpbmQoJCgiIyIgKyB0aGlzLnNlbGVjdHNbaV0uaWQpLCB0aGlzLnNlbGVjdHNbaV0pOwoJCQkJfQoJCQl9CgoJCQl0aGlzLmVsZW1lbnRzLmZpbHRlcihlID0+IGUud2luZG93ICYmIGUuZ3JvdXApLmZvckVhY2goZSA9PiB7CgkJCQlsZXQgdCA9ICQoIiN0YmNXaW5kb3ciKS50YWJzKCJnZXRUYWIiLCBlLmdyb3VwKTsKCQkJCWlmICh0KSB7CgkJCQkJdC5wYW5lbCgnb3B0aW9ucycpLnRhYi5oaWRlKCk7CgkJCQl9CgkJCX0pOwoJCX0KCX0KCgllbmdsaXNoKHMpIHsKCQlpZiAoIXMpIHJldHVybiAiIjsKCQl2YXIgcmVzdWx0ID0gcy5yZXBsYWNlKC8oW0EtWl0pL2csICIgJDEiKTsKCQlyZXN1bHQgPSByZXN1bHQucmVwbGFjZSgvXy9nLCAnJyk7CgkJcmV0dXJuIHJlc3VsdC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHJlc3VsdC5zbGljZSgxKTsKCX0KCglvblRvZ2dsZShlLCBiVmFsdWUpIHsKCQlsZXQgc1RhZyA9IGAjZkVsZW1lbnRfJHtlLmZvci5uYW1lfSA+IC5lYXN5dWktJHt0aGlzLnVpVHlwZXNbZS5mb3IudHlwZV19YDsKCQlsZXQgb1RhZyA9ICQoc1RhZyk7CgkJZS5mb3IuZW5hYmxlZCA9IHR5cGVvZihiVmFsdWUpID09PSAidW5kZWZpbmVkIiA/ICFlLmZvci5lbmFibGVkIDogYlZhbHVlOwoKCQlvVGFnLnByb3AoImRpc2FibGVkIiwgIWUuZm9yLmVuYWJsZWQpOwoJCS8vb1RhZ1t0aGlzLnVpVHlwZXNbZS5mb3IudHlwZV1dKGUuZm9yLmVuYWJsZWQgPyAiZW5hYmxlIiA6ICJkaXNhYmxlIik7CgkJY29uc29sZS5sb2coc1RhZywgb1RhZywgdGhpcy51aVR5cGVzW2UuZm9yLnR5cGVdLCBlLmZvci5lbmFibGVkKTsKCX0KCglyZW5kZXIobmFtZSwgdGl0bGUsIGVsZW1lbnRzLCBidXR0b25zLCBiRml4ZWQpIHsKCQl0aGlzLmVsZW1lbnRzID0gKGVsZW1lbnRzIHx8IFtdKS5maWx0ZXIoZSA9PiAhZS5pZ25vcmUpOwoKCQl0aGlzLmJ1dHRvbnMgPSBidXR0b25zIHx8IFtdOwoJCXRoaXMuc2VsZWN0cyA9IFtdOwoJCXRoaXMuZ3JpZHMgPSBbXTsKCgkJdGhpcy5lbGVtZW50cy5maWx0ZXIoZSA9PiBlLnR5cGUgPT0gIndpbmRvdyIpLmZvckVhY2godyA9PiB0aGlzLmVsZW1lbnRzLnNwbGljZSh0aGlzLmVsZW1lbnRzLmZpbmRJbmRleChlID0+IGUubmFtZSA9PSB3Lm5hbWUpLCAwLCB7CgkJCW5hbWU6ICJfIiArIHcubmFtZSwKCQkJdHlwZTogImxpbmsiLAoJCQl0aXRsZTogdy50aXRsZSB8fCB0aGlzLmVuZ2xpc2gody5uYW1lKSwKCQkJZ3JvdXA6IHcuZ3JvdXAsCgkJCXdpbmRvdzogdy53aW5kb3csCgkJCXNlY3Rpb246IHcuc2VjdGlvbiwKCQkJbGlua3M6IFt7CgkJCQlsYWJlbDogJ09wZW4nLAoJCQkJaWNvbjogJ2VkaXQnLAoJCQkJb25DbGljazogbyA9PiAkKCIjcG5sIiArIHcubmFtZSkud2luZG93KCdvcGVuJykKCQkJfV0sCgkJfSkpOwoKCQl0aGlzLnNyKCkuZ3JvdXBCeSh0aGlzLmVsZW1lbnRzLmZpbHRlcihlID0+IGUud2luZG93KSwgImdyb3VwIikuZm9yRWFjaChrdiA9PiB7CgkJCWlmICgha3Yua2V5KSByZXR1cm47CgoJCQlsZXQgZSA9IHsKCQkJCW5hbWU6ICJfIiArIGt2LmtleSwKCQkJCXRpdGxlOiBrdi5rZXksCgkJCQl0eXBlOiAid2luZG93IiwKCQkJCWdyb3VwOiBrdi5rZXksCgkJCQl3aWR0aDogdGhpcy53aWR0aCAqIDAuOSwKCQkJCWhlaWdodDogdGhpcy5oZWlnaHQgKiAwLjksCgkJCQlsb2FkZXI6IG8gPT4gewoJCQkJCWt2LnZhbHVlcy5maWx0ZXIodiA9PiB2LnR5cGUgIT09ICdsaW5rJyB8fCAodi50eXBlID09ICdsaW5rJyAmJiB2Lm5hbWUuc3RhcnRzV2l0aCgnXycpKSkuZm9yRWFjaCh2ID0+ICQoIiNwbmxfIiArIHYuZ3JvdXAgKyAnLWNlbnRlcicpLmFwcGVuZCgkKCIjZkVsZW1lbnRfIiArIHYubmFtZSkpKTsKCQkJCQlyZXR1cm4gbnVsbDsKCQkJCX0sCgkJCQlidXR0b25zOiBbXS5jb25jYXQuYXBwbHkoW10sIGt2LnZhbHVlcy5maWx0ZXIodiA9PiB2LnR5cGUgPT0gJ2xpbmsnICYmICF2Lm5hbWUuc3RhcnRzV2l0aCgnXycpKS5tYXAodiA9PiBbLi4udi5saW5rcy5tYXAobCA9PiAoewoJCQkJCW5hbWU6IGwubmFtZSB8fCBsLmxhYmVsLAoJCQkJCXRpdGxlOiBsLnRpdGxlIHx8IGwubGFiZWwsCgkJCQkJb25DbGljazogbC5vbkNsaWNrLAoJCQkJCWljb246IGwuaWNvbiwKCQkJCQl3aW5kb3c6IHRydWUsCgkJCQkJZ3JvdXA6IGt2LmtleSwKCQkJCX0pKV0pKSwKCQkJfTsKCQkJdGhpcy5idXR0b25zLnB1c2goLi4uZS5idXR0b25zKTsKCgkJCXRoaXMuZWxlbWVudHMucHVzaChlKTsKCQl9KTsKCgkJbGV0IHJldCA9ICIiOwoJCXRoaXMuZWxlbWVudHMuZmlsdGVyKGUgPT4gIWUuem9uZSkuZm9yRWFjaChlID0+IGUuem9uZSA9ICdjZW50ZXInKTsKCQlsZXQgd09wdGlvbnMgPSB7CgkJCW5hbWU6IG5hbWUgfHwgdGhpcy5uYW1lLAoJCQl0aXRsZTogdGl0bGUgfHwgdGhpcy50aXRsZSwKCQkJdHlwZTogJ3dpbmRvdycsCgkJCXZpc2libGU6IHRydWUsCgkJCXdpZHRoOiB0aGlzLndpZHRoLAoJCQloZWlnaHQ6IHRoaXMuaGVpZ2h0LAoJCQlmaXhlZDogYkZpeGVkLAoJCQlsaW5rczogW3sKCQkJCWljb246ICJoZWxwIiwKCQkJCWFjdGlvbjogbyA9PiAkKCIjcG5sX19Db25zb2xlIikud2luZG93KCdvcGVuJykKCQkJfV0sCgkJCWJ1dHRvbnM6IHRoaXMuYnV0dG9ucy5maWx0ZXIoYiA9PiAhYi53aW5kb3cpLAoJCX07CgkJdGhpcy5zcigpLmdyb3VwQnkodGhpcy5lbGVtZW50cywgJ3pvbmUnKS5maWx0ZXIoemcgPT4gemcua2V5KS5mb3JFYWNoKHpnID0+IHsKCQkJd09wdGlvbnNbemcua2V5XSA9IHRoaXMucmVuZGVyRWxlbWVudHMoemcudmFsdWVzKTsKCQl9KTsKCgkJcmV0ID0gdGhpcy53aW5kb3cod09wdGlvbnMpOwoJCS8vIGNvbnNvbGUubG9nKHJldCk7CgoJCXJldHVybiByZXQ7Cgl9CgoJY1dpZHRoKG9wdGlvbnMpIHsKCQlsZXQgcmV0ID0gTWF0aC5mbG9vcigoKG9wdGlvbnMgPyBvcHRpb25zLndpZHRoIDogbnVsbCkgfHwgKHRoaXMud2lkdGggLyAzKSkpOwoJCWlmIChvcHRpb25zLnpvbmUgPT0gJ2Vhc3QnIHx8IG9wdGlvbnMuem9uZSA9PSAnd2VzdCcpIHsKCQkJcmV0ID0gMC4yNSAqIHJldDsgLy8gOTAlIG9mIDMvMTAsIHRoZSB3aWR0aCBvZiB0aGUgbm9ybWFsIGVsZW1lbnQKCQl9IGVsc2UgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5lZGl0b3IpIHsKCQkJcmV0ID0gd2luZG93LmlubmVyV2lkdGg7CgkJfSBlbHNlIGlmIChvcHRpb25zICYmIG9wdGlvbnMud2lkdGggJiYgdHlwZW9mKG9wdGlvbnMud2lkdGgpID09PSAnc3RyaW5nJykgewoJCQlyZXQgPSB0aGlzLndpZHRoOwoJCX0gZWxzZSBpZiAob3B0aW9ucyAmJiBvcHRpb25zLnR5cGUgPT0gJ3dpbmRvdycgJiYgIW9wdGlvbnMud2lkdGgpIHsKCQkJcmV0ID0gdGhpcy53aWR0aCAqIDAuOTsKCQl9CgoJCS8vIGNvbnNvbGUubG9nKG9wdGlvbnMubmFtZSArICI6IGNXaWR0aCA9ICIgKyByZXQsIG9wdGlvbnMuem9uZSk7CgkJcmV0dXJuIHJldDsKCX0KCgl3aW5kb3cob3B0aW9ucykgewoJCW9wdGlvbnMudGl0bGUgPSBvcHRpb25zLnRpdGxlIHx8IG9wdGlvbnMubmFtZTsKCQl2YXIgcmV0ID0gYAoJCTxkaXYgaWQgPSAicG5sJHtvcHRpb25zLm5hbWV9IiBjbGFzcz0iZWFzeXVpLXdpbmRvdyIgdGl0bGU9IiR7b3B0aW9ucy50aXRsZSB8fCB0aGlzLmVuZ2xpc2gob3B0aW9ucy5uYW1lKX0iIGRhdGEtb3B0aW9ucz0nJHt0aGlzLmV2ZW50SGFuZGxlcnMob3B0aW9ucyl9LCBjbG9zZWQ6JHshb3B0aW9ucy52aXNpYmxlfSxtaW5pbWl6YWJsZTokeyFvcHRpb25zLmZpeGVkfSxtYXhpbWl6YWJsZTokeyFvcHRpb25zLmZpeGVkfSxjbG9zYWJsZTokeyFvcHRpb25zLmZpeGVkfSxjb2xsYXBzaWJsZTokeyFvcHRpb25zLmZpeGVkfSxkcmFnZ2FibGU6JHshb3B0aW9ucy5maXhlZH0scmVzaXphYmxlOiR7IW9wdGlvbnMuZml4ZWR9LGljb25DbHM6Imljb24tJHtvcHRpb25zLmljb259IiwgdG9vbHM6IiMke29wdGlvbnMubmFtZX1fdG9vbHMiJyBzdHlsZT0id2lkdGg6JHt0aGlzLmNXaWR0aChvcHRpb25zKX1weDtoZWlnaHQ6JHt0aGlzLmNIZWlnaHQob3B0aW9ucyl9cHg7cGFkZGluZzoxMHB4OyI+CgkJICAgIDxkaXYgY2xhc3M9ImVhc3l1aS1sYXlvdXQiIGRhdGEtb3B0aW9ucz0iZml0OnRydWUiPgoJCWA7CgoJCWxldCBiWm9uZSA9IG9wdGlvbnMuc291dGggPyAnc291dGgnIDogKHRoaXMuem9uZXMuZmluZCh6ID0+IHogPT0gJ3NvdXRoJykgfHwgdGhpcy56b25lc1swXSk7CgkJb3B0aW9uc1tiWm9uZV0gPSBvcHRpb25zW2Jab25lXSB8fCBbXTsKCQlsZXQgeldpZHRoID0gTWF0aC5taW4oMTIwLCB0aGlzLndpZHRoICogMC45NSAvIChvcHRpb25zLmJ1dHRvbnMgPyBvcHRpb25zLmJ1dHRvbnMubGVuZ3RoIDogMSksIHRoaXMuY1dpZHRoKG9wdGlvbnMpKTsKCQlvcHRpb25zW2Jab25lXS5wdXNoKGA8ZGl2IGlkPSJwbmwke29wdGlvbnMubmFtZX0tYnV0dG9ucyIgZGF0YS1vcHRpb25zPSJyZWdpb246JyR7YlpvbmV9Jyxib3JkZXI6ZmFsc2UiIHN0eWxlPSJ0ZXh0LWFsaWduOnJpZ2h0O3BhZGRpbmc6NXB4IDAgMDsiPmAgKyAkLm1hcCgkLmdyZXAob3B0aW9ucy5idXR0b25zIHx8IFtdLCBiID0+ICFiLmlnbm9yZSksIGIgPT4gYDxhIGlkPScke2IubmFtZX0nIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImVhc3l1aS1saW5rYnV0dG9uIGM2IiBpY29uQ2xzPSJpY29uLSR7Yi5pY29uIHx8ICdzYXZlJ30iIHN0eWxlPSJ3aWR0aDoke3pXaWR0aH1weCIgb25jbGljaz0nREZvcm0uZG9DbGljaygke19GckVNRC5fdG9KUyhiKX0pJz4ke2IudGl0bGUgfHwgYi5uYW1lfTwvYT4mbmJzcDsmbmJzcDtgKS5qb2luKCcnKSArIGA8L2Rpdj5gKTsKCgkJdGhpcy56b25lcy5maWx0ZXIoeiA9PiBvcHRpb25zW3pdKS5mb3JFYWNoKHogPT4gewoJCQlyZXQgKz0gYAoJCSAgICAgICAgPGRpdiBkYXRhLW9wdGlvbnM9InJlZ2lvbjonJHt6fSciIHRpdGxlPSIkeyh6PT0nd2VzdCcgfHwgej09J2Vhc3QnKT8nJm5ic3A7JzonJ30iIHN0eWxlPSdoZWlnaHQ6JHsoej09J25vcnRoJ3x8ej09J3NvdXRoJyk/MTA6MTAwfSU7d2lkdGg6JHsoKHo9PSdlYXN0J3x8ej09J3dlc3QnKT8wLjE6MSkqdGhpcy5jV2lkdGgob3B0aW9ucyl9cHgnPgogICAgICAgIAkJICAgICR7KEFycmF5LmlzQXJyYXkob3B0aW9uc1t6XSk/b3B0aW9uc1t6XTpbb3B0aW9uc1t6XV0pLmpvaW4oJycpfQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIGA7CgkJfSk7CgoJCXJldCArPSBgPC9kaXY+PC9kaXY+YDsKCgkJLy8gbGlua3MgKHRvb2xzKQoJCXJldCArPSBgPGRpdiBpZD0iJHtvcHRpb25zLm5hbWV9X3Rvb2xzIj5gICsgKG9wdGlvbnMubGlua3MgfHwgW10pLmZpbHRlcihsID0+ICFsLmlnbm9yZSkucmV2ZXJzZSgpLm1hcChsID0+IGA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIHN0eWxlPSJjb2xvcjpibGFjayIgY2xhc3M9ImZhcyBmYS0ke2wuaWNvbiB8fCAnYWRkJ30iIG9uY2xpY2s9Jyhhc3luYyAoKSA9PiB7dmFyIGEgPSAke19GckVNRC5fdG9KUyhsKX07ICQoIiNwbmwke29wdGlvbnMubmFtZX0iKS53aW5kb3coInNldFRpdGxlIiwgIiR7b3B0aW9ucy50aXRsZX06ICIgKyBhLm5hbWUpOyBhd2FpdCBhLmFjdGlvbihERm9ybS5nZXQoKSwgYSwgJHtfRnJFTUQuX3RvSlMob3B0aW9ucyl9KTsgJCgiI3BubCR7b3B0aW9ucy5uYW1lfSIpLndpbmRvdygic2V0VGl0bGUiLCAiJHtvcHRpb25zLnRpdGxlfSIpO30pKCknPjwvYT5gKS5qb2luKCdcbicpICsgYDwvZGl2PmA7CgoJCS8vIGNvbnNvbGUubG9nKCJEeW5hRm9ybTo6d2luZG93KCkiLCByZXQpOwoKCQlyZXR1cm4gcmV0OwoJfQoKCWFzeW5jIF9lbmQoKSB7CgkJbGV0IG8gPSB0aGlzLmdldCgpOwoKCQkvLyBkbyBub3QgdXNlIHRoZSBmaXJzdCBidXR0b24sIGJlY2F1c2UgbWFueSBmb3JtcyBoYXZlIGEgQ2FuY2VsIGJ1dHRvbiBvbmx5CgkJbGV0IGJ1dHRvbiA9IHRoaXMuYnV0dG9ucy5maW5kKGIgPT4gYi5hdXRvU3VibWl0KSAvKiB8fCB0aGlzLmJ1dHRvbnNbMF0qLyA7CgkJaWYgKGJ1dHRvbiAmJiBvICYmIE9iamVjdC52YWx1ZXMobykubGVuZ3RoICYmICh0eXBlb2YoYnV0dG9uLmF1dG9TdWJtaXQpID09PSAidW5kZWZpbmVkIiB8fCBidXR0b24uYXV0b1N1Ym1pdCkpIHsKCQkJbGV0IHYgPSBPYmplY3QudmFsdWVzKG8pLnJlZHVjZSgodCwgdikgPT4gewoJCQkJcmV0dXJuICgodHlwZW9mKHYpICE9PSAib2JqZWN0IikgPyAxIDogMCkgKiAodiA/IDEgOiAwKTsKCQkJfSk7CgkJCS8vY29uc29sZS5sb2cobywgT2JqZWN0LnZhbHVlcyhvKSwgdik7CgkJCWlmICh2KSB7CgkJCQkvLyBhbGwgZmllbGRzIGhhdmUgdmFsdWVzCgkJCQlhd2FpdCB0aGlzLmRvQ2xpY2soYnV0dG9uKTsKCgkJCX0KCQl9Cgl9CgoJZm9vdGVyKGJGaXhlZCkgewoJCXJldHVybiBgPC9mb3JtPmAgKyBgPGRpdiBpZD0iZGxnLWJ1dHRvbnMiPmAgKyB0aGlzLmJ1dHRvbnMuZmlsdGVyKGIgPT4gIWIud2luZG93KS5tYXAoYiA9PiBgPGEgaWQ9JyR7Yi5uYW1lfScgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBjbGFzcz0iZWFzeXVpLWxpbmtidXR0b24gYzYiIGljb25DbHM9Imljb24tJHtiLmljb24gfHwgJ3NhdmUnfSIgc3R5bGU9IndpZHRoOiR7TWF0aC5taW4oMTIwLCB0aGlzLndpZHRoICogMC45NSAvIHRoaXMuYnV0dG9ucy5sZW5ndGgsIHRoaXMuY1dpZHRoKCkpfXB4IiBvbmNsaWNrPSdERm9ybS5kb0NsaWNrKCR7X0ZyRU1ELl90b0pTKGIpfSknPiR7Yi50aXRsZSB8fCB0aGlzLmVuZ2xpc2goYi5uYW1lKX08L2E+Jm5ic3A7Jm5ic3A7YCkuam9pbignJykgKyAiPC9kaXY+IiArIChiRml4ZWQgPyAiIiA6ICc8L2Rpdj4nKTsKCX0KCgloZWFkZXIobmFtZSwgdGl0bGUsIGJGaXhlZCwgbGlua3MpIHsKCQl0aGlzLnRpdGxlID0gdGl0bGUgfHwgdGhpcy50aXRsZTsKCQluYW1lID0gbmFtZSB8fCB0aGlzLm5hbWU7CgkJdmFyIHJldCA9ICcnOwoKCQlyZXQgKz0gdGhpcy53aW5kb3coewoJCQluYW1lOiAiX19Db25zb2xlIiwKCQkJdHlwZTogIndpbmRvdyIsCgkJCWVkaXRvcjogdHJ1ZSwKCQkJbG9hZGVyOiBvID0+IHdpbmRvdy5sb2dzLnNsaWNlKCkucmV2ZXJzZSgpLm1hcChsID0+IGwuZGF0ZS50b0lTT1N0cmluZygpICsgIjogIiArIGwuYXJncy5tYXAocyA9PiB0eXBlb2YocykgPT09ICdvYmplY3QnID8gKChvYmosIGluZGVudCA9IDIpID0+IHsKCQkJCWxldCBjYWNoZSA9IFtdOwoJCQkJY29uc3QgcmV0VmFsID0gSlNPTi5zdHJpbmdpZnkoCgkJCQkJb2JqLAoJCQkJCShrZXksIHZhbHVlKSA9PgoJCQkJCXR5cGVvZiB2YWx1ZSA9PT0gIm9iamVjdCIgJiYgdmFsdWUgIT09IG51bGwgPwoJCQkJCWNhY2hlLmluY2x1ZGVzKHZhbHVlKSA/CgkJCQkJdW5kZWZpbmVkIC8vIER1cGxpY2F0ZSByZWZlcmVuY2UgZm91bmQsIGRpc2NhcmQga2V5CgkJCQkJOgoJCQkJCWNhY2hlLnB1c2godmFsdWUpICYmIHZhbHVlIC8vIFN0b3JlIHZhbHVlIGluIG91ciBjb2xsZWN0aW9uCgkJCQkJOgoJCQkJCXZhbHVlLAoJCQkJCWluZGVudAoJCQkJKTsKCQkJCWNhY2hlID0gbnVsbDsKCQkJCXJldHVybiByZXRWYWw7CgkJCX0pKHMpIDogcykuam9pbignLCAnKSkuam9pbignXG4nKSwKCQl9KTsKCgkJaWYgKCFiRml4ZWQpIHsKCQkJbGlua3MgPSAobGlua3MgfHwgW10pLmZpbHRlcihsID0+ICFsLmlnbm9yZSk7CgkJCWxldCB0RGF0YSA9ICIiOwoJCQlpZiAobGlua3MubGVuZ3RoKSB7CgkJCQlyZXQgKz0gYDxkaXYgaWQ9IiR7dGhpcy5uYW1lfV90b29scyI+YCArIGxpbmtzLm1hcChsID0+IGA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJpY29uLSR7bC5pY29ufSIgb25jbGljaz0nKGFzeW5jICgpID0+IHt2YXIgYSA9ICR7X0ZyRU1ELl90b0pTKGwpfTsgJCgiI3dpbiR7dGhpcy5uYW1lfSIpLndpbmRvdygic2V0VGl0bGUiLCAiJHt0aGlzLnRpdGxlfTogIiArIGEubmFtZSk7IGF3YWl0IGEuYWN0aW9uKERGb3JtLmdldCgpKTsgJCgiI3dpbiR7dGhpcy5uYW1lfSIpLndpbmRvdygic2V0VGl0bGUiLCAiJHt0aGlzLnRpdGxlfSIpO30pKCknPjwvYT5gKS5qb2luKCdcbicpICsgIjwvZGl2PiI7CgkJCQl0RGF0YSA9IGAsdG9vbHM6IiMke3RoaXMubmFtZX1fdG9vbHMiYDsKCQkJfQoJCQlyZXQgKz0gYDxkaXYgaWQ9J3dpbiR7dGhpcy5uYW1lfScgY2xhc3M9J2Vhc3l1aS13aW5kb3cnIHRpdGxlPScke3RoaXMudGl0bGUgfHwgdGhpcy5lbmdsaXNoKHRoaXMubmFtZSl9JyBkYXRhLW9wdGlvbnM9J2ljb25DbHM6Imljb24tc2F2ZSIgJHt0RGF0YX0nIHN0eWxlPSd3aWR0aDoke3RoaXMud2lkdGh9cHg7aGVpZ2h0OiR7dGhpcy5oZWlnaHR9cHg7cGFkZGluZzoxMHB4Oyc+YDsKCQl9CgkJcmV0dXJuIHJldCArIGA8Zm9ybSBpZD0iZnJtJHt0aGlzLm5hbWV9IiBtZXRob2Q9InBvc3QiIG5vdmFsaWRhdGU+YDsKCX0KCglyZW5kZXJFbGVtZW50cyhlbGVtZW50cykgewoJCWVsZW1lbnRzID0gZWxlbWVudHMgfHwgdGhpcy5lbGVtZW50czsKCgkJdmFyIHRXaWR0aCA9IE1hdGguZmxvb3IodGhpcy53aWR0aCAqIDAuOTUpOwoJCXZhciB0SGVpZ2h0ID0gTWF0aC5mbG9vcih0aGlzLmhlaWdodCAqIDAuODUpOwoKCQlsZXQgcmV0ID0gJyc7CgkJdmFyIGdFbGVtZW50cyA9IHRoaXMuc3IoKS5ncm91cEJ5KGVsZW1lbnRzLCAiZ3JvdXAiKTsKCQlpZiAoZ0VsZW1lbnRzLmxlbmd0aCA+IDEpIHJldCArPSBgPGRpdiBpZD0idGJjV2luZG93IiBjbGFzcz0iZWFzeXVpLXRhYnMiIGRhdGEtb3B0aW9ucz0nJHt0aGlzLmV2ZW50SGFuZGxlcnMoe3R5cGU6ICd0YWJzJ30pfScgc3R5bGU9IndpZHRoOiR7dFdpZHRofXB4O2hlaWdodDoke3RIZWlnaHR9cHg7Ij5gOwoJCWZvciAodmFyIGcgPSAwOyBnIDwgZ0VsZW1lbnRzLmxlbmd0aDsgZysrKSB7CgkJCWlmIChnRWxlbWVudHMubGVuZ3RoID4gMSkgcmV0ICs9ICc8ZGl2IHRpdGxlPSInICsgKGdFbGVtZW50c1tnXS5rZXkgfHwgIk1haW4iKSArICciIHN0eWxlPSJwYWRkaW5nOjIwcHg7ZGlzcGxheTpub25lOyI+JzsKCQkJdmFyIHNFbGVtZW50cyA9IHRoaXMuc3IoKS5ncm91cEJ5KGdFbGVtZW50c1tnXS52YWx1ZXMsICJzZWN0aW9uIik7CgkJCWlmIChzRWxlbWVudHMubGVuZ3RoID4gMSkgcmV0ICs9ICc8ZGl2IGNsYXNzPSJlYXN5dWktYWNjb3JkaW9uIiBzdHlsZT0id2lkdGg6JyArIHRXaWR0aCArICdweDtoZWlnaHQ6JyArIC8qdEhlaWdodCovICIxMDAlIiArICdweDsiPic7CgkJCWZvciAodmFyIHMgPSAwOyBzIDwgc0VsZW1lbnRzLmxlbmd0aDsgcysrKSB7CgkJCQlyZXQgKz0gYDxkaXYgdGl0bGU9IiR7c0VsZW1lbnRzW3NdLmtleSB8fCAiIn0iIGRhdGEtb3B0aW9ucz0iaWNvbkNsczonaWNvbi1tb3JlJyIgc3R5bGU9InBhZGRpbmc6MTBweDsiPmA7CgkJCQlmb3IgKHZhciBpID0gMDsgaSA8IHNFbGVtZW50c1tzXS52YWx1ZXMubGVuZ3RoOyBpKyspIHsKCQkJCQl2YXIgZSA9IHNFbGVtZW50c1tzXS52YWx1ZXNbaV07CgkJCQkJaWYgKGUuaWdub3JlKSBjb250aW51ZTsKCQkJCQllLnZhbHVlID0gZS52YWx1ZSB8fCBfRnJFTUQuaGFzaFtlLm5hbWVdIHx8IChfRnJFTUQuYXBpU2VydmVyID8gX0ZyRU1ELmFwaVNlcnZlci5fX2NvbmZpZygndGVzdF8nICsgZS5uYW1lLCAnJykgOiAnJyk7CgkJCQkJcmV0ICs9IGA8ZGl2IGlkPSJmRWxlbWVudF8ke2UubmFtZX0iIGNsYXNzPSJmaXRlbSIgc3R5bGU9ImRpc3BsYXk6ICR7KGUudHlwZT09J3dpbmRvdycgfHwgZS5oaWRkZW4pPydub25lJzonJ30iPmA7CgkJCQkJaWYgKGUudG9nZ2xlKSB7CgkJCQkJCXJldCArPSBgPGEgaHJlZj0iIyIgY2xhc3M9ImVhc3l1aS1saW5rYnV0dG9uIiBkYXRhLW9wdGlvbnM9JyR7dGhpcy5ldmVudEhhbmRsZXJzKHt0eXBlOiAndG9nZ2xlJywgZm9yOiBlfSl9LHBsYWluOnRydWUsaWNvbkNsczoiaWNvbi0ke2UuaWNvbiB8fCAnc2VhcmNoJ30iJyBzdHlsZT0id2lkdGg6MTAwcHg7aGVpZ2h0OjMwcHgiPiR7ZS50aXRsZSB8fCB0aGlzLmVuZ2xpc2goZS5uYW1lKX08L2E+YDsKCQkJCQl9IGVsc2UgewoJCQkJCQlyZXQgKz0gYDxsYWJlbD4ke2UudGl0bGUgfHwgdGhpcy5lbmdsaXNoKGUubmFtZSl9OjwvbGFiZWw+YDsKCQkJCQl9CgkJCQkJaWYgKGUudHlwZSAmJiB0aGlzW2UudHlwZV0pIHsKCQkJCQkJcmV0ICs9IHRoaXNbZS50eXBlXShlKTsKCQkJCQl9IGVsc2UgaWYgKGUucmVuZGVyKSB7CgkJCQkJCXJldCArPSBlLnJlbmRlcigpOwoJCQkJCX0KCQkJCQlyZXQgKz0gJzwvZGl2Pic7CgkJCQl9CgkJCQlyZXQgKz0gJzwvZGl2Pic7CgkJCX0KCQkJaWYgKHNFbGVtZW50cy5sZW5ndGggPiAxKSByZXQgKz0gJzwvZGl2Pic7CgkJCWlmIChnRWxlbWVudHMubGVuZ3RoID4gMSkgcmV0ICs9ICI8L2Rpdj4iOwoJCX0KCQlpZiAoZ0VsZW1lbnRzLmxlbmd0aCA+IDEpIHJldCArPSAiPC9kaXY+IjsKCQlyZXR1cm4gcmV0OwoJfQoKCWluZm8obXNnKSB7CgkJaWYgKCQubWVzc2FnZXIpIHsKCQkJJC5tZXNzYWdlci5hbGVydCh0aGlzLnRpdGxlLCBtc2csICdpbmZvJyk7CgkJfSBlbHNlIHsKCQkJdGhpcy5zcigpLlNob3dNZXNzYWdlKG1zZywgdGhpcy50aXRsZSk7CgkJfQoJfQoKCWVycm9yKG1zZykgewoJCWlmICgkLm1lc3NhZ2VyKSB7CgkJCSQubWVzc2FnZXIuYWxlcnQodGhpcy50aXRsZSwgbXNnLCAnZXJyb3InKTsKCQl9IGVsc2UgewoJCQl0aGlzLnNyKCkuU2hvd01lc3NhZ2UobXNnLCB0aGlzLnRpdGxlKTsKCQl9Cgl9CgoJYnlOYW1lKG5hbWUpIHsKCQlyZXR1cm4gdGhpcy5lbGVtZW50cy5maW5kKGUgPT4gZS5uYW1lID09PSBuYW1lKTsKCX0KCgkvKiogQ29tcG9uZW50czo6U3RhcnQgKiovCglDb3JlQ29tcG9uZW50ID0gY2xhc3MgewoJCWNvbnN0cnVjdG9yKHBhZ2UsIGRGb3JtLCBvU2NvcGUpIHsKCQkJdGhpcy5wYWdlID0gcGFnZTsKCQkJdGhpcy5kRm9ybSA9IGRGb3JtIHx8IERGb3JtOwoJCQl0aGlzLnNjb3BlID0gdGhpcy5zY29wZSB8fCBfRnJFTUQ/LmFwaVNlcnZlcj8uU2NvcGU7CgkJCXRoaXMub1Njb3BlID0gb1Njb3BlIHx8IF9GckVNRC5fX3Njb3BlKHRoaXMuc2NvcGUpOwoJCX0KCgkJX2VudGl0eUZpZWxkKGVjKSB7CgkJCXJldHVybiB7CgkJCQluYW1lOiBlYy5OYW1lLnJlcGxhY2UoL1wgL2csICdfJyksCgkJCQl0aXRsZTogX0ZyRU1ELl90aXRsZUNhc2UoZWMuTmFtZSksCgkJCQlDbGFzczogewoJCQkJCU5hbWU6IGVjLk5hbWUsCgkJCQkJSWQ6IGVjLklkCgkJCQl9LAoJCQkJem9uZTogJ25vcnRoJywKCQkJCXR5cGU6IGVjLkVudGl0eUF0dHJpYnV0ZXMuZmluZChwZWEgPT4gIXBlYS5FbnRpdHlNZXRob2QgJiYgcGVhLkVudGl0eVR5cGUgPT0gZWMpID8gJ3RyZWUnIDogJ3NlbGVjdCcsCgkJCQlwYXJlbnRGaWVsZDogZWMuRW50aXR5QXR0cmlidXRlcy5maW5kKHBlYSA9PiAhcGVhLkVudGl0eU1ldGhvZCAmJiBwZWEuRW50aXR5VHlwZSA9PSBlYyk/Lk5hbWUsCgkJCQkvL3NlYXJjaEZpZWxkOiBlYy5FbnRpdHlBdHRyaWJ1dGVzLmZpbmQoZWEgPT4gZWEuSXNTdHJpbmcpLk5hbWUsCgkJCQkvL2lkRmllbGQ6ICdfVG9TdHJpbmcnLAoJCQkJc291cmNlOiAobywgZkRhdGEsIHNUZXh0KSA9PiAoewoJCQkJCU9QRVJBVE9SUzogewoJCQkJCQlbZWMuRW50aXR5QXR0cmlidXRlcy5maW5kKGVhID0+IGVhLklzU3RyaW5nKS5OYW1lXTogJ2xpa2UnCgkJCQkJfSwKCQkJCQlbZWMuRW50aXR5QXR0cmlidXRlcy5maW5kKGVhID0+IGVhLklzU3RyaW5nKS5OYW1lXTogc1RleHQKCgkJCQl9KSwKCQkJfTsKCQl9CgoJCV9lYVRvRmllbGQoZWEpIHsKCQkJbGV0IHJldCA9IG51bGw7CgoJCQlpZiAoZWEuRW50aXR5VHlwZSkgewoJCQkJcmV0ID0gewoJCQkJCV90eXBlOiBlYS5FbnRpdHlUeXBlLkVudGl0eUF0dHJpYnV0ZXMuZmluZChwZWEgPT4gIXBlYS5FbnRpdHlNZXRob2QgJiYgcGVhLkVudGl0eVR5cGUgPT0gZWEuRW50aXR5VHlwZSkgPyAndHJlZScgOiAnc2VsZWN0JywKCQkJCQl0eXBlOiAnc2VsZWN0JywKCQkJCQlwYXJlbnRGaWVsZDogZWEuRW50aXR5VHlwZS5FbnRpdHlBdHRyaWJ1dGVzLmZpbmQocGVhID0+ICFwZWEuRW50aXR5TWV0aG9kICYmIHBlYS5FbnRpdHlUeXBlID09IGVhLkVudGl0eVR5cGUpPy5OYW1lLAoJCQkJCS8vaWRGaWVsZDogJ19Ub1N0cmluZycsCgkJCQkJem9uZTogJ2NlbnRlcicsCgkJCQkJQ2xhc3M6IHsKCQkJCQkJTmFtZTogZWEuRW50aXR5VHlwZS5OYW1lLAoJCQkJCQlJZDogZWEuRW50aXR5VHlwZS5JZAoJCQkJCX0sCgkJCQkJc291cmNlOiAobywgZkRhdGEsIHNUZXh0KSA9PiAoewoJCQkJCQlPUEVSQVRPUlM6IHsKCQkJCQkJCVtlYS5FbnRpdHlUeXBlLkVudGl0eUF0dHJpYnV0ZXMuZmluZChlYSA9PiBlYS5Jc1N0cmluZykuTmFtZV06ICdsaWtlJwoJCQkJCQl9LAoJCQkJCQlbZWEuRW50aXR5VHlwZS5FbnRpdHlBdHRyaWJ1dGVzLmZpbmQoZWEgPT4gZWEuSXNTdHJpbmcpLk5hbWVdOiBzVGV4dAoKCQkJCQl9KSwKCQkJCX07CgkJCX0gZWxzZSBpZiAoZWEuSXNUZXh0KSB7CgkJCQlyZXQgPSB7CgkJCQkJdHlwZTogJ3dpbmRvdycsCgkJCQkJem9uZTogJ2NlbnRlcicsCgkJCQkJZWRpdG9yOiB0cnVlLAoJCQkJCWxhbmd1YWdlOiBvID0+IGVhLk5hbWUgPT0gJ3NjcmlwdCcgPyAnamF2YXNjcmlwdCcgOiAidGV4dCIsCgkJCQl9OwoJCQl9IGVsc2UgewoJCQkJcmV0ID0gewoJCQkJCXpvbmU6ICdjZW50ZXInLAoJCQkJCVtlYS5Jc0Jvb2wgPyAnY2hlY2tlZCcgOiAndmFsdWUnXTogZWEuRGVmYXVsdCwKCQkJCQl0eXBlOiBPYmplY3QuZW50cmllcyh7CgkJCQkJCUJvb2w6ICdib29sJywKCQkJCQkJRGF0ZTogJ2RhdGV0aW1lJywKCQkJCQkJSW50OiAnaW50JywKCQkJCQkJTG9uZzogJ2xvbmcnLAoJCQkJCQlJbWFnZTogJ2ltYWdlJywKCQkJCQkJU3RyaW5nOiAnc3RyaW5nJywKCQkJCQkJRmlsZTogJ2ZpbGUnLAoJCQkJCQlGbG9hdDogJ2ludCcsCgkJCQkJfSkuZmluZChlID0+IGVhWydJcycgKyBlWzBdXSlbMV0sCgkJCQl9OwoJCQl9CgoJCQlpZiAoZWEuSXNGaWxlKSB7CgkJCQlyZXQubG9jYWwgPSB0cnVlOwoJCQkJcmV0LmJpbmFyeSA9IHRydWU7CgkJCQlyZXQudXBsb2FkID0gKGZEYXRhLCBkYXRhLCBmaWxlTmFtZSkgPT4gewoJCQkJCS8vIHVwbG9hZGVkCgkJCQl9OwoJCQl9CgoJCQlyZXQgPSBPYmplY3QuYXNzaWduKHsKCQkJCWdyb3VwOiBlYS5Hcm91cD8uTmFtZSwKCQkJCW5hbWU6IGVhLk5hbWUsCgkJCX0sIHJldCk7CgoJCQlpZiAoZWEuRW50aXR5TWV0aG9kPy5SZXNwb25zZUF0dHJpYnV0ZSA9PSBlYSkgewoJCQkJLy9yZXQuem9uZSA9ICdzb3V0aCc7CgkJCX0KCgkJCS8vY29uc29sZS5sb2coIl9lYVRvRmllbGQoIiArIGVhLk5hbWUgKyAiKTogIiwgcmV0KTsKCgkJCXJldHVybiByZXQ7CgkJfQoKCQlidXN5KGJCdXN5KSB7CgkJCXJldHVybiB0aGlzLmRGb3JtLmJ1c3koYkJ1c3kpOwoJCX0KCgkJX21lKHYpIHsKCQkJbGV0IG1lTmFtZSA9ICh0eXBlb2YoY29tcGFueSkgIT09ICd1bmRlZmluZWQnKSA/IChjb21wYW55LmxvZ2dlZEluSWRlbnRpdHkgfHwgIm1lIikgOiAibWUiOwoJCQlpZiAodikgewoJCQkJd2luZG93W21lTmFtZV0gPSB2OwoJCQl9CgoJCQlyZXR1cm4gd2luZG93W21lTmFtZV07CgkJfQoKCQlhc3luYyBfcmVuZGVyKCkgewoJCQkvLyBvdmVycmlkZSB0byBnZW5lcmF0ZSBjb21wb25lbnQgY29udGVudAoJCQlyZXR1cm4gIiI7CgkJfQoKCQlfY2FuVmlldygpIHsKCQkJaWYgKCF0aGlzLl9tZSgpKSB7CgkJCQl3aW5kb3cuX0ZyRU1ELnNldFVSTCh7CgkJCQkJcGFnZTogJ2xvZ2luJywKCQkJCQlfcmVkaXJlY3Q6IHRoaXMucGFnZS5fY29kZSwKCQkJCX0pOwoJCQkJdGhyb3cgYF9jYW5WaWV3OiAke3RoaXMucGFnZS5fY29kZX0gbm90IGFsbG93ZWQgd2l0aG91dCBsb2dpbiFgOwoJCQl9CgkJfQoJfQoKCUNvbnRlbnRDb21wb25lbnQgPSBjbGFzcyBleHRlbmRzIHRoaXMuQ29yZUNvbXBvbmVudCB7CgkJYXN5bmMgbWFpbigpIHsKCQkJY29uc29sZS5sb2coIkNvbnRlbnRDb21wb25lbnQ6Om1haW4oKSIsICJHT1QgSEVSRSIpOwoJCX0KCgkJYXN5bmMgX3JlbmRlcigpIHsKCQkJcmV0dXJuIHRoaXMucGFnZT8uQm9keSB8fCB0aGlzLnBhZ2U/Ll9ib2R5OwoJCX0KCX0KCglIZWFkZXJDb21wb25lbnQgPSBjbGFzcyBleHRlbmRzIHRoaXMuQ29yZUNvbXBvbmVudCB7CgkJYXN5bmMgbWFpbigpIHsKCQkJLy9jb25zb2xlLmxvZygiSGVhZGVyQ29tcG9uZW50OjptYWluKCkiLCAiR09UIEhFUkUiKQoJCX0KCgkJX21lbnVDbGFzc2VzKCkgewoJCQkvL2NvbnNvbGUubG9nKCJIZWFkZXJDb21wb25lbnQ6Ol9tZW51Q2xhc3NlcygiICsgc2NvcGUgKyAiKTogb1Njb3BlIiwgdGhpcy5zY29wZSwgdGhpcy5vU2NvcGUsIF9GckVNRC5hcGlTZXJ2ZXIpOwoJCQlpZiAoIXRoaXMub1Njb3BlKSByZXR1cm4gW107CgoJCQlyZXR1cm4gX0ZyRU1ELmdyb3VwQnkodGhpcy5vU2NvcGUuRW50aXR5Q2xhc3NlcywgJ0VudGl0eU1vZHVsZScpLm1hcChnID0+ICh7CgkJCQlsYWJlbDogKGcua2V5ID8gdGhpcy5kRm9ybS5lbmdsaXNoKGcua2V5Lk5hbWUpIDogbnVsbCkgfHwgJ01haW4nLAoJCQkJc3ViTWVudXM6IF9GckVNRC5ncm91cEJ5KGcudmFsdWVzLCAnR3JvdXAnKS5tYXAoZ3YgPT4gKHsKCQkJCQlsYWJlbDogKGd2LmtleSA/IHRoaXMuZEZvcm0uZW5nbGlzaChndi5rZXkuTmFtZSkgOiBudWxsKSB8fCAnTWFpbicsCgkJCQkJc3ViTWVudXM6IChndi52YWx1ZXMgfHwgW10pLm1hcChndnYgPT4gKHsKCQkJCQkJbGFiZWw6IHRoaXMuZEZvcm0uZW5nbGlzaChndnYuTmFtZSksCgkJCQkJCWNvZGU6ICdzdG9yZScsCgkJCQkJCWRhdGE6IGd2di5OYW1lCgkJCQkJfSkpCgkJCQl9KSkKCQkJfSkpOwoJCX0KCgkJX21lbnVNZXRob2RzKCkgewoJCQkvL2NvbnNvbGUubG9nKCJIZWFkZXJDb21wb25lbnQ6Ol9tZW51TWV0aG9kcygiICsgdGhpcy5zY29wZSArICIpOiB0aGlzLm9TY29wZSIsIHRoaXMuc2NvcGUsIHRoaXMub1Njb3BlLCBfRnJFTUQuYXBpU2VydmVyKTsKCQkJaWYgKCF0aGlzLm9TY29wZSkgcmV0dXJuIFtdOwoKCQkJLy9jb25zb2xlLmxvZygiSGVhZGVyQ29tcG9uZW50OjpfbWVudU1ldGhvZHMoKTogY2xhc3NlcyIsIF9GckVNRC5ncm91cEJ5KHRoaXMub1Njb3BlLkVudGl0eUNsYXNzZXMuZmlsdGVyKGVjID0+IGVjLkVudGl0eU1ldGhvZHMubGVuZ3RoKSwgJ0VudGl0eU1vZHVsZScpKTsKCgkJCXJldHVybiBfRnJFTUQuZ3JvdXBCeSh0aGlzLm9TY29wZS5FbnRpdHlDbGFzc2VzLmZpbHRlcihlYyA9PiBlYy5FbnRpdHlNZXRob2RzLmxlbmd0aCksICdFbnRpdHlNb2R1bGUnKS5tYXAoZyA9PiAoewoJCQkJbGFiZWw6IChnLmtleSA/IHRoaXMuZEZvcm0uZW5nbGlzaChnLmtleS5OYW1lKSA6IG51bGwpIHx8ICdNYWluJywKCQkJCXN1Yk1lbnVzOiBfRnJFTUQuZ3JvdXBCeShnLnZhbHVlcywgJ0dyb3VwJykubWFwKGd2ID0+ICh7CgkJCQkJbGFiZWw6IChndi5rZXkgPyB0aGlzLmRGb3JtLmVuZ2xpc2goZ3Yua2V5Lk5hbWUpIDogbnVsbCkgfHwgJ01haW4nLAoJCQkJCXN1Yk1lbnVzOiAoZ3YudmFsdWVzIHx8IFtdKS5tYXAobWMgPT4gKHsKCQkJCQkJbGFiZWw6IHRoaXMuZEZvcm0uZW5nbGlzaChtYy5OYW1lKSwKCQkJCQkJc3ViTWVudXM6IG1jLkVudGl0eU1ldGhvZHMubWFwKGVtID0+ICh7CgkJCQkJCQlsYWJlbDogdGhpcy5kRm9ybS5lbmdsaXNoKGVtLk5hbWUpLAoJCQkJCQkJY29kZTogJ21ldGhvZCcsCgkJCQkJCQlkYXRhOiBtYy5OYW1lICsgIi4iICsgZW0uTmFtZQoJCQkJCQl9KSkKCQkJCQl9KSkKCQkJCX0pKQoJCQl9KSk7CgkJfQoKCQlfYnVpbGRNZW51KHNjb3BlKSB7CgkJCXJldHVybiBbewoJCQkJbGFiZWw6ICJNYWluIiwKCQkJCW9yZGVyOiAtMSwKCQkJCXN1Yk1lbnVzOiBbewoJCQkJCWxhYmVsOiAnSW5kZXgnLAoJCQkJfSwgewoJCQkJCWxhYmVsOiAiTG9naW4iLAoJCQkJfSwgewoJCQkJCWxhYmVsOiAiTG9hZCIsCgkJCQl9LCB7CgkJCQkJbGFiZWw6ICJTYXZlIiwKCQkJCX0sIHsKCQkJCQlsYWJlbDogIkxvZ291dCIKCQkJCX1dCgkJCX0sIHsKCQkJCWxhYmVsOiAiUHJvY2VzcyIsCgkJCQlvcmRlcjogOTk5OTgsCgkJCQlzdWJNZW51czogdGhpcy5fbWVudU1ldGhvZHMoc2NvcGUpCgkJCX0sIHsKCQkJCWxhYmVsOiAiU2V0dXAiLAoJCQkJb3JkZXI6IDk5OTk5LAoJCQkJc3ViTWVudXM6IHRoaXMuX21lbnVDbGFzc2VzKHNjb3BlKQoJCQl9XTsKCQl9CgoJCWFzeW5jIF9yZW5kZXIoKSB7CgkJCXJldHVybiBgCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CgkjZm0gewoJCW1hcmdpbjogMDsKCQlwYWRkaW5nOiAxMHB4IDMwcHg7Cgl9CgoJLmZ0aXRsZSB7CgkJZm9udC1zaXplOiAxNHB4OwoJCWZvbnQtd2VpZ2h0OiBib2xkOwoJCXBhZGRpbmc6IDVweCAwOwoJCW1hcmdpbi1ib3R0b206IDEwcHg7CgkJYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7Cgl9CgoJLmZpdGVtIHsKCQltYXJnaW4tYm90dG9tOiA1cHg7Cgl9CgoJLmZpdGVtIGxhYmVsIHsKCQlkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CgkJd2lkdGg6IDEwMHB4OwoJfQoKCS5maXRlbSBpbnB1dCB7CgkJd2lkdGg6IDE2MHB4OwoJfQo8L3N0eWxlPgoJCQlgICsgdGhpcy5kRm9ybS5tZW51KHsKCQkJCW1lbnU6IHRoaXMuX2J1aWxkTWVudSgpCgkJCX0pOwoJCX0KCX0KCglNYWluQ29tcG9uZW50ID0gY2xhc3MgZXh0ZW5kcyB0aGlzLkNvcmVDb21wb25lbnQgewoJCWFzeW5jIG1haW4oKSB7CgkJCS8vIAoJCX0KCgkJYXN5bmMgX3JlbmRlcigpIHsKCQkJcmV0dXJuIGA8JT10eXBlb2YoZm9ybSkhPT0ndW5kZWZpbmVkJz9mb3JtOicnJT5gOwoJCX0KCX0KCglMb2FkQ29tcG9uZW50ID0gY2xhc3MgZXh0ZW5kcyB0aGlzLkNvcmVDb21wb25lbnQgewoJCWFzeW5jIG1haW4oKSB7CgkJCXRoaXMucGFnZS5kYXRhID0gewoJCQkJZm9ybTogdGhpcy5kRm9ybS5yZW5kZXIoJ2ZybUxvYWQnLCAiTG9hZCBTZXR1cCBEYXRhIiwgW3sKCQkJCQluYW1lOiAnRXhjZWwnLAoJCQkJCXR5cGU6ICJmaWxlIiwKCQkJCQliaW5hcnk6IHRydWUsCgkJCQkJbG9jYWw6IHRydWUsCgkJCQkJZXhjZWw6IGFzeW5jIChmRGF0YSwgZGF0YSwgZmlsZW5hbWUpID0+IHsKCQkJCQkJY29uc29sZS5jbGVhcigpOwoKCQkJCQkJdGhpcy5kRm9ybS5zZXQoewoJCQkJCQkJUHJvZ3Jlc3M6IDAKCQkJCQkJfSk7CgoJCQkJCQlsZXQgc2VydmVyID0gbmV3KHRoaXMub1Njb3BlW3RoaXMub1Njb3BlLkVudGl0eUNsYXNzZXMuZmluZChjID0+IGMuSXNNYWluKS5OYW1lXSkoKTsgLyp0aGlzLl9zZXJ2ZXIoZmlsZW5hbWUuc3BsaXQoJy4nKVswXSk7Ki8KCQkJCQkJbGV0IG9iaiA9IE9iamVjdC5rZXlzKGRhdGEpLmZpbHRlcihrID0+IGRhdGFba10ubGVuZ3RoKS5tYXAoayA9PiBkYXRhW2tdLm1hcChkID0+IHNlcnZlci5fbmV3KGspLl9mcm9tRG9jdW1lbnQoZCkpKS5mbGF0KCk7CgkJCQkJCWZvciBhd2FpdCAoY29uc3QgbyBvZiBvYmopIHsKCQkJCQkJCWF3YWl0IG8uc3RvcmUoKTsKCQkJCQkJCXRoaXMuZEZvcm0uc2V0KHsKCQkJCQkJCQlQcm9ncmVzczogdGhpcy5kRm9ybS5nZXQoKS5Qcm9ncmVzcyArIDEwMC4wIC8gb2JqLmxlbmd0aAoJCQkJCQkJfSk7CgkJCQkJCX0KCgkJCQkJCV9GckVNRC5SZW5kZXJQYWdlKHsKCQkJCQkJCV9jb2RlOiAnbG9naW4nCgkJCQkJCX0pOwoJCQkJCX0sCgkJCQl9LCB7CgkJCQkJbmFtZTogIlByb2dyZXNzIiwKCQkJCQl0eXBlOiAicHJvZ3Jlc3MiLAoJCQkJfV0sIFt7CgkJCQkJbmFtZTogJ0xvYWQnLAoJCQkJCW9uY2xpY2s6IGFzeW5jIG8gPT4ge30KCQkJCX1dKQoJCQl9OwoJCX0KCX0KCglTYXZlQ29tcG9uZW50ID0gY2xhc3MgZXh0ZW5kcyB0aGlzLkNvcmVDb21wb25lbnQgewoJCWFzeW5jIG1haW4oKSB7CgkJCS8vdGhpcy5fY2FuVmlldygpOwoKCQkJdGhpcy5wYWdlLmRhdGEgPSB7CgkJCQlmb3JtOiB0aGlzLmRGb3JtLnJlbmRlcignZnJtU2F2ZScsICJTYXZlIFNldHVwIERhdGEiLCBbewoJCQkJCW5hbWU6ICdTYXZlJywKCQkJCQl0eXBlOiAibGFiZWwiLAoJCQkJCXZhbHVlOiAiRXhwb3J0IHRvIEV4Y2VsIiwKCQkJCX0sIHsKCQkJCQluYW1lOiAnVGl0bGUnLAoJCQkJCXR5cGU6ICdzdHJpbmcnLAoJCQkJCXZhbHVlOiAnJywKCQkJCX0sIHsKCQkJCQluYW1lOiAiUHJvZ3Jlc3MiLAoJCQkJCXR5cGU6ICJwcm9ncmVzcyIsCgkJCQl9XSwgW3sKCQkJCQluYW1lOiAnU2F2ZScsCgkJCQkJb25jbGljazogYXN5bmMgbyA9PiB7CgkJCQkJCWNvbnNvbGUuY2xlYXIoKTsKCgkJCQkJCXRoaXMuZEZvcm0uc2V0KHsKCQkJCQkJCVByb2dyZXNzOiAwCgkJCQkJCX0pOwoKCQkJCQkJbGV0IHNlcnZlciA9IG5ldyh0aGlzLm9TY29wZVt0aGlzLm9TY29wZS5FbnRpdHlDbGFzc2VzLmZpbmQoYyA9PiBjLklzTWFpbikuTmFtZV0pKCk7CgoJCQkJCQlsZXQgdFRlbXBsYXRlID0gewoJCQkJCQkJaGVhZGVyUm93OiB0cnVlLAoJCQkJCQkJc3R5bGU6IHsKCQkJCQkJCQl0aGVtZTogJ1RhYmxlU3R5bGVEYXJrMycsCgkJCQkJCQkJc2hvd1Jvd1N0cmlwZXM6IHRydWUsCgkJCQkJCQl9LAoJCQkJCQl9OwoJCQkJCQlsZXQgdGFibGVzID0gW107CgkJCQkJCWZvciBhd2FpdCAoY29uc3QgYyBvZiBfRnJFTUQuX19zY29wZShzZXJ2ZXIuU2NvcGUpLkVudGl0eUNsYXNzZXMuc29ydCgoYSwgYikgPT4gYS5SYW5rIC0gYi5SYW5rKSkgewoJCQkJCQkJLy9jb25zb2xlLmxvZygiRHluYUZvcm06OlNhdmVDb21wb25lbnQoKTogIiArIGMuTmFtZSArICIsIFJhbms9IiArIGMuUmFuayk7CgkJCQkJCQl0YWJsZXMucHVzaChPYmplY3QuYXNzaWduKEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodFRlbXBsYXRlKSksIGF3YWl0IHNlcnZlci5fbmV3KGMuTmFtZSkuX3RvVGFidWxhcigpKSk7CgkJCQkJCQl0aGlzLmRGb3JtLnNldCh7CgkJCQkJCQkJUHJvZ3Jlc3M6IHRoaXMuZEZvcm0uZ2V0KCkuUHJvZ3Jlc3MgKyAxMDAuMCAvIF9GckVNRC5fX3Njb3BlKHNlcnZlci5TY29wZSkuRW50aXR5Q2xhc3Nlcy5sZW5ndGgKCQkJCQkJCX0pOwoJCQkJCQl9CgkJCQkJCXRhYmxlcy5mb3JFYWNoKHQgPT4gdC5yZWYgPSAnQTE6JyArIFN0cmluZy5mcm9tQ2hhckNvZGUoJ0EnLmNoYXJDb2RlQXQoMCkgKyB0LmNvbHVtbnMubGVuZ3RoIC0gMSkgKyAodC5yb3dzLmxlbmd0aCArIDEpKTsKCgkJCQkJCWxldCByZ2IgPSAobGV0dGVycyA9ICcwMTIzNDU2Nzg5QUJDREVGJykgPT4gQXJyYXkoNikubWFwKGkgPT4gbGV0dGVyc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxNildKS5qb2luKCcnKTsKCgkJCQkJCWNvbnN0IHdvcmtib29rID0gbmV3IEV4Y2VsSlMuV29ya2Jvb2soKTsKCQkJCQkJdGFibGVzLmZvckVhY2godCA9PiB3b3JrYm9vay5hZGRXb3Jrc2hlZXQodC5uYW1lLCB7CgkJCQkJCQlwcm9wZXJ0aWVzOiB7CgkJCQkJCQkJdGFiQ29sb3I6IHsKCQkJCQkJCQkJYXJnYjogJ0YnICsgcmdiKCkKCQkJCQkJCQl9CgkJCQkJCQl9CgkJCQkJCX0pLmFkZFRhYmxlKHQpKTsKCgkJCQkJCWxldCBidWZmZXIgPSBhd2FpdCB3b3JrYm9vay54bHN4LndyaXRlQnVmZmVyKHsKCQkJCQkJCWRhdGVGb3JtYXQ6ICdZWVlZLU1NLUREIEhIOm1tOnNzJwoJCQkJCQl9KTsKCgkJCQkJCWNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CgkJCQkJCWxpbmsuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKCQkJCQkJZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKTsKCQkJCQkJbGluay5ocmVmID0gVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihbYnVmZmVyXSwgewoJCQkJCQkJdHlwZTogJ2FwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC5zcHJlYWRzaGVldG1sLnNoZWV0O2NoYXJzZXQ9VVRGLTgnCgkJCQkJCX0pKTsKCQkJCQkJbGluay5kb3dubG9hZCA9IChvLlRpdGxlIHx8IHNlcnZlci5TY29wZSB8fCAiZGF0YSIpICsgIi54bHN4IjsKCQkJCQkJbGluay5jbGljaygpOwoJCQkJCX0KCQkJCX1dKQoJCQl9OwoJCX0KCX0KCglJbmRleENvbXBvbmVudCA9IGNsYXNzIGV4dGVuZHMgdGhpcy5Db3JlQ29tcG9uZW50IHsKCQlhc3luYyBtYWluKCkgewoJCQl0aGlzLl9jYW5WaWV3KCk7CgoJCQl0aGlzLnBhZ2UuZGF0YSA9IHsKCQkJCWZvcm06IHRoaXMuZEZvcm0ucmVuZGVyKCdmcm1JbmRleCcsICJNYWluIFBhZ2UiLCBbewoJCQkJCW5hbWU6ICdXZWxjb21lJywKCQkJCQlyZXF1aXJlZDogdHJ1ZSwKCQkJCQl0eXBlOiAibGFiZWwiLAoJCQkJCXZhbHVlOiB0aGlzLl9tZSgpPy5uYW1lPy4oKSB8fCB0aGlzLl9tZSgpPy5fdG9TdHJpbmc/LigpIHx8IHRoaXMuX21lKCk/LlRvU3RyaW5nLAoJCQkJfV0sIFtdKQoJCQl9OwoJCX0KCX0KCglMb2dvdXRDb21wb25lbnQgPSBjbGFzcyBleHRlbmRzIHRoaXMuQ29yZUNvbXBvbmVudCB7CgkJYXN5bmMgbWFpbigpIHsKCQkJdGhpcy5fY2FuVmlldygpOwoKCQkJZGVsZXRlIHdpbmRvdy5tZTsKCgkJCXRoaXMucGFnZS5kYXRhID0gewoJCQkJZm9ybTogdGhpcy5kRm9ybS5yZW5kZXIoJ2ZybUxvZ291dCcsICJMb2dvdXQiLCBbewoJCQkJCQluYW1lOiAiTG9nb3V0IiwKCQkJCQkJdHlwZTogImxhYmVsIiwKCQkJCQkJdmFsdWU6ICJsb2dvdXQgaW4gcHJvZ3Jlc3MuLi4iCgkJCQkJfV0sCgkJCQkJW10pCgkJCX07CgoJCQlfRnJFTUQuUmVuZGVyUGFnZSh7CgkJCQlfY29kZTogImxvZ2luIgoJCQl9KTsKCQl9Cgl9CgoJTG9naW5Db21wb25lbnQgPSBjbGFzcyBleHRlbmRzIHRoaXMuQ29yZUNvbXBvbmVudCB7CgkJYXN5bmMgX2F1dGhlbnRpY2F0ZShvKSB7CgkJCWNvbnNvbGUubG9nKCJfYXV0aGVudGljYXRlKCk6ICIsIHRoaXMub1Njb3BlLCB0aGlzLnNjb3BlKTsKCQkJbGV0IGF1dGhDbGFzc05hbWUgPSB0aGlzLm9TY29wZT8uRW50aXR5Q2xhc3Nlcz8uZmluZChjID0+IGMuRW50aXR5QXR0cmlidXRlcy5maW5kKGVhID0+IGVhLk5hbWUgPT0gJ3VzZXJuYW1lJykpPy5OYW1lOwoKCQkJaWYgKGF1dGhDbGFzc05hbWUpIHJldHVybiBhd2FpdCBuZXcodGhpcy5vU2NvcGVbdGhpcy5vU2NvcGUuRW50aXR5Q2xhc3Nlcy5maW5kKGMgPT4gYy5Jc01haW4pLk5hbWVdKSgpLl9uZXcoYXV0aENsYXNzTmFtZSkudXNlcm5hbWUoby5Vc2VybmFtZSwgJz0nKS5wYXNzd29yZChvLlBhc3N3b3JkLCAnPScpLmFjdGl2ZSh0cnVlKS5lbmFibGVkKHRydWUpLmZpbmQoKTsKCgkJCWF1dGhDbGFzc05hbWUgPSBhdXRoQ2xhc3NOYW1lIHx8ICh3aW5kb3cuYkxvY2FsID8gKHsKCQkJCWNtczogIkF1dGhvciIsCgkJCQllbXM6ICJFbXBsb3llZSIKCQkJfSlbY29tcGFueS5Db2RlXSA6IG51bGwpOwoKCQkJby5PUEVSQVRPUlMgPSB7CgkJCQlVc2VybmFtZTogIj0iLAoJCQkJUGFzc3dvcmQ6ICI9IgoJCQl9OwoKCQkJaWYgKGF1dGhDbGFzc05hbWUpIHJldHVybiAoYXdhaXQgc3IuXygiZW1zIiArIGF1dGhDbGFzc05hbWUgKyAiRmluZCIsIG51bGwsIG8pKTsKCQl9CgoJCWFzeW5jIF9sb2dnZWRJbigpIHt9CgoJCWFzeW5jIF9ub3RMb2dnZWRJbigpIHt9CgoJCWFzeW5jIG1haW4oKSB7CgkJCXRoaXMucGFnZS5kYXRhID0gewoJCQkJZm9ybTogdGhpcy5kRm9ybS5yZW5kZXIoJ2ZybUxvZ2luJywgIlVzZXIgQXV0aGVudGljYXRpb24iLCBbewoJCQkJCQluYW1lOiAnVXNlcm5hbWUnLAoJCQkJCQlyZXF1aXJlZDogdHJ1ZSwKCQkJCQkJdHlwZTogInN0cmluZyIKCQkJCQl9LAoJCQkJCXsKCQkJCQkJbmFtZTogJ1Bhc3N3b3JkJywKCQkJCQkJcmVxdWlyZWQ6IHRydWUsCgkJCQkJCXR5cGU6ICJwYXNzd29yZCIKCQkJCQl9CgkJCQldLCBbewoJCQkJCW5hbWU6ICdMb2dpbicsCgkJCQkJYXV0b1N1Ym1pdDogdHJ1ZSwKCQkJCQlvbmNsaWNrOiBhc3luYyBvID0+IHsKCQkJCQkJbGV0IHJldCA9IGF3YWl0IHRoaXMuX2F1dGhlbnRpY2F0ZShvKTsKCgkJCQkJCWlmIChyZXQpIHsKCQkJCQkJCXRoaXMuX21lKHJldCk7CgoJCQkJCQkJdHJ5IHsKCQkJCQkJCQlhd2FpdCB0aGlzLl9sb2dnZWRJbigpOwoJCQkJCQkJfSBjYXRjaCAoZXgpIHt9CgoJCQkJCQkJX0ZyRU1ELnNldFVSTCh7CgkJCQkJCQkJcGFnZTogX0ZyRU1ELmhhc2guX3JlZGlyZWN0IHx8ICJpbmRleCIKCQkJCQkJCX0pOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJdHJ5IHsKCQkJCQkJCQlhd2FpdCB0aGlzLl9ub3RMb2dnZWRJbigpOwoJCQkJCQkJfSBjYXRjaCAoZXgpIHt9CgoJCQkJCQkJdGhpcy5kRm9ybS5lcnJvcigiSW52YWxpZCB1c2VybmFtZSBvciBwYXNzd29yZCIpOwoJCQkJCQl9CgoJCQkJCQl0aGlzLmRGb3JtLmJ1c3koZmFsc2UpOwoJCQkJCX0KCQkJCX1dKQoJCQl9OwoJCX0KCX0KCglNZXRob2RDb21wb25lbnQgPSBjbGFzcyBleHRlbmRzIHRoaXMuQ29yZUNvbXBvbmVudCB7CgkJYXN5bmMgbWFpbigpIHsKCQkJdGhpcy5fY2FuVmlldygpOwoKCQkJdGhpcy5zTWV0aG9kID0gdGhpcy5wYWdlLmRhdGE7CgkJCWNvbnNvbGUuY2xlYXIoKTsKCgkJCWxldCBlYyA9IHRoaXMub1Njb3BlLkVudGl0eUNsYXNzZXMuZmluZChjID0+IGMuTmFtZSA9PSB0aGlzLnNNZXRob2Quc3BsaXQoJy4nKVswXSk7CgkJCWxldCBlbSA9IGVjLkVudGl0eU1ldGhvZHMuZmluZChtID0+IG0uTmFtZSA9PSB0aGlzLnNNZXRob2Quc3BsaXQoJy4nKVsxXSk7CgoJCQl0aGlzLnBhZ2UuZGF0YSA9IHsKCQkJCWZvcm06IHRoaXMuZEZvcm0ucmVuZGVyKHRoaXMuc01ldGhvZCwgX0ZyRU1ELl90aXRsZUNhc2UoZWMuTmFtZSkgKyAnIDo6ICcgKyBfRnJFTUQuX3RpdGxlQ2FzZShlbS5OYW1lKSwgW3RoaXMuX2VudGl0eUZpZWxkKGVjKV0uY29uY2F0KC4uLmVtLk1ldGhvZFBhcmFtZXRlcnMubWFwKHAgPT4gdGhpcy5fZWFUb0ZpZWxkKHApKSkuY29uY2F0KFt0aGlzLl9lYVRvRmllbGQoZW0uUmVzcG9uc2VBdHRyaWJ1dGUpXSksIFt7CgkJCQkJbmFtZTogJ1Jlc2V0JywKCQkJCQlvbmNsaWNrOiBvID0+IHsKCQkJCQkJdGhpcy5kRm9ybS5jbGVhcigpOwoJCQkJCX0sCgkJCQkJaWNvbjogImNhbmNlbCIKCQkJCX0sIHsKCQkJCQluYW1lOiAnUmVsb2FkJywKCQkJCQlvbmNsaWNrOiBvID0+IF9GckVNRC5SZW5kZXJQYWdlKHsKCQkJCQkJX2NvZGU6ICdtZXRob2QnCgkJCQkJfSwgdGhpcy5wYWdlLmRhdGEpLAoJCQkJCWljb246ICJyZWxvYWQiCgkJCQl9LCB7CgkJCQkJbmFtZTogZW0uTmFtZSwKCQkJCQl0aXRsZTogX0ZyRU1ELl90aXRsZUNhc2UoZW0uTmFtZSksCgkJCQkJb25jbGljazogYXN5bmMgbyA9PiB7CgkJCQkJCWxldCBvYmogPSBvW2VjLk5hbWVdIHx8IF9GckVNRC5hcGlTZXJ2ZXIuX25ldyhlYy5OYW1lKTsKCQkJCQkJY29uc29sZS5sb2coIm9uY2xpY2soKSIsIGVjLk5hbWUsIG9iaiwgbywgb1tlYy5OYW1lXSk7CgkJCQkJCS8vaWYgKG9bdGhpcy5zVGFibGVdICYmIHR5cGVvZihvW3RoaXMuc1RhYmxlXS5fX3N5bmNfb24pID09PSAnZnVuY3Rpb24nICYmIG9bdGhpcy5zVGFibGVdLl9fc3luY19vbigpKSBvYmouSWQgPSBvW3RoaXMuc1RhYmxlXS5JZDsKCgkJCQkJCWF3YWl0IG9ialtlbS5OYW1lXSguLi5lbS5NZXRob2RQYXJhbWV0ZXJzLm1hcChwID0+IG9bcC5OYW1lXSkpOwoJCQkJCX0KCQkJCX1dKQoJCQl9OwoJCX0KCX0KCglTdG9yZUNvbXBvbmVudCA9IGNsYXNzIGV4dGVuZHMgdGhpcy5Db3JlQ29tcG9uZW50IHsKCQlhc3luYyBtYWluKCkgewoJCQl0aGlzLl9jYW5WaWV3KCk7CgoJCQl0aGlzLnNUYWJsZSA9IHRoaXMucGFnZS5kYXRhOwoJCQljb25zb2xlLmNsZWFyKCk7CgoJCQkvL2NvbnNvbGUubG9nKCJEeW5hRm9ybTo6U3RvcmVDb21wb25lbnQoKTogc1RhYmxlIiwgdGhpcy5zVGFibGUpOwoKCQkJbGV0IGVjID0gX0ZyRU1ELl9fc2NvcGUoKS5FbnRpdHlDbGFzc2VzLmZpbmQoYyA9PiBjLk5hbWUgPT0gdGhpcy5zVGFibGUpOwoKCQkJdGhpcy5wYWdlLmRhdGEgPSB7CgkJCQlmb3JtOiB0aGlzLmRGb3JtLnJlbmRlcihlYy5OYW1lLnJlcGxhY2UoL1wgL2csICdfJyksIF9GckVNRC5fdGl0bGVDYXNlKGVjLk5hbWUpLCBbT2JqZWN0LmFzc2lnbih0aGlzLl9lbnRpdHlGaWVsZChlYyksIHsKCQkJCQlzZWxlY3Q6IGFzeW5jIG8gPT4gewoJCQkJCQl0aGlzLmRGb3JtLmNsZWFyKCk7CgkJCQkJCXRoaXMuZEZvcm0uYnVzeSh0cnVlKTsKCgkJCQkJCWxldCByID0gYXdhaXQgby5maW5kKCk7CgkJCQkJCXRoaXMuZEZvcm0uc2V0KE9iamVjdC5hc3NpZ24oewoJCQkJCQkJW2VjLk5hbWUucmVwbGFjZSgvXCAvZywgJ18nKV06IHIKCQkJCQkJfSwgLi4uZWMuRW50aXR5QXR0cmlidXRlcy5maWx0ZXIoZWEgPT4gIWVhLkVudGl0eU1ldGhvZCkuZmlsdGVyKGVhID0+IHR5cGVvZihyW2VhLk5hbWVdKCkpICE9PSAndW5kZWZpbmVkJykubWFwKGVhID0+ICh7CgkJCQkJCQlbZWEuTmFtZV06IHJbZWEuTmFtZV0oKQoJCQkJCQl9KSkpKTsKCQkJCQkJdGhpcy5kRm9ybS5idXN5KGZhbHNlKTsKCQkJCQl9CgkJCQl9KV0uY29uY2F0KC4uLmVjLkVudGl0eUF0dHJpYnV0ZXMuZmlsdGVyKGVhID0+ICFlYS5FbnRpdHlNZXRob2QpLm1hcChlYSA9PiB0aGlzLl9lYVRvRmllbGQoZWEpKSksIFt7CgkJCQkJbmFtZTogJ1Jlc2V0JywKCQkJCQlvbmNsaWNrOiBvID0+IHsKCQkJCQkJdGhpcy5kRm9ybS5jbGVhcigpOwoJCQkJCX0sCgkJCQkJaWNvbjogImNhbmNlbCIKCQkJCX0sIHsKCQkJCQluYW1lOiAnUmVsb2FkJywKCQkJCQlvbmNsaWNrOiBvID0+IF9GckVNRC5SZW5kZXJQYWdlKHsKCQkJCQkJX2NvZGU6ICdzdG9yZScKCQkJCQl9LCB0aGlzLnBhZ2UuZGF0YSksCgkJCQkJaWNvbjogInJlbG9hZCIKCQkJCX0sIHsKCQkJCQluYW1lOiAnU2F2ZScsCgkJCQkJb25jbGljazogYXN5bmMgbyA9PiB7CgkJCQkJCWxldCBvYmogPSBfRnJFTUQuYXBpU2VydmVyLl9uZXcodGhpcy5zVGFibGUpOwoJCQkJCQkvL2NvbnNvbGUubG9nKCJvbmNsaWNrKCkiLCB0aGlzLnNUYWJsZSwgb2JqLCBvLCBvW3RoaXMuc1RhYmxlXSk7CgkJCQkJCWlmIChvW3RoaXMuc1RhYmxlXSAmJiB0eXBlb2Yob1t0aGlzLnNUYWJsZV0uX19zeW5jX29uKSA9PT0gJ2Z1bmN0aW9uJyAmJiBvW3RoaXMuc1RhYmxlXS5fX3N5bmNfb24oKSkgb2JqLklkID0gb1t0aGlzLnNUYWJsZV0uSWQ7CgoJCQkJCQllYy5FbnRpdHlBdHRyaWJ1dGVzLmZpbHRlcihlYSA9PiAhZWEuRW50aXR5TWV0aG9kKS5mb3JFYWNoKGVhID0+IG9ialtlYS5OYW1lXShvW2VhLk5hbWVdKSk7CgkJCQkJCS8vcmV0dXJuIGNvbnNvbGUubG9nKG9iai5fdG9GaWxlTmFtZSgpLCBvYmopOwoJCQkJCQlhd2FpdCBvYmouc3RvcmUoKTsKCQkJCQl9CgkJCQl9XSkKCQkJfTsKCQl9Cgl9CgkvKiogQ29tcG9uZW50czo6RW5kICoqLwp9Ow==",
	"storedMethod": null,
	"__keys": ["name"],
	"active": true,
	"enabled": true,
	"__trMap": []
}