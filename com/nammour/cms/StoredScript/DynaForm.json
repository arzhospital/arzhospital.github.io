{
	"Id": "51af682f2e1683a3a3bab9bfe6cac915ebefc909",
	"after": null,
	"async": null,
	"before": null,
	"date": "undefined",
	"name": "DynaForm",
	"order": null,
	"remark": "dW5kZWZpbmVk",
	"script": "",
	"Name": "DynaForm",
	"Script": "d2luZG93LkR5bmFGb3JtID0gY2xhc3MgewoJY29uc3RydWN0b3IoKSB7CgkJdGhpcy50aXRsZSA9ICJGb3JtIFRpdGxlIjsKCQl0aGlzLm5hbWUgPSAiZnJtRm9ybSI7CgkJdGhpcy5lbGVtZW50cyA9IFtdOwoJCXRoaXMuc2VsZWN0cyA9IFtdOwoJCXRoaXMuZ3JpZHMgPSBbXTsKCQl0aGlzLmJ1dHRvbnMgPSBbXTsKCQl0aGlzLnpvbmVzID0gWydub3J0aCcsICdzb3V0aCcsICdlYXN0JywgJ3dlc3QnLCAnY2VudGVyJ107CgkJdGhpcy5zVGFibGUgPSBudWxsOwoJCXRoaXMuYkRlYnVnID0gZmFsc2U7CgkJdGhpcy51aVR5cGVzID0gewoJCQlpbnQ6ICJudW1iZXJzcGlubmVyIiwKCQkJbWVudTogInNwbGl0YnV0dG9uIiwKCQkJZGF0ZXRpbWU6ICJkYXRldGltZWJveCIsCgkJCWJvb2w6ICJzd2l0Y2hidXR0b24iLAoJCQlmaWxlOiAiZmlsZWJveCIsCgkJCXRleHQ6ICJ0ZXh0Ym94IiwKCQkJbGFiZWw6ICJodG1sIiwKCQkJcGFzc3dvcmQ6ICJwYXNzd29yZGJveCIsCgkJCXN0cmluZzogInRleHRib3giLAoJCQlpbWFnZTogImRpYWxvZyIsCgkJCXByb2dyZXNzOiAicHJvZ3Jlc3NiYXIiLAoJCQlsaW5rOiAibGlua2J1dHRvbiIsCgkJCXRyZWU6ICJjb21ib3RyZWUiLAoJCQluYXZpZ2F0aW9uOiAidHJlZSIsCgkJCXNlYXJjaDogJ3NlYXJjaGJveCcsCgkJfTsKCQl0aGlzLmV2ZW50cyA9IFt7CgkJCW5hbWU6ICdvbkNsaWNrJywKCQkJaGFuZGxlcjogJ29uVG9nZ2xlJywKCQkJcGFyYW1zOiAnbj1ldmVudCcsCgkJCXR5cGU6ICd0b2dnbGUnLAoJCX0sIHsKCQkJbmFtZTogJ29uQ2xvc2UnLAoJCQloYW5kbGVyOiAnUGFuT25DbG9zZScsCgkJCXBhcmFtczogJ249ZXZlbnQnLAoJCQl0eXBlOiAnd2luZG93JywKCQl9LCB7CgkJCW5hbWU6ICdvblNlbGVjdCcsCgkJCWhhbmRsZXI6ICdTZWxlY3RDaGFuZ2UnLAoJCQlwYXJhbXM6ICduJywKCQkJdHlwZTogJ3RhYnMnLAoJCX0sIHsKCQkJbmFtZTogJ3NlYXJjaGVyJywKCQkJaGFuZGxlcjogJ0ZpZWxkQ2hhbmdlJywKCQkJcGFyYW1zOiAnbiwgbycsCgkJCXR5cGU6ICdzZWFyY2hib3gnLAoJCX0sIHsKCQkJbmFtZTogJ29uQmVmb3JlRXhwYW5kJywKCQkJaGFuZGxlcjogJ0V4cGFuZCcsCgkJCXBhcmFtczogJ24nLAoJCQl0eXBlOiAndHJlZScsCgkJfSwgewoJCQluYW1lOiAnb25DaGFuZ2UnLAoJCQloYW5kbGVyOiAnRmllbGRDaGFuZ2UnLAoJCQlwYXJhbXM6ICduLCBvJwoJCX0sIHsKCQkJbmFtZTogJ29uQmVmb3JlT3BlbicsCgkJCWhhbmRsZXI6ICdQYW5lbE9wZW4nLAoJCQlwYXJhbXM6ICcnLAoJCQl0eXBlOiAnd2luZG93JywKCQl9LCB7CgkJCW5hbWU6ICdvbk9wZW4nLAoJCQloYW5kbGVyOiAnUGVuZEFmdGVyT3BlbicsCgkJCXBhcmFtczogJycsCgkJCXR5cGU6ICd3aW5kb3cnLAoJCX0sIHsKCQkJbmFtZTogJ29uQ2xpY2snLAoJCQloYW5kbGVyOiAnZG9MaW5rJywKCQkJcGFyYW1zOiAnbj1ldmVudCwgbycsCgkJCXR5cGU6ICdsaW5rJywKCQl9LCB7CgkJCW5hbWU6ICdvbkNsaWNrUm93JywKCQkJaGFuZGxlcjogJ0ZpZWxkQ2hhbmdlJywKCQkJcGFyYW1zOiAnbiwgbycsCgkJCXR5cGU6ICdncmlkJywKCQl9XTsKCgkJaWYgKHR5cGVvZigkKSAhPT0gJ3VuZGVmaW5lZCcpICQod2luZG93KS5yZXNpemUodGhpcy53aW5kb3dSZXNpemVkKTsKCQl0aGlzLndpbmRvd1Jlc2l6ZWQoKTsKCX0KCglzcigpIHsKCQlyZXR1cm4gdHlwZW9mKF9GckVNRCkgIT09ICd1bmRlZmluZWQnID8gX0ZyRU1ELnNyKCkgOiB3aW5kb3cuc3I7Cgl9CgoJcGFyc2UoKSB7CgkJJC5wYXJzZXIucGFyc2UoKTsKCX0KCgl3aW5kb3dSZXNpemVkKCkgewoJCXRoaXMud2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDsKCQl0aGlzLmhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodCAqIDAuODsKCX0KCglpbml0KCkgewoJCXZhciBzZWxlY3QgPSB7CgkJCWluaXQ6IGZ1bmN0aW9uKGNvbnRhaW5lciwgb3B0aW9ucykgewoJCQkJdmFyIG9wID0gbnVsbDsKCQkJCXZhciBmb3AgPSBudWxsOwoJCQkJZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmdyaWRzLmxlbmd0aDsgaSsrKQoJCQkJCWlmICh0cnVlIHx8IHRoaXMuZ3JpZHNbaV0uaWQgPT0gb3B0aW9ucy5zb3VyY2UpIG9wID0gdGhpcy5ncmlkc1tpXS5vcHRpb25zOwoJCQkJZm9yIChpID0gMDsgaSA8IG9wLmNvbHVtbnMubGVuZ3RoOyBpKyspCgkJCQkJaWYgKG9wLmNvbHVtbnNbaV0ubmFtZSA9PSBvcHRpb25zLmZpZWxkKSBmb3AgPSBvcC5jb2x1bW5zW2ldOwoJCQkJZm9wLndpZHRoID0gKHRoaXMud2lkdGggLyAzKTsKCQkJCXZhciBlID0gJCh0aGlzLnNlbGVjdChmb3ApKTsKCQkJCXZhciBpbnB1dCA9IGUuYXBwZW5kVG8oY29udGFpbmVyKTsKCQkJCWlucHV0LmNvbWJvZ3JpZCgpOwoJCQkJdGhpcy5iaW5kKGlucHV0KTsKCQkJCXJldHVybiBpbnB1dDsKCQkJfSwKCQkJZGVzdHJveTogZnVuY3Rpb24odGFyZ2V0KSB7CgkJCQkkKHRhcmdldCkucmVtb3ZlKCk7CgkJCX0sCgkJCWdldFZhbHVlOiBmdW5jdGlvbih0YXJnZXQpIHsKCQkJCXJldHVybiAkKHRhcmdldCkudmFsKCk7CgkJCX0sCgkJCXNldFZhbHVlOiBmdW5jdGlvbih0YXJnZXQsIHZhbHVlKSB7CgkJCQkkKHRhcmdldCkudmFsKHZhbHVlKTsKCQkJfSwKCQkJcmVzaXplOiBmdW5jdGlvbih0YXJnZXQsIHdpZHRoKSB7CgkJCQkkKHRhcmdldCkuX291dGVyV2lkdGgod2lkdGgpOwoJCQl9CgkJfTsKCQkkLmV4dGVuZCgkLmZuLmRhdGFncmlkLmRlZmF1bHRzLmVkaXRvcnMsIHsKCQkJZGF0ZXRpbWU6IHsKCQkJCWluaXQ6IGZ1bmN0aW9uKGNvbnRhaW5lciwgb3B0aW9ucykgewoJCQkJCW9wdGlvbnMud2lkdGggPSB0aGlzLmNXaWR0aChvcHRpb25zKTsKCQkJCQl2YXIgaW5wdXQgPSAkKHRoaXMuZGF0ZXRpbWUob3B0aW9ucykpLmFwcGVuZFRvKGNvbnRhaW5lcik7CgkJCQkJaW5wdXQuZGF0ZXRpbWVib3goKTsKCQkJCQlyZXR1cm4gaW5wdXQ7CgkJCQl9LAoJCQkJZGVzdHJveTogZnVuY3Rpb24odGFyZ2V0KSB7CgkJCQkJJCh0YXJnZXQpLnJlbW92ZSgpOwoJCQkJfSwKCQkJCWdldFZhbHVlOiBmdW5jdGlvbih0YXJnZXQpIHsKCQkJCQlyZXR1cm4gJCh0YXJnZXQpLnZhbCgpOwoJCQkJfSwKCQkJCXNldFZhbHVlOiBmdW5jdGlvbih0YXJnZXQsIHZhbHVlKSB7CgkJCQkJJCh0YXJnZXQpLnZhbCh2YWx1ZSk7CgkJCQl9LAoJCQkJcmVzaXplOiBmdW5jdGlvbih0YXJnZXQsIHdpZHRoKSB7CgkJCQkJJCh0YXJnZXQpLl9vdXRlcldpZHRoKHdpZHRoKTsKCQkJCX0KCQkJfSwKCQkJY2hlY2tib3g6IHsKCQkJCWluaXQ6IGZ1bmN0aW9uKGNvbnRhaW5lciwgb3B0aW9ucykgewoJCQkJCXZhciBpbnB1dCA9ICQodGhpcy5ib29sKG9wdGlvbnMpKS5hcHBlbmRUbyhjb250YWluZXIpOwoJCQkJCWlucHV0LnN3aXRjaGJ1dHRvbigpOwoJCQkJCXJldHVybiBpbnB1dDsKCQkJCX0sCgkJCQlkZXN0cm95OiBmdW5jdGlvbih0YXJnZXQpIHsKCQkJCQkkKHRhcmdldCkucmVtb3ZlKCk7CgkJCQl9LAoJCQkJZ2V0VmFsdWU6IGZ1bmN0aW9uKHRhcmdldCkgewoJCQkJCXJldHVybiAkKHRhcmdldCkudmFsKCk7CgkJCQl9LAoJCQkJc2V0VmFsdWU6IGZ1bmN0aW9uKHRhcmdldCwgdmFsdWUpIHsKCQkJCQkkKHRhcmdldCkudmFsKHZhbHVlKTsKCQkJCX0sCgkJCQlyZXNpemU6IGZ1bmN0aW9uKHRhcmdldCwgd2lkdGgpIHsKCQkJCQkkKHRhcmdldCkuX291dGVyV2lkdGgod2lkdGgpOwoJCQkJfQoJCQl9LAoJCQljb21ib3RyZWVncmlkOiBzZWxlY3QsCgkJCXNlbGVjdDogc2VsZWN0LAoJCX0pOwoJfQoKCWFzayhxdWVzdGlvbiwgZkFuc3dlciA9IHYgPT4gdiwgb3B0aW9ucykgewoJCSQubWVzc2FnZXIuY29uZmlybSh0aGlzLnRpdGxlLCBxdWVzdGlvbiwgZnVuY3Rpb24ocikgewoJCQlpZiAob3B0aW9ucykgewoJCQkJZm9yICh2YXIgaSA9IDA7IGkgPCBvcHRpb25zLmxlbmd0aDsgaSsrKSB7CgkJCQkJaWYgKG9wdGlvbnNbaV0uYW5zd2VyID09IHIpIHsKCQkJCQkJcmV0dXJuIGZBbnN3ZXIob3B0aW9uc1tpXS52YWx1ZSk7CgkJCQkJfQoJCQkJfQoJCQl9IGVsc2UgewoJCQkJcmV0dXJuIGZBbnN3ZXIocik7CgkJCX0KCQl9KTsKCX0KCgl0b3BEYXRhKGFyLCBnRmllbGQsIHZGaWVsZCwgdG9wKSB7CgkJaWYgKCF0b3ApIHsKCQkJcmV0dXJuIGFyOwoJCX0KCQlyZXQgPSBbXTsKCQkkLmVhY2godGhpcy5zcigpLmdyb3VwQnkoYXIsIGdGaWVsZCksIGZ1bmN0aW9uKGtleSwgdmFsdWVzKSB7CgkJCXZhbHVlcy52YWx1ZXMuc29ydCgoYSwgYikgPT4gewoJCQkJaWYgKHBhcnNlRmxvYXQoYVt2RmllbGRdKSA8IHBhcnNlRmxvYXQoYlt2RmllbGRdKSkgewoJCQkJCXJldHVybiAxOwoJCQkJfSBlbHNlIGlmIChwYXJzZUZsb2F0KGFbdkZpZWxkXSkgPiBwYXJzZUZsb2F0KGJbdkZpZWxkXSkpIHsKCQkJCQlyZXR1cm4gLTE7CgkJCQl9IGVsc2UgewoJCQkJCXJldHVybiAwOwoJCQkJfQoJCQl9KTsKCQkJJC5lYWNoKHZhbHVlcy52YWx1ZXMsIGZ1bmN0aW9uKGksIHYpIHsKCQkJCWlmIChpIDwgdG9wKSB7CgkJCQkJcmV0LnB1c2godik7CgkJCQl9CgkJCX0pOwoJCX0pOwoJCXJldHVybiByZXQ7Cgl9CgoJYXN5bmMgZG9DbGljayhidXR0b24pIHsKCQlsZXQgX3RoaXMgPSB0eXBlb2YodGhpcy5kb0NsaWNrKSA9PT0gJ2Z1bmN0aW9uJyA/IHRoaXMgOiB3aW5kb3cuREZvcm07CgkJYnV0dG9uID0gX3RoaXMuYnV0dG9ucy5maW5kKGIgPT4gYi5uYW1lID09IGJ1dHRvbi5uYW1lICYmIGIuZ3JvdXAgPT0gYnV0dG9uLmdyb3VwKTsKCQlfdGhpcy5idXN5KHRydWUpOwoJCV90aGlzLnNldCh7CgkJCVdvcmtQcm9ncmVzc1ZhbHVlOiAyMAoJCX0pCgoJCXZhciBvID0gX3RoaXMuZ2V0KCk7CgkJdmFyIHNNaXNzaW5nID0gX3RoaXMuZWxlbWVudHMuZmlsdGVyKGUgPT4gKGJ1dHRvbi53aW5kb3cgPyBidXR0b24uZ3JvdXAgPT0gZS5ncm91cCA6IHRydWUpKS5maWx0ZXIoZSA9PiBlLnJlcXVpcmVkICYmICFvW2UubmFtZV0pLm1hcChlID0+ICI8bGk+IiArIChlLmxhYmVsIHx8IGUubmFtZSkgKyAiPC9saT4iKS5qb2luKCIiKTsKCQlpZiAoc01pc3NpbmcpIHsKCQkJd2luZG93Ll9GckVNRC5fZXJyb3IoIk1pc3NpbmcgbWFuZGF0b3J5IGZpZWxkczo8YnIvPjx1bD4iICsgc01pc3NpbmcgKyAiPC91bD4iLCA1MDAwKTsKCQkJX3RoaXMuYnVzeShmYWxzZSk7CgkJCXJldHVybjsKCQl9CgkJaWYgKGJ1dHRvbi5vbmNsaWNrKSBhd2FpdCBidXR0b24ub25jbGljayhvKTsKCQlpZiAoYnV0dG9uLm9uQ2xpY2spIGF3YWl0IGJ1dHRvbi5vbkNsaWNrKG8pOwoJCV90aGlzLmJ1c3koZmFsc2UpOwoJfQoKCWJ1c3koYkJ1c3kpIHsKCQlpZiAoIWJCdXN5KSB7CgkJCXZhciB0b3RhbCA9IDA7CgkJCWlmICh0eXBlb2YgbW9tZW50ICE9PSAndW5kZWZpbmVkJykgewoJCQkJdG90YWwgPSBtb21lbnQoKS5kaWZmKG1vbWVudCh0aGlzLmJ1c3lTdGFtcCksICdzZWNvbmRzJyk7CgkJCX0gZWxzZSB7CgkJCQkvLyBubyBtb21lbnQsIHVzZSBzdGFuZGFyZCBEYXRlCgkJCQl0b3RhbCA9IChuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIHRoaXMuYnVzeVN0YW1wID8gdGhpcy5idXN5U3RhbXAuZ2V0VGltZSgpIDogMCkgLyAxMDAwIC8gMzYwMDsKCQkJfQoJCQlpZiAodGhpcy5iRGVidWcpIHsKCQkJCXdpbmRvdy5fRnJFTUQuX2FsZXJ0KCJFeGVjdXRpb24gVGltZTogIiArIHRvdGFsICsgIiBzZWNvbmRzLiIpOwoJCQl9CgkJCWRlbGV0ZSB0aGlzLmJ1c3lTdGFtcDsKCgkJCXNldEludGVydmFsKDEsICgpID0+IHRoaXMuU2V0KHsKCQkJCUxvYWRpbmc6IDEwCgkJCX0pKTsKCQl9IGVsc2UgewoJCQl0aGlzLmJ1c3lTdGFtcCA9IG5ldyBEYXRlKCk7CgkJfQoKCQkkLmVhY2goJC5tZXJnZSgkLm1hcCh0aGlzLmJ1dHRvbnMsIGIgPT4gYi5uYW1lKSwgJC5tYXAodGhpcy5lbGVtZW50cy5maWx0ZXIoZSA9PiBlLnR5cGUgPT0gJ2xpbmsnKSwgZSA9PiBlLm5hbWUpKSwgKF8sIGUpID0+ICQoJyMnICsgZSkubGlua2J1dHRvbihiQnVzeSA/ICdkaXNhYmxlJyA6ICdlbmFibGUnKSk7Cgl9CgoJcHJlZml4KGUpIHsKCQlzd2l0Y2ggKGUudHlwZSkgewoJCQljYXNlICdsYWJlbCc6CgkJCQlyZXR1cm4gJ2xibCc7CgkJCWNhc2UgJ3RleHQnOgoJCQljYXNlICdzdHJpbmcnOgoJCQljYXNlICdzZWFyY2gnOgoJCQljYXNlICdwYXNzd29yZCc6CgkJCQlyZXR1cm4gJ3R4dCc7CgkJCWNhc2UgIkRhdGVUaW1lIjoKCQkJY2FzZSAiZGF0ZXRpbWUiOgoJCQkJcmV0dXJuICdkdHAnOwoJCQljYXNlICJpbnQiOgoJCQljYXNlICJpbnRlZ2VyIjoKCQkJY2FzZSAibnVtYmVyIjoKCQkJY2FzZSAibG9uZyI6CgkJCWNhc2UgIkxvbmciOgoJCQkJcmV0dXJuICdudWQnOwoJCQljYXNlICdmaWxlJzoKCQkJCXJldHVybiAnZmlsJzsKCQkJY2FzZSAnaW1hZ2UnOgoJCQkJcmV0dXJuICdpbWcnOwoJCQljYXNlICJib29sIjoKCQkJCXJldHVybiAnY2hrJzsKCQkJY2FzZSAid2luZG93IjoKCQkJCXJldHVybiAncG5sJzsKCQkJY2FzZSAicHJvZ3Jlc3MiOgoJCQkJcmV0dXJuICdwcmcnOwoJCQljYXNlICJncmlkIjoKCQkJY2FzZSAidHJlZSI6CgkJCWNhc2UgInNlbGVjdCI6CgkJCQlyZXR1cm4gJ2NtYic7CgkJCWRlZmF1bHQ6CgkJCQlyZXR1cm4gJyc7CgkJfQoJfQoKCWNsZWFyKGdyb3VwKSB7CgkJdmFyIG8gPSB7fTsKCQkkLmVhY2godGhpcy5lbGVtZW50cy5maWx0ZXIoZSA9PiBncm91cCA/IGUuZ3JvdXAgPT0gZ3JvdXAgOiB0cnVlKSwgKF8sIGUpID0+IHsKCQkJdmFyIG5hbWUgPSAoZS5lbXNTb3VyY2UgPyAiXyIgOiAiIikgKyBlLm5hbWU7CgkJCXN3aXRjaCAoZS50eXBlKSB7CgkJCQljYXNlICd0ZXh0JzoKCQkJCWNhc2UgJ3N0cmluZyc6CgkJCQljYXNlICdzZWFyY2gnOgoJCQkJY2FzZSAncGFzc3dvcmQnOgoJCQkJY2FzZSAiRGF0ZVRpbWUiOgoJCQkJY2FzZSAiZGF0ZXRpbWUiOgoJCQkJCW9bbmFtZV0gPSAiIjsKCQkJCQlicmVhazsKCQkJCWNhc2UgImludCI6CgkJCQljYXNlICJudW1iZXIiOgoJCQkJY2FzZSAiaW50ZWdlciI6CgkJCQljYXNlICJsb25nIjoKCQkJCWNhc2UgIkxvbmciOgoJCQkJY2FzZSAicHJvZ3Jlc3MiOgoJCQkJCW9bbmFtZV0gPSAwOwoJCQkJCWJyZWFrOwoJCQkJY2FzZSAidHJlZSI6CgkJCQljYXNlICJzZWxlY3QiOgoJCQkJCW9bbmFtZV0gPSBudWxsOwoJCQkJCWJyZWFrOwoJCQkJY2FzZSAiZ3JpZCI6CgkJCQkJb1tuYW1lXSA/IG9bbmFtZV0uZGF0YSA9IFtdIDogbnVsbDsKCQkJCQlicmVhazsKCQkJCWNhc2UgImJvb2wiOgoJCQkJCW9bbmFtZV0gPSBmYWxzZTsKCQkJCQlicmVhazsKCQkJCWRlZmF1bHQ6CgkJCQkJYnJlYWs7CgkJCX0KCQl9KTsKCQkvL2NvbnNvbGUubG9nKCJjbGVhciIsIG8pOwoJCXRoaXMuc2V0KG8pOwoJCXRoaXMuYnVzeShmYWxzZSk7Cgl9CgoJc2V0KG8sIGVOYW1lKSB7CgkJaWYgKGVOYW1lKSB7CgkJCXZhciBvRWxlbWVudCA9IHRoaXMuYnlOYW1lKGVOYW1lKTsKCQkJaWYgKCFvRWxlbWVudCkgcmV0dXJuOwoJCQl2YXIgYXR0ID0gbnVsbDsKCQkJaWYgKG8gJiYgby5JZCAmJiBvLkVudGl0eUF0dHJpYnV0ZSkgewoJCQkJLy8gYW4gRW50aXR5VmFsdWUKCQkJCWZvciAodmFyIHAgaW4gbykKCQkJCQlpZiAocC5lbmRzV2l0aCgiVmFsdWUiKSkgYXR0ID0gcDsKCQkJCW9FbGVtZW50LmVtc1NvdXJjZSA9IG87CgkJCX0KCQkJdHJ5IHsKCQkJCWxldCBlTmFtZSA9ICIjIiArIHRoaXMucHJlZml4KG9FbGVtZW50KSArIG9FbGVtZW50Lm5hbWU7CgkJCQlsZXQgZVR5cGUgPSB0aGlzLnVpVHlwZXNbb0VsZW1lbnQudHlwZV07CgkJCQkvLyBjb25zb2xlLmxvZygiRHluYUZvcm06OnNldCgiICsgb0VsZW1lbnQubmFtZSArICIpOiAiLCBlTmFtZSwgZVR5cGUsIG8pOwoJCQkJc3dpdGNoIChvRWxlbWVudC50eXBlKSB7CgkJCQkJY2FzZSAnbGFiZWwnOgoJCQkJCQlpZiAoYXR0KSB7CgkJCQkJCQkkKGVOYW1lKS5odG1sKG9bYXR0XSk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQkkKGVOYW1lKS5odG1sKChvICYmIG8uRW50aXR5QXR0cmlidXRlKSA/ICIiIDogbyk7CgkJCQkJCX0KCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAndGV4dCc6CgkJCQkJY2FzZSAnc3RyaW5nJzoKCQkJCQljYXNlICdwYXNzd29yZCc6CgkJCQkJY2FzZSAiaW50IjoKCQkJCQljYXNlICJzZWFyY2giOgoJCQkJCWNhc2UgImludGVnZXIiOgoJCQkJCWNhc2UgIm51bWJlciI6CgkJCQkJY2FzZSAibG9uZyI6CgkJCQkJY2FzZSAiTG9uZyI6CgkJCQkJCWlmIChhdHQpIHsKCQkJCQkJCSQoZU5hbWUpW2VUeXBlXSgic2V0VmFsdWUiLCBvW2F0dF0pOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJJChlTmFtZSlbZVR5cGVdKCJzZXRWYWx1ZSIsIChvICYmIG8uRW50aXR5QXR0cmlidXRlKSA/ICIiIDogbyk7CgkJCQkJCX0KCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAiRGF0ZVRpbWUiOgoJCQkJCWNhc2UgImRhdGV0aW1lIjoKCQkJCQkJaWYgKGF0dCkgewoJCQkJCQkJJChlTmFtZSlbZVR5cGVdKCdzZXRWYWx1ZScsIChvW2F0dF0gPyB0aGlzLnNyKCkudG9EYXRlVGltZShvW2F0dF0pIDogIiIpKTsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCSQoZU5hbWUpW2VUeXBlXSgnc2V0VmFsdWUnLCAobyAmJiBvLkVudGl0eUF0dHJpYnV0ZSkgPyAiIiA6IChvID8gdGhpcy5zcigpLnRvRGF0ZVRpbWUobykgOiAiIikpOwoJCQkJCQl9CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgImJvb2wiOgoJCQkJCQlpZiAoYXR0KSB7CgkJCQkJCQkkKGVOYW1lKVtlVHlwZV0oKG9bYXR0XSA/ICcnIDogJ3VuJykgKyAnY2hlY2snKTsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCSQoZU5hbWUpW2VUeXBlXSgoKChvICYmIG8uRW50aXR5QXR0cmlidXRlKSA/ICIiIDogbykgPyAnJyA6ICd1bicpICsgJ2NoZWNrJyk7CgkJCQkJCX0KCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAid2luZG93IjoKCQkJCQkJaWYgKGF0dCkgewoJCQkJCQkJb0VsZW1lbnQudmFsdWUgPSBvW2F0dF07CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQlvRWxlbWVudC52YWx1ZSA9IChvICYmIG8uRW50aXR5QXR0cmlidXRlKSA/ICIiIDogbzsKCQkJCQkJfQoJCQkJCQlicmVhazsKCQkJCQljYXNlICJwcm9ncmVzcyI6CgkJCQkJCXZhciB2ID0gMDsKCQkJCQkJaWYgKGF0dCkgewoJCQkJCQkJdiA9IG9bYXR0XTsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCXYgPSAobyAmJiBvLkVudGl0eUF0dHJpYnV0ZSkgPyAiIiA6IG87CgkJCQkJCX0KCQkJCQkJLy9jb25zb2xlLmxvZygiIyIgKyB0aGlzLnByZWZpeChvRWxlbWVudCkgKyBvRWxlbWVudC5uYW1lLCB0aGlzLnVpVHlwZXNbb0VsZW1lbnQudHlwZV0sIE1hdGgucm91bmQodiAqIDEwKSAvIDEwKTsKCQkJCQkJJChlTmFtZSlbZVR5cGVdKCdzZXRWYWx1ZScsIE1hdGgucm91bmQodiAqIDEwKSAvIDEwKTsKCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAiZ3JpZCI6CgkJCQkJCWxldCBjb2xzID0gSlNPTi5wYXJzZSgieyIgKyB0aGlzLm1hcENvbHVtbnMob0VsZW1lbnQsIHRydWUpICsgIn0iKTsKCQkJCQkJJC5lYWNoKGNvbHMuY29sdW1uc1swXSwgKF8sIGMpID0+IGMuZm9ybWF0dGVyID0gdGhpcy5zcigpLnJ1blNjcmlwdCh0aGlzLmZvcm1hdHRlcihvRWxlbWVudC5uYW1lLCBjKSkpOwoJCQkJCQkkKGVOYW1lKS5kYXRhZ3JpZChjb2xzKTsKCQkJCQkJaWYgKGF0dCkgewoJCQkJCQkJJChlTmFtZSkuZGF0YWdyaWQoewoJCQkJCQkJCWRhdGE6IG9bYXR0XQoJCQkJCQkJfSk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQkkKGVOYW1lKS5kYXRhZ3JpZCh7CgkJCQkJCQkJZGF0YTogKG8gJiYgby5FbnRpdHlBdHRyaWJ1dGUpID8gIiIgOiBvCgkJCQkJCQl9KTsKCQkJCQkJfQoJCQkJCQkkKGVOYW1lKS5kYXRhZ3JpZCgidW5zZWxlY3RBbGwiKTsKCQkJCQkJJChlTmFtZSkuZGF0YWdyaWQoKTsKCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAidHJlZSI6CgkJCQkJCXZhciB2ID0gYXR0ID8gb1thdHRdIDogKChvICYmIG8uRW50aXR5QXR0cmlidXRlKSA/ICIiIDogbyk7CgkJCQkJCWlmIChBcnJheS5pc0FycmF5KHYpKSB7CgkJCQkJCQkkKGVOYW1lKVtlVHlwZV0oInRyZWUiKS50cmVlKCJsb2FkRGF0YSIsIHYpOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJJChlTmFtZSlbZVR5cGVdKCdzZXRWYWx1ZScsIHYpOwoJCQkJCQl9CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgInNlbGVjdCI6CgkJCQkJCWlmIChhdHQpIHsKCQkJCQkJCWlmIChvRWxlbWVudC5vcHRpb25zKSB7CgkJCQkJCQkJJChlTmFtZSkuY29tYm8oJ3NldFZhbHVlJyArIChvRWxlbWVudC5tdWx0aXBsZSA/ICdzJyA6ICcnKSwgKG9bYXR0XSA/IG9bYXR0XSA6ICIiKSk7CgkJCQkJCQkJJChlTmFtZSkuY29tYm8oJ3NldFZhbHVlJyArIChvRWxlbWVudC5tdWx0aXBsZSA/ICdzJyA6ICcnKSwgKG9bYXR0XSA/IG9bYXR0XSA6ICIiKSk7CgkJCQkJCQl9IGVsc2UgewoJCQkJCQkJCSQoZU5hbWUpLmNvbWJvZ3JpZCgnc2V0VmFsdWUnICsgKG9FbGVtZW50Lm11bHRpcGxlID8gJ3MnIDogJycpLCAob1thdHRdID8gb1thdHRdIDogIiIpKTsKCQkJCQkJCX0KCQkJCQkJfSBlbHNlIHsKCQkJCQkJCXYgPSBudWxsOwoJCQkJCQkJaWYgKG8gPT09IG51bGwpIHsKCgkJCQkJCQl9IGVsc2UgaWYgKG8uY29uc3RydWN0b3IgPT09IEFycmF5KSB7CgoJCQkJCQkJfSBlbHNlIGlmICghby5FbnRpdHlBdHRyaWJ1dGUpIHsKCQkJCQkJCQl2ID0gbyB8fCB7CgkJCQkJCQkJCUlkOiBvLklkLAoJCQkJCQkJCQlfVG9TdHJpbmc6IG8uX1RvU3RyaW5nLAoJCQkJCQkJCQl0b1N0cmluZzogZnVuY3Rpb24oKSB7CgkJCQkJCQkJCQlyZXR1cm4gdGhpcy5fVG9TdHJpbmc7CgkJCQkJCQkJCX0KCQkJCQkJCQl9OwoJCQkJCQkJfQoJCQkJCQkJaWYgKG9FbGVtZW50Lm9wdGlvbnMpIHsKCQkJCQkJCQkkKGVOYW1lKS5jb21ibygnc2V0VmFsdWUnICsgKG9FbGVtZW50Lm11bHRpcGxlID8gJ3MnIDogJycpLCB2KTsKCQkJCQkJCQkkKGVOYW1lKS5jb21ibygnc2V0VGV4dCcgKyAob0VsZW1lbnQubXVsdGlwbGUgPyAncycgOiAnJyksIHYpOwoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQkkKGVOYW1lKS5jb21ib2dyaWQoJ3NldFZhbHVlJyArIChvRWxlbWVudC5tdWx0aXBsZSA/ICdzJyA6ICcnKSwgdik7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQkJYnJlYWs7CgkJCQkJZGVmYXVsdDoKCQkJCQkJYnJlYWs7CgkJCQl9CgkJCX0gY2F0Y2ggKGV4KSB7CgkJCQljb25zb2xlLmxvZyhleCk7CgkJCX0KCQl9IGVsc2UgewoJCQlmb3IgKHZhciBwIGluIG8pIHsKCQkJCWlmIChwLmluZGV4T2YoJ18nKSA9PT0gMCkgcCA9IHAuc3Vic3RyaW5nKDEpOwoJCQkJdmFyIGUgPSB0aGlzLmJ5TmFtZShwKTsKCQkJCWlmICghZSB8fCAhZS5uYW1lKSBjb250aW51ZTsKCQkJCXZhciB2YWx1ZSA9IG9bcF07CgkJCQlpZiAoZS5uYW1lID09IHRoaXMuc1RhYmxlKSB7CgkJCQkJdmFsdWUgPSBvOwoJCQkJCXZhbHVlLkRhdGUgPSBuZXcgRGF0ZSgpOwoJCQkJfQoJCQkJaWYgKHAgPT0gIkVudGl0eVZhbHVlcyIpIHsKCQkJCQkvLyBhbiBlbXNGb3JtVmFsdWVzIHNvdXJjZQoJCQkJCS8vIGZpbmQgdGhlIEVudGl0eVZhbHVlIGZvciB0aGlzIGVsZW1lbnQgYW5kIHNldCBpdAoJCQkJCWZvciAodmFyIGogPSAwOyBqIDwgby5FbnRpdHlWYWx1ZXMubGVuZ3RoOyBqKyspIHsKCQkJCQkJaWYgKG8uRW50aXR5VmFsdWVzW2pdLkVudGl0eUF0dHJpYnV0ZS5OYW1lID09IGUubmFtZSkgewoJCQkJCQkJLy8gZm91bmQgdGhlIEVudGl0eVZhbHVlIGZvciB0aGlzIGVsZW1lbnQKCQkJCQkJCV92ID0gby5FbnRpdHlWYWx1ZXNbal07CgkJCQkJCQlmb3IgKHZhciBxIGluIF92KSB7CgkJCQkJCQkJaWYgKHEuZW5kc1dpdGgoIlZhbHVlIikpIHsKCQkJCQkJCQkJX3ZbcV0gPSB2YWx1ZTsKCQkJCQkJCQl9CgkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJCXRoaXMuc2V0KHZhbHVlLCBlLm5hbWUpOwoJCQl9CgkJfQoJfQoKCWdldCgpIHsKCQl2YXIgbyA9IHt9OwoJCWlmICh0aGlzLnNUYWJsZSAmJiB3aW5kb3dbdGhpcy5zVGFibGVdKSBvID0gbmV3IHdpbmRvd1t0aGlzLnNUYWJsZV0oKTsKCQlmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZWxlbWVudHMubGVuZ3RoOyBpKyspIHsKCQkJdmFyIGNuID0gbnVsbDsKCQkJdmFyIHYgPSBudWxsOwoJCQl0cnkgewoJCQkJbGV0IGVOYW1lID0gIiMiICsgdGhpcy5wcmVmaXgodGhpcy5lbGVtZW50c1tpXSkgKyB0aGlzLmVsZW1lbnRzW2ldLm5hbWU7CgkJCQlzd2l0Y2ggKHRoaXMuZWxlbWVudHNbaV0udHlwZSkgewoJCQkJCWNhc2UgJ2xhYmVsJzoKCQkJCQkJY24gPSAkKGVOYW1lKTsKCQkJCQkJdiA9IGNuLmh0bWwoKTsKCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAndGV4dCc6CgkJCQkJY2FzZSAnc3RyaW5nJzoKCQkJCQljYXNlICdzZWFyY2gnOgoJCQkJCWNhc2UgJ3Bhc3N3b3JkJzoKCQkJCQkJY24gPSAkKGVOYW1lKTsKCQkJCQkJdiA9IGNuLnZhbCgpOwoJCQkJCQlicmVhazsKCQkJCQljYXNlICJmaWxlIjoKCQkJCQljYXNlICJpbWFnZSI6CgkJCQkJCWNuID0gJChlTmFtZSk7CgkJCQkJCXYgPSB0aGlzLmVsZW1lbnRzW2ldLmRhdGE7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgIkRhdGVUaW1lIjoKCQkJCQljYXNlICJkYXRldGltZSI6CgkJCQkJCXYgPSBuZXcgRGF0ZSgkKGVOYW1lKS5kYXRldGltZWJveCgnZ2V0VmFsdWUnKSk7CgkJCQkJCWNuID0gJChlTmFtZSk7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgInByb2dyZXNzIjoKCQkJCQkJY24gPSAkKGVOYW1lKTsKCQkJCQkJdiA9IGNuLnByb2dyZXNzYmFyKCdnZXRWYWx1ZScpOwoJCQkJCQlicmVhazsKCQkJCQljYXNlICJpbnQiOgoJCQkJCWNhc2UgImludGVnZXIiOgoJCQkJCWNhc2UgIm51bWJlciI6CgkJCQkJY2FzZSAibG9uZyI6CgkJCQkJY2FzZSAiTG9uZyI6CgkJCQkJCWNuID0gJChlTmFtZSk7CgkJCQkJCXYgPSBwYXJzZUZsb2F0KGNuLnZhbCgpKTsKCQkJCQkJaWYgKGlzTmFOKHYpKSB2ID0gMDsKCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAiZ3JpZCI6CgkJCQkJCWNuID0gJChlTmFtZSk7CgkJCQkJCXYgPSBjbi5kYXRhZ3JpZCgnZ2V0RGF0YScpOwoJCQkJCQl2LnNlbGVjdGVkID0gY24uZGF0YWdyaWQoImdldFNlbGVjdGVkIik7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgInRyZWUiOgoJCQkJCQljbiA9ICQoZU5hbWUpOwoJCQkJCQl2ID0gY24uY29tYm90cmVlKCJ0cmVlIikudHJlZSgiZ2V0U2VsZWN0ZWQiKTsKCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAid2luZG93IjoKCQkJCQkJdiA9IHRoaXMuZWxlbWVudHNbaV0udmFsdWU7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgInNlbGVjdCI6CgkJCQkJCWlmICh0aGlzLmVsZW1lbnRzW2ldLm9wdGlvbnMpIHsKCQkJCQkJCXYgPSAkKGVOYW1lKS5jb21ib2dyaWQoJ2dldFZhbHVlJyArICh0aGlzLmVsZW1lbnRzW2ldLm11bHRpcGxlID8gJ3MnIDogJycpKTsKCQkJCQkJCXYgPSB0aGlzLnNyKCkucnVuU2NyaXB0KHYpOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJdiA9ICQoZU5hbWUpLmNvbWJvZ3JpZCgnZ3JpZCcpLmRhdGFncmlkKCdnZXRTZWxlY3Rpb25zJyk7CgkJCQkJCQlpZiAoIXYgfHwgIXYubGVuZ3RoKSB7CgkJCQkJCQkJdiA9ICQoZU5hbWUpLmNvbWJvZ3JpZCgnZ2V0VmFsdWUnICsgKHRoaXMuZWxlbWVudHNbaV0ubXVsdGlwbGUgPyAncycgOiAnJykpOwoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQlpZiAoIXRoaXMuZWxlbWVudHNbaV0ubXVsdGlwbGUpIHYgPSB2WzBdOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJCWNuID0gJChlTmFtZSk7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgImJvb2wiOgoJCQkJCQljbiA9ICQoZU5hbWUpOwoJCQkJCQl2ID0gY24uc3dpdGNoYnV0dG9uKCdvcHRpb25zJykuY2hlY2tlZDsKCQkJCQkJYnJlYWs7CgkJCQkJZGVmYXVsdDoKCQkJCQkJYnJlYWs7CgkJCQl9CgkJCQlvW3RoaXMuZWxlbWVudHNbaV0ubmFtZV0odik7CgkJCX0gY2F0Y2ggKGUpIHsKCQkJCS8vY29uc29sZS5sb2codGhpcy5lbGVtZW50c1tpXS5uYW1lLCBlKTsKCQkJCW9bdGhpcy5lbGVtZW50c1tpXS5uYW1lXSA9IHY7CgkJCX0KCQkJaWYgKGNuKSB7CgkJCQlpZiAoby5FbnRpdHlWYWx1ZXMpIHsKCQkJCQlmb3IgKHZhciBqID0gMDsgaiA8IG8uRW50aXR5VmFsdWVzLmxlbmd0aDsgaisrKSB7CgkJCQkJCWlmICh0aGlzLmVsZW1lbnRzW2ldLm5hbWUgPT0gdGhpcy5zVGFibGUgJiYgdGhpcy5lbGVtZW50c1tpXS5lbXNTb3VyY2UpIG8uSWQgPSB0aGlzLmVsZW1lbnRzW2ldLmVtc1NvdXJjZS5JZDsKCQkJCQkJaWYgKG8uRW50aXR5VmFsdWVzW2pdLkVudGl0eUF0dHJpYnV0ZS5OYW1lID09IHRoaXMuZWxlbWVudHNbaV0ubmFtZSAmJiB0aGlzLmVsZW1lbnRzW2ldLmVtc1NvdXJjZSkgewoJCQkJCQkJby5FbnRpdHlWYWx1ZXNbal0uSWQgPSB0aGlzLmVsZW1lbnRzW2ldLmVtc1NvdXJjZS5JZDsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCQlyZXR1cm4gbzsKCX0KCgljSGVpZ2h0KG9wdGlvbnMpIHsKCQlpZiAob3B0aW9ucyAmJiBvcHRpb25zLmVkaXRvcikgcmV0dXJuIHdpbmRvdy5pbm5lckhlaWdodDsKCQlpZiAob3B0aW9ucyAmJiBvcHRpb25zLmhlaWdodCAmJiB0eXBlb2Yob3B0aW9ucy5oZWlnaHQpID09PSAnc3RyaW5nJykgcmV0dXJuIHRoaXMuaGVpZ2h0OwoJCWlmIChvcHRpb25zICYmIG9wdGlvbnMudHlwZSA9PSAnd2luZG93JyAmJiAhb3B0aW9ucy5oZWlnaHQpIHJldHVybiB0aGlzLmhlaWdodCAqIDAuOTsKCQlyZXR1cm4gTWF0aC5mbG9vcigoKG9wdGlvbnMgPyBvcHRpb25zLmhlaWdodCA6IG51bGwpIHx8ICh0aGlzLmhlaWdodCAvIDMpKSk7Cgl9CgoJc2VhcmNoKG9wdGlvbnMpIHsKCQlyZXR1cm4gdGhpcy5zdHJpbmcob3B0aW9ucyk7Cgl9CgoJc3RyaW5nKG9wdGlvbnMpIHsKCQlvcHRpb25zLmhlaWdodCA9IDIwOwoJCW9wdGlvbnMuc2ltcGxlID0gdHJ1ZTsKCQlyZXR1cm4gdGhpcy50ZXh0KG9wdGlvbnMpOwoJfQoKCWRhdGV0aW1lKG9wdGlvbnMpIHsKCQlyZXR1cm4gYDxpbnB1dCBpZD0iZHRwJHtvcHRpb25zLm5hbWV9IiBjbGFzcz0iZWFzeXVpLSR7dGhpcy51aVR5cGVzW29wdGlvbnMudHlwZV19IiByZXF1aXJlZD0iJHtvcHRpb25zLnJlcXVpcmVkID8gJ3RydWUnIDogJ2ZhbHNlJ30iIHZhbHVlPSIke3RoaXMudmFsdWUob3B0aW9ucyl9IiBzdHlsZT0id2lkdGg6JHt0aGlzLmNXaWR0aChvcHRpb25zKX1weCI+YDsKCX0KCglxdWVyeShvcHRpb25zKSB7CgkJcmV0dXJuICI8ZGl2IGlkPSd2cyIgKyBvcHRpb25zLm5hbWUgKyAiJz48L2Rpdj4iOwoJfQoKCURhdGVUaW1lKG9wdGlvbnMpIHsKCQlyZXR1cm4gdGhpcy5kYXRldGltZShvcHRpb25zKTsKCX0KCglsb25nKG9wdGlvbnMpIHsKCQlyZXR1cm4gdGhpcy5pbnQob3B0aW9ucyk7Cgl9CgoJTG9uZyhvcHRpb25zKSB7CgkJcmV0dXJuIHRoaXMubG9uZyhvcHRpb25zKTsKCX0KCgl2YWx1ZShvcHRpb25zKSB7CgkJaWYgKHR5cGVvZiBvcHRpb25zLnZhbHVlID09PSAnZnVuY3Rpb24nKSB7CgkJCXRyeSB7CgkJCQlyZXR1cm4gb3B0aW9ucy52YWx1ZSh0aGlzLmdldCgpKTsKCQkJfSBjYXRjaCAoZXgpIHsKCQkJCWNvbnNvbGUubG9nKGBERm9ybS52YWx1ZSgke29wdGlvbnMubmFtZX0pOiAke2V4fWApOwoJCQkJcmV0dXJuICcnOwoJCQl9CgkJfSBlbHNlIHsKCQkJc3dpdGNoIChvcHRpb25zLnR5cGUpIHsKCQkJCWNhc2UgJ2ludCc6CgkJCQljYXNlICdwcm9ncmVzcyc6CgkJCQkJcmV0dXJuIG9wdGlvbnMudmFsdWUgfHwgb3B0aW9ucy5taW4gfHwgMDsKCQkJCWNhc2UgJ3N0cmluZyc6CgkJCQljYXNlICd0ZXh0JzoKCQkJCWNhc2UgJ2RhdGV0aW1lJzoKCQkJCWNhc2UgJ2xhYmVsJzoKCQkJCQlyZXR1cm4gb3B0aW9ucy52YWx1ZSB8fCAiIjsKCQkJCWRlZmF1bHQ6CgkJCQkJcmV0dXJuIG9wdGlvbnMudmFsdWU7CgkJCX0KCQl9Cgl9CgoJaW50KG9wdGlvbnMpIHsKCQlsZXQgcmV0ID0gYDxpbnB1dCBpZD0ibnVkJHtvcHRpb25zLm5hbWV9IiBjbGFzcz0iZWFzeXVpLSR7dGhpcy51aVR5cGVzW29wdGlvbnMudHlwZV19IiByZXF1aXJlZD0iJHtvcHRpb25zLnJlcXVpcmVkID8gJ3RydWUnIDogJ2ZhbHNlJ30iIHZhbHVlPSIke3RoaXMudmFsdWUob3B0aW9ucyl9IiBkYXRhLW9wdGlvbnM9Im1pbjoke29wdGlvbnMubWluIHx8IDB9LG1heDoke29wdGlvbnMubWF4IHx8IDEwMH0saW5jcmVtZW50OiR7b3B0aW9ucy5pbmNyZW1lbnQgfHwgMX0iIHN0eWxlPSJ3aWR0aDoke3RoaXMuY1dpZHRoKG9wdGlvbnMpfXB4OyI+PC9pbnB1dD5gOwoJCS8vY29uc29sZS5sb2cocmV0KTsKCQlyZXR1cm4gcmV0OwoJfQoKCW1lbnUob3B0aW9ucykgewoJCXZhciByZXQgPSAiIjsKCQlyZXQgKz0gJzxkaXYgY2xhc3M9ImVhc3l1aS1wYW5lbCIgaWQ9Im1udScgKyBvcHRpb25zLm5hbWUgKyAnIiBzdHlsZT0icGFkZGluZzo1cHg7Ij5cbic7CgkJJC5lYWNoKG9wdGlvbnMubWVudSwgKF8sIG0pID0+IHJldCArPSBgPGEgaHJlZj0iIyIgY2xhc3M9ImVhc3l1aS0ke3RoaXMudWlUeXBlc1tvcHRpb25zLnR5cGUgfHwgJ21lbnUnXX0iIGRhdGEtb3B0aW9ucz0ibWVudTonI21tJHttLmxhYmVsLnJlcGxhY2UoLyAvZywgJycpfScsaWNvbkNsczonaWNvbi0ke20uaWNvbiB8fCAnbm9uZSd9JyI+JHttLmxhYmVsfTwvYT5cbmApOwoJCXJldCArPSAiPC9kaXY+XG4iOwoJCWxldCBkdiA9IG0gPT4gewoJCQlsZXQgcmV0ID0gJzxkaXYnICsgKG0uc3ViTWVudXMgPyAnJyA6IGAgZGF0YS1vcHRpb25zPSJpY29uQ2xzOidpY29uLSR7bS5pY29uIHx8ICdub25lJ30nImApICsgJz5cbic7CgkJCXJldCArPSBtLnN1Yk1lbnVzID8gJzxzcGFuPicgKyAobS5sYWJlbCB8fCB0aGlzLmVuZ2xpc2gobS5jb2RlKSkgKyAnPC9zcGFuPlxuPGRpdj4nIDogKGA8c3BhbiB3aWR0aD0nMTAwJScgb25jbGljaz0nKGFzeW5jICgpID0+IHtsZXQgbSA9ICR7X0ZyRU1ELl90b0pTKG0pfTsgaWYobS5hY3Rpb24pe3JldHVybiBhd2FpdCBtLmFjdGlvbihERm9ybS5nZXQoKSwgbSk7fSBpZiAobS5zdWJNZW51cykgcmV0dXJuOyBhd2FpdCBfRnJFTUQuUmVuZGVyUGFnZSh7X2NvZGU6IG0uY29kZSB8fCBtLmxhYmVsLnJlcGxhY2UoLyAvZywgIiIpLnRvTG93ZXJDYXNlKCl9LCBtLmRhdGEpO30pKCknPiR7bS5sYWJlbCB8fCB0aGlzLmVuZ2xpc2gobS5jb2RlKX08L3NwYW4+YCk7CgkJCSQuZWFjaChtLnN1Yk1lbnVzLCAoXywgcykgPT4gcmV0ICs9IGR2KHMpKTsKCQkJcmV0ICs9IChtLnN1Yk1lbnVzID8gIjwvZGl2PlxuIiA6ICIiKSArIGA8L2Rpdj5cbmA7CgkJCXJldHVybiByZXQ7CgkJfTsKCQlmb3IgKHZhciBpID0gMDsgaSA8IG9wdGlvbnMubWVudS5sZW5ndGg7IGkrKykgewoJCQl2YXIgbSA9IG9wdGlvbnMubWVudVtpXTsKCQkJcmV0ICs9ICc8ZGl2IGlkPSJtbScgKyBtLmxhYmVsLnJlcGxhY2UoLyAvZywgJycpICsgJyIgc3R5bGU9IndpZHRoOjE1MHB4OyI+JzsKCQkJZm9yICh2YXIgaiA9IDA7IGogPCBtLnN1Yk1lbnVzLmxlbmd0aDsgaisrKSB7CgkJCQl2YXIgc20gPSBtLnN1Yk1lbnVzW2pdOwoJCQkJcmV0ICs9IGR2KHNtKTsKCQkJfQoJCQlyZXQgKz0gJzwvZGl2PlxuJzsKCQl9CgkJcmV0dXJuIHJldDsKCX0KCglpbnRlZ2VyKG9wdGlvbnMpIHsKCQlyZXR1cm4gdGhpcy5pbnQob3B0aW9ucyk7Cgl9CgoJbnVtYmVyKG9wdGlvbnMpIHsKCQlyZXR1cm4gdGhpcy5pbnQob3B0aW9ucyk7Cgl9CgoJSW50ZWdlcihvcHRpb25zKSB7CgkJcmV0dXJuIHRoaXMuaW50KG9wdGlvbnMpOwoJfQoKCWJvb2wob3B0aW9ucykgewoJCXJldHVybiBgPGlucHV0IGlkPSIke3RoaXMucHJlZml4KG9wdGlvbnMpfSR7b3B0aW9ucy5uYW1lfSIgZGF0YS1kZm9ybT0iZWxlbWVudDoke29wdGlvbnMubmFtZX0iIHJlcXVpcmVkPSIke29wdGlvbnMucmVxdWlyZWQ/J3RydWUnOidmYWxzZSd9IiBkYXRhLW9wdGlvbnM9J2Rpc2FibGVkOiR7b3B0aW9ucy5kaXNhYmxlZD8ndHJ1ZSc6J2ZhbHNlJ30sJHt0aGlzLmV2ZW50SGFuZGxlcnMob3B0aW9ucyl9JyBjbGFzcz0iZWFzeXVpLSR7dGhpcy51aVR5cGVzW29wdGlvbnMudHlwZV19IiAke29wdGlvbnMuY2hlY2tlZD8nY2hlY2tlZCc6Jyd9IC8+YDsKCX0KCglsYWJlbChvcHRpb25zKSB7CgkJcmV0dXJuIGA8c3BhbiBpZD0iJHt0aGlzLnByZWZpeChvcHRpb25zKX0ke29wdGlvbnMubmFtZX0iIHN0eWxlPSJ3aWR0aDoke3RoaXMuY1dpZHRoKG9wdGlvbnMpfXB4IiBkYXRhLW9wdGlvbnM9ImRpc2FibGVkOiR7b3B0aW9ucy5kaXNhYmxlZD8ndHJ1ZSc6J2ZhbHNlJ30iPiR7dGhpcy52YWx1ZShvcHRpb25zKX08L3NwYW4+YDsKCX0KCgl1cmwob3B0aW9ucykgewoJCXJldHVybiB0aGlzLnN0cmluZyhvcHRpb25zKS5yZXBsYWNlKCJGaWVsZENoYW5nZSIsICJVUkxDaGFuZ2UiKTsKCX0KCgl0ZXh0KG9wdGlvbnMpIHsKCQlyZXR1cm4gYDxpbnB1dCBpZD0iJHt0aGlzLnByZWZpeChvcHRpb25zKX0ke29wdGlvbnMubmFtZX0iIGNsYXNzPSJlYXN5dWktJHtvcHRpb25zLmVkaXRvciB8fCB0aGlzLnVpVHlwZXNbb3B0aW9ucy50eXBlXX0iIGRhdGEtb3B0aW9ucz0nZGlzYWJsZWQ6JHtvcHRpb25zLmRpc2FibGVkPyd0cnVlJzonZmFsc2UnfSwke3RoaXMuZXZlbnRIYW5kbGVycyhvcHRpb25zKX0nIG11bHRpbGluZT0iJHtvcHRpb25zLnNpbXBsZSA/ICdmYWxzZScgOiAndHJ1ZSd9IiBzdHlsZT0id2hpdGUtc3BhY2U6cHJlLXdyYXA7d2lkdGg6JHt0aGlzLmNXaWR0aChvcHRpb25zKX1weDtoZWlnaHQ6JHt0aGlzLmNIZWlnaHQob3B0aW9ucyl9cHgiIHJlcXVpcmVkPSIke29wdGlvbnMucmVxdWlyZWQgPyAndHJ1ZScgOiAnZmFsc2UnfSIgdmFsdWU9IiR7dGhpcy52YWx1ZShvcHRpb25zKX0iIC8+YDsKCX0KCglwYXNzd29yZChvcHRpb25zKSB7CgkJdmFyIHJldCA9IHRoaXMuc3RyaW5nKG9wdGlvbnMpOwoJCXJldCA9IHJldC5yZXBsYWNlKCc8aW5wdXQgJywgJzxpbnB1dCB0eXBlPSJwYXNzd29yZCIgJyk7CgkJcmV0dXJuIHJldDsKCX0KCglmaWxlKG9wdGlvbnMpIHsKCQlyZXR1cm4gYDxpbnB1dCBpZD0iJHt0aGlzLnByZWZpeChvcHRpb25zKX0ke29wdGlvbnMubmFtZX0iIGNsYXNzPSJlYXN5dWktJHt0aGlzLnVpVHlwZXNbb3B0aW9ucy50eXBlXX0iIGRhdGEtb3B0aW9ucz0ib25DaGFuZ2U6ZnVuY3Rpb24obixvKXt2YXIgcyA9ICQoJyMnICsgdGhpcy5pZCkuZmlsZWJveCgnb3B0aW9ucycpOyB0aGlzLlVwbG9hZEZpbGUocywgdGhpcy5ieU5hbWUoJyR7b3B0aW9ucy5uYW1lfScpKTt9IiBzdHlsZT0id2lkdGg6JHt0aGlzLmNXaWR0aChvcHRpb25zKX1weCI+YDsKCX0KCglpbWFnZShvcHRpb25zKSB7CgkJcmV0dXJuIHRoaXMuZmlsZShvcHRpb25zKSArIGA8ZGl2IGlkPSJkbGcke29wdGlvbnMubmFtZX0iIGNsYXNzPSJlYXN5dWktJHt0aGlzLnVpVHlwZXNbb3B0aW9ucy50eXBlXX0iIHRpdGxlPSJJbWFnZSBQcmV2aWV3IiBkYXRhLW9wdGlvbnM9ImNsb3NlZDp0cnVlLGljb25DbHM6J2ljb24tc2F2ZScscmVzaXphYmxlOmZhbHNlLG1vZGFsOnRydWUiIHN0eWxlPSJ3aWR0aDo0MDBweDtoZWlnaHQ6MjAwcHg7cGFkZGluZzoxMHB4Ij48aW1nIGlkPSIke3RoaXMucHJlZml4KG9wdGlvbnMpfSR7b3B0aW9ucy5uYW1lfSIgd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSIvPjwvZGl2PmA7Cgl9CgoJcHJvZ3Jlc3Mob3B0aW9ucykgewoJCWlmICghb3B0aW9ucy5oZWlnaHQpIG9wdGlvbnMuaGVpZ2h0ID0gMjA7IC8vIGZpeCBiaWcgcHJvZ3Jlc3MKCQlyZXR1cm4gYDxkaXYgaWQ9IiR7dGhpcy5wcmVmaXgob3B0aW9ucyl9JHtvcHRpb25zLm5hbWV9IiBjbGFzcz0iZWFzeXVpLSR7dGhpcy51aVR5cGVzW29wdGlvbnMudHlwZV19IiBkYXRhLW9wdGlvbnM9InZhbHVlOiR7dGhpcy52YWx1ZShvcHRpb25zKX0iIHN0eWxlPSJ3aWR0aDoke3RoaXMuY1dpZHRoKG9wdGlvbnMpfXB4O2hlaWdodDoke3RoaXMuY0hlaWdodChvcHRpb25zKX1weCI+PC9kaXY+YDsKCX0KCglmbG93Y2hhcnQob3B0aW9ucykgewoJCXJldHVybiBgPGRpdiBpZD0iZmx3JHtvcHRpb25zLm5hbWV9IiB3aWR0aD0iJHt0aGlzLmNXaWR0aChvcHRpb25zKX0iIGhlaWdodD0iJHt0aGlzLmNIZWlnaHQob3B0aW9ucyl9Ij48L2Rpdj5gOwoJfQoKCWNoYXJ0KG9wdGlvbnMpIHsKCQlyZXR1cm4gYDxkaXYgaWQ9ImNodCR7b3B0aW9ucy5uYW1lfSIgd2lkdGg9IiR7dGhpcy5jV2lkdGgob3B0aW9ucyl9IiBoZWlnaHQ9IiR7dGhpcy5jSGVpZ2h0KG9wdGlvbnMpfSI+PC9kaXY+YDsKCX0KCglmb3JtYXR0ZXIobmFtZSwgYywganNvbikgewoJCWpzb24gPSBqc29uID8gJyInIDogJyc7CgkJcmV0dXJuIGAke2pzb259KHZhbHVlLCByb3csIGluZGV4KSA9PiB7dHJ5e3ZhciBjID0gKERGb3JtLmJ5TmFtZShcYCR7bmFtZX1cYCkuY29sdW1ucyB8fCBbXSkuZmluZChjID0+IGMuZmllbGQ9PVxgJHtjLmZpZWxkfVxgKTsgcmV0dXJuIGMmJmMuZm9ybWF0P2MuZm9ybWF0KHZhbHVlLHJvdyxpbmRleCk6dmFsdWU7fWNhdGNoKGV4KXtyZXR1cm4gdmFsdWU7fSB9JHtqc29ufWA7Cgl9CgoJbWFwQ29sdW1ucyhvcHRpb25zLCBqc29uKSB7CgkJbGV0IGNUaXRsZSA9IGMgPT4gYy50aXRsZSB8fCB0aGlzLmVuZ2xpc2goYy5maWVsZCk7CgoJCXZhciBjb2xzID0gJC5ncmVwKG9wdGlvbnMuY29sdW1ucyB8fCBbXSwgYyA9PiAhYy5pZ25vcmUpOwoJCWxldCByZXQgPSAiIjsKCQlpZiAob3B0aW9ucy5tdWx0aXBsZSkgcmV0ICs9IGB7ImZpZWxkIjonY2snLCJjaGVja2JveCI6dHJ1ZX0sYDsKCQlyZXQgPSBgImZyb3plbkNvbHVtbnMiOiBbW2A7CgkJaWYgKCFvcHRpb25zLmZyb3plbikgewoJCQlyZXQgKz0gYHsiZmllbGQiOiIke29wdGlvbnMuaWRGaWVsZC5maWVsZH0iLCJ0aXRsZSI6ICIke29wdGlvbnMuaWRGaWVsZC50aXRsZX0iLCJzb3J0YWJsZSI6ICJ0cnVlIiwgImZvcm1hdHRlciI6ICR7dGhpcy5mb3JtYXR0ZXIob3B0aW9ucy5uYW1lLCBvcHRpb25zLmlkRmllbGQsIGpzb24pfX0sYDsKCQkJaWYgKG9wdGlvbnMudGV4dEZpZWxkLmZpZWxkICE9IG9wdGlvbnMuaWRGaWVsZC5maWVsZCkgcmV0ICs9IGB7ImZpZWxkIjoiJHtvcHRpb25zLnRleHRGaWVsZC5maWVsZCB8fCBvcHRpb25zLnRleHRGaWVsZC50aXRsZX0iLCJ0aXRsZSI6IiR7b3B0aW9ucy50ZXh0RmllbGQudGl0bGUgfHwgb3B0aW9ucy50ZXh0RmllbGQuZmllbGR9Iiwid2lkdGgiOiIke29wdGlvbnMudGV4dEZpZWxkLndpZHRofHwxMjB9IiwgInNvcnRhYmxlIjogInRydWUiLCAiZm9ybWF0dGVyIjogJHt0aGlzLmZvcm1hdHRlcihvcHRpb25zLm5hbWUsIG9wdGlvbnMudGV4dEZpZWxkLCBqc29uKX19YDsKCQl9IGVsc2UgewoJCQkkLm1hcCgkLmdyZXAoY29scywgYyA9PiBjLmZyb3plbiksIGMgPT4gYHsiZmllbGQiOiIke2MuZmllbGQgfHwgY1RpdGxlKGMpfSIsInRpdGxlIjoiJHtjVGl0bGUoYykgfHwgYy5maWVsZH0iLCJ3aWR0aCI6IiR7Yy53aWR0aHx8MTIwfSIsImFsaWduIjonbGVmdCcsInNvcnRhYmxlIjoidHJ1ZSIsICJmb3JtYXR0ZXIiOiAke3RoaXMuZm9ybWF0dGVyKG9wdGlvbnMubmFtZSwgYywganNvbil9fWApLmpvaW4oIiwiKTsKCQl9CgkJcmV0ICs9IGBdXSwgImNvbHVtbnMiOiBbW2A7CgkJcmV0ICs9ICQubWFwKCQuZ3JlcChjb2xzLCBjID0+ICFjLmZyb3plbiksIGMgPT4gYHsiZmllbGQiOiIke2MuZmllbGQgfHwgY1RpdGxlKGMpfSIsInRpdGxlIjoiJHtjVGl0bGUoYykgfHwgYy5maWVsZH0iLCJhbGlnbiI6ImxlZnQiLCJzb3J0YWJsZSI6InRydWUiLCAiZm9ybWF0dGVyIjogJHt0aGlzLmZvcm1hdHRlcihvcHRpb25zLm5hbWUsIGMsIGpzb24pfX1gKS5qb2luKCIsIik7CgkJcmV0ICs9ICddXSc7CgoJCS8vY29uc29sZS5sb2coIkR5bmFGb3JtOjptYXBDb2x1bW5zKCIgKyBvcHRpb25zLm5hbWUgKyAiKTogIiwgcmV0LCBqc29uKTsKCQlyZXR1cm4gcmV0OwoJfQoKCXNlbGVjdChvcHRpb25zLCB0YWcgPSBvcHRpb25zLnRhZywgdHlwZSkgewoJCXJldHVybiB0aGlzLmNvbWJvKG9wdGlvbnMsIHRhZywgdHlwZSk7Cgl9CgoJdHJlZShvcHRpb25zKSB7CgkJcmV0dXJuIHRoaXMuc2VsZWN0KG9wdGlvbnMsICJzZWxlY3QiKTsKCX0KCgluYXZpZ2F0aW9uKG9wdGlvbnMpIHsKCQlyZXR1cm4gdGhpcy5jb21ibyhvcHRpb25zLCAndWwnLCAndHJlZScpOwoJfQoKCWNvbWJvKG9wdGlvbnMsIHRhZywgdHlwZSkgewoJCXZhciBjb2xzID0gJC5ncmVwKG9wdGlvbnMuY29sdW1ucyB8fCBbXSwgYyA9PiAhYy5pZ25vcmUpOwoJCXRhZyA9IHRhZyB8fCAic2VsZWN0IjsKCgkJb3B0aW9ucy5pZEZpZWxkID0gJC51bmlxdWVTb3J0KFt7CgkJCWZpZWxkOiBvcHRpb25zLmlkRmllbGQsCgkJCXRpdGxlOiBvcHRpb25zLmlkRmllbGQKCQl9XS5jb25jYXQoJC5ncmVwKGNvbHMsIGMgPT4gYy5wcmltYXJ5KSwgW3sKCQkJZmllbGQ6ICdJZCcsCgkJCXRpdGxlOiAnSUQnCgkJfV0pKS5maW5kKHggPT4gdHlwZW9mKHguZmllbGQpICE9PSAidW5kZWZpbmVkIik7CgoJCW9wdGlvbnMudGV4dEZpZWxkID0gJC51bmlxdWVTb3J0KFt7CgkJCWZpZWxkOiBvcHRpb25zLnRleHRGaWVsZCwKCQkJdGl0bGU6IG9wdGlvbnMudGV4dEZpZWxkCgkJfV0uY29uY2F0KCQuZ3JlcChjb2xzLCBjID0+IGMuZGlzcGxheSksIFt7CgkJCWZpZWxkOiAnX1RvU3RyaW5nJywKCQkJdGl0bGU6IG9wdGlvbnMubmFtZSwKCQl9XSkpLmZpbmQoeCA9PiB0eXBlb2YoeC5maWVsZCkgIT09ICJ1bmRlZmluZWQiKTsKCgkJLy9jb25zb2xlLmxvZygiRHluYUZvcm06OmNvbWJvKCk6IG9wdGlvbnMiLCBvcHRpb25zKTsKCgkJdmFyIGZ1biA9IHR5cGUgfHwgdGhpcy5lRnVuKG9wdGlvbnMpOwoKCQl2YXIgZHJvcGRvd24gPSBbJ2NvbWJvdHJlZWdyaWQnLCAnY29tYm90cmVlJywgJ2NvbWJvZ3JpZCcsICdzZWxlY3QnXS5pbmRleE9mKGZ1bikgPiAtMTsKCQlpZiAoZHJvcGRvd24pIHRoaXMuc2VsZWN0cy5wdXNoKHsKCQkJaWQ6ICJjbWIiICsgb3B0aW9ucy5uYW1lLAoJCQlvcHRpb25zOiB0aGlzLmJ5TmFtZShvcHRpb25zLm5hbWUpCgkJfSk7CgkJdGhpcy5zZWxlY3RzID0gJC51bmlxdWVTb3J0KHRoaXMuc2VsZWN0cyk7CgkJdmFyIHJldCA9IGA8JHt0YWd9IGlkPSJjbWIke29wdGlvbnMubmFtZX0iIGNsYXNzPSJlYXN5dWktJHtmdW59IiBzdHlsZT0ibWF4LXdpZHRoOiR7ZHJvcGRvd24/JzQwMHB4Jzp0aGlzLmNXaWR0aChvcHRpb25zKX07IHdpZHRoOiR7dGhpcy5jV2lkdGgob3B0aW9ucyl9cHgiIHJlcXVpcmVkPSIkeyhvcHRpb25zLnJlcXVpcmVkID8gJ3RydWUnIDogJ2ZhbHNlJyl9IiBkYXRhLW9wdGlvbnM9J2Rpc2FibGVkOiR7b3B0aW9ucy5kaXNhYmxlZD8ndHJ1ZSc6J2ZhbHNlJ30sJHt0aGlzLmV2ZW50SGFuZGxlcnMob3B0aW9ucyl9LCB2YWx1ZToiJHt0aGlzLnZhbHVlKG9wdGlvbnMpfSIsIHJvd251bWJlcnM6JHt0eXBlb2Yob3B0aW9ucy5yb3dOdW1iZXJzKSE9PSd1bmRlZmluZWQnP29wdGlvbnMucm93TnVtYmVyczooZnVuLmluZGV4T2YoJ3RyZWUnKTwtMT8nZmFsc2UnOid0cnVlJyl9LCBwYWdpbmF0aW9uOiR7dHlwZW9mKG9wdGlvbnMucGFnaW5hdGlvbikhPT0ndW5kZWZpbmVkJz9vcHRpb25zLnBhZ2luYXRpb246KGZ1bi5pbmRleE9mKCd0cmVlJyk8LTE/J2ZhbHNlJzondHJ1ZScpfSwgcGFuZWxXaWR0aDokezIqdGhpcy5jV2lkdGgob3B0aW9ucyl9LCBmaXRDb2x1bW5zOiB0cnVlLCBzaW5nbGVTZWxlY3Q6IHRydWUsIG11bHRpcGxlOiR7KG9wdGlvbnMubXVsdGlwbGUgfHwgJ2ZhbHNlJyl9LCBpZEZpZWxkOiAiJHtvcHRpb25zLmlkRmllbGQuZmllbGR9IiwgZW5hYmxlRmlsdGVyOiAke29wdGlvbnMuZmlsdGVyPyd0cnVlJzonZmFsc2UnfSwgbm93cmFwOiBmYWxzZSwgdGV4dEZpZWxkOiAiJHtvcHRpb25zLnRleHRGaWVsZC5maWVsZH0iLCB0cmVlRmllbGQ6ICIke29wdGlvbnMudGV4dEZpZWxkLmZpZWxkfSIsYDsKCQlpZiAoZnVuLmluZGV4T2YoJ3RyZWUnKSA9PSAtMSkgewoJCQlyZXQgKz0gJ2ZpdENvbHVtbnM6IGZhbHNlLCcgKyB0aGlzLm1hcENvbHVtbnMob3B0aW9ucyk7CgkJfQoJCWlmIChvcHRpb25zLmRhdGEpIHsKCQkJcmV0ICs9IGAsZGF0YTogJHtKU09OLnN0cmluZ2lmeShvcHRpb25zLmRhdGEpfWA7CgkJfQoJCXJldCArPSBgJz5gOwoJCWlmIChvcHRpb25zLm9wdGlvbnMpIHsKCQkJcmV0ICs9ICQubWFwKG9wdGlvbnMub3B0aW9ucywgbyA9PiBgPG9wdGlvbiB2YWx1ZT0nJHtfRnJFTUQuX3RvSlMobyl9Jz4ke28ubmFtZSB8fCBvfTwvb3B0aW9uPmApLmpvaW4oJ1xuJyk7CgkJfQoJCXJldCArPSBgPC8ke3RhZ30+YDsKCQkvLyBjb25zb2xlLmxvZyhyZXQpOwoJCXJldHVybiByZXQ7Cgl9CgoJZ3JpZChvcHRpb25zLCB0YWcsIHR5cGUpIHsKCQlyZXR1cm4gdGhpcy5jb21ibyhvcHRpb25zLCAidGFibGUiLCAiZGF0YWdyaWQiKTsKCX0KCgl0cmVlZ3JpZChvcHRpb25zKSB7CgkJcmV0dXJuIHRoaXMuY29tYm8ob3B0aW9ucywgJ3RhYmxlJywgJ3RyZWUnKTsKCX0KCglhc3luYyBkb0xpbmsoZSwgZXZlbnQpIHsKCQl0aGlzLmJ1c3kodHJ1ZSk7CgkJdHJ5IHsKCQkJYXdhaXQgZS5saW5rcy5maW5kKGwgPT4gbC5sYWJlbCA9PSBldmVudC50YXJnZXQuaW5uZXJUZXh0KS5vbkNsaWNrKHRoaXMuZ2V0KCkpOwoJCX0gY2F0Y2ggKGV4KSB7CgkJCWNvbnNvbGUubG9nKCJEeW5hRm9ybTo6ZG9MaW5rKCk6IEV4Y2VwdGlvbjogIiArIGV4KTsKCQl9CgkJdGhpcy5idXN5KGZhbHNlKTsKCX0KCglFZGl0ZWRWYWx1ZShlKSB7CgkJcmV0dXJuICh0eXBlb2YoYWNlKSAhPT0gInVuZGVmaW5lZCIpID8gYWNlLmVkaXQoJ3BubCcgKyBlLm5hbWUpLnNlc3Npb24uZ2V0VmFsdWUoKSA6ICcnOwoJfQoKCWFzeW5jIFBhbk9uQ2xvc2UoZSkgewoJCWlmIChlLmVkaXRvcikgewoJCQllLnZhbHVlID0gdGhpcy5FZGl0ZWRWYWx1ZShlKTsKCQl9CgkJaWYgKGUuY2xvc2UpIHsKCQkJYXdhaXQgZS5jbG9zZSh0aGlzLmdldCgpKTsKCQl9Cgl9CgoJYXN5bmMgUGVuZEFmdGVyT3BlbihlKSB7CgkJaWYgKGUuZWRpdG9yICYmIHR5cGVvZihhY2UpICE9PSAidW5kZWZpbmVkIikgewoJCQlhd2FpdCBfRnJFTUQuT3BlbkVkaXRvcigncG5sJyArIGUubmFtZSAvKisgJy1jZW50ZXInKi8gLCBlLmxhbmd1YWdlLCBlLmxvYWRlciB8fCAobyA9PiBlLnZhbHVlKSwgZS5zYXZlciwgdGhpcy5nZXQoKSwgZSk7CgkJfQoJCWlmIChlLm9wZW4pIHsKCQkJYXdhaXQgZS5vcGVuKHRoaXMuZ2V0KCkpOwoJCX0KCX0KCglsaW5rKG9wdGlvbnMpIHsKCQlyZXR1cm4gKG9wdGlvbnMubGlua3MgfHwgW10pLmZpbHRlcihsID0+ICFsLmlnbm9yZSkubWFwKGwgPT4gYDxhIGhyZWY9IiMiIGNsYXNzPSJlYXN5dWktJHt0aGlzLnVpVHlwZXNbb3B0aW9ucy50eXBlXX0iIGRhdGEtb3B0aW9ucz0nJHt0aGlzLmV2ZW50SGFuZGxlcnMob3B0aW9ucyl9LCBpY29uQ2xzOiJpY29uLSR7bC5pY29uIHx8ICdvayd9Iic+JHtsLmxhYmVsfTwvYT5gKS5qb2luKCdcbicpOwoJfQoKCWFzeW5jIFNldFRyZWVEYXRhKGUsIG4sIGRhdGEpIHsKCQkkLmVhY2goJCgiI2NtYiIgKyBlLm5hbWUpW3RoaXMuZUZ1bihlKV0oJ3RyZWUnKS50cmVlKCJnZXRDaGlsZHJlbiIsIG4udGFyZ2V0KSwgKF8sIGMpID0+ICQoIiNjbWIiICsgZS5uYW1lKVt0aGlzLmVGdW4oZSldKCd0cmVlJykudHJlZSgicmVtb3ZlIiwgYy50YXJnZXQpKTsKCQkkKCIjY21iIiArIGUubmFtZSlbdGhpcy5lRnVuKGUpXSgndHJlZScpLnRyZWUoImFwcGVuZCIsIHsKCQkJcGFyZW50OiBuLnRhcmdldCwKCQkJZGF0YTogZGF0YQoJCX0pOwoJCXJldHVybiB0cnVlOwoJfQoKCWFzeW5jIEV4cGFuZChlLCBuKSB7CgkJdGhpcy5TZXRUcmVlRGF0YShlLCBuLCBbewoJCQlpZDogbnVsbCwKCQkJdGV4dDogImxvYWRpbmcuLi4iCgkJfV0pOwoJCXZhciBvYmogPSB7fTsKCQl2YXIgcEZpZWxkID0gZS5wYXJlbnRGaWVsZCB8fCAkLm1hcCgkLmdyZXAoZS5jb2x1bW5zIHx8IFtdLCBjID0+IGMucGFyZW50KSwgYyA9PiBjLmZpZWxkKS5jb25jYXQoW251bGxdKVswXTsKCQl2YXIgaWRGaWVsZCA9ICQuZ3JlcChlLmNvbHVtbnMgfHwgW10sIGMgPT4gYy5wcmltYXJ5KS5jb25jYXQoZS5pZEZpZWxkKVswXS5maWVsZDsKCQlpZiAocEZpZWxkKSB7CgkJCW9ialtwRmllbGRdID0gewoJCQkJX3NvdXJjZTogbi5fc291cmNlCgkJCX07CgkJCWlmIChpZEZpZWxkKSB7CgkJCQlvYmpbcEZpZWxkXVtpZEZpZWxkXSA9IG4uaWQ7CgkJCX0gZWxzZSB7CgkJCQlvYmpbcEZpZWxkXSA9IG4uaWQ7CgkJCX0KCQl9CgkJbGV0IGRhdGEgPSBhd2FpdCB0aGlzLl9sb2FkRGF0YSh7CgkJCWlkOiAiY21iIiArIGUubmFtZSwKCQkJb3B0aW9uczogZQoJCX0sIG9iaik7CgkJdGhpcy5TZXRUcmVlRGF0YShlLCBuLCBkYXRhKTsKCX0KCglhc3luYyBfbG9hZERhdGEocywgbywgc3RhcnQsIGVuZCkgewoJCXZhciBuYW1lID0gKHMgJiYgcy5vcHRpb25zID8gKHMub3B0aW9ucy5DbGFzcyA/IHMub3B0aW9ucy5DbGFzcy5OYW1lLnJlcGxhY2UoJyAnLCAnXycpIDogKHMub3B0aW9ucy50YWJsZSB8fCBzLm9wdGlvbnMubmFtZSkpIDogcy5uYW1lKTsKCQluYW1lID0gbmFtZS50cmltKCk7IC8vLnNwbGl0KCcuJykuc2xpY2UoLTEpWzBdOwoKCQlsZXQgb1Njb3BlID0gKHR5cGVvZihjb21wYW55KSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29tcGFueS5TY29wZSkgPyB3aW5kb3dbY29tcGFueS5TY29wZV0gOiB3aW5kb3c7CgkJbyA9IG8gfHwgKChvU2NvcGUgJiYgb1Njb3BlW25hbWVdKSA/IG5ldyBvU2NvcGVbbmFtZV0oKSA6IHsKCQkJQWN0aXZlOiB0cnVlLAoJCX0pOwoKCQlvID0gKHR5cGVvZiBmaWx0ZXJzICE9PSAidW5kZWZpbmVkIiAmJiBmaWx0ZXJzICYmIGZpbHRlcnNbbmFtZV0pID8gZmlsdGVyc1tuYW1lXShvKSA6IG87CgkJdmFyIGZ1biA9IHRoaXMuZUZ1bihzLm9wdGlvbnMpOwoJCWxldCBzVGV4dCA9ICQoIiMiICsgcy5pZClbZnVuXSgnZ2V0VGV4dCcpOwoKCQlvID0gKHMgJiYgcy5vcHRpb25zICYmIHMub3B0aW9ucy5zb3VyY2UpID8gcy5vcHRpb25zLnNvdXJjZShvLCB0aGlzLmdldCgpLCBzVGV4dCkgOiBvOwoJCWxldCBuYW1lcyA9ICQudW5pcXVlU29ydChbcy5vcHRpb25zLnNlYXJjaEZpZWxkXS5jb25jYXQoJC5tYXAoJC5ncmVwKHMub3B0aW9ucy5jb2x1bW5zIHx8IFtdLCBjID0+IGMuc2VhcmNoKSwgYyA9PiBjLmZpZWxkKSwgWyJOYW1lIl0pKS5maWx0ZXIodiA9PiB2KTsKCQlpZiAoIW9bbmFtZXNbMF1dKSBvW25hbWVzWzBdXSA9IHNUZXh0OwoJCS8vY29uc29sZS5sb2coIkR5bmFGb3JtOjpfbG9hZERhdGEoKTogbyIsIG8pOwoJCXZhciBkYXRhID0gbnVsbDsKCgkJbGV0IGxpYiA9ICcnOwoJCWlmIChuYW1lLmluZGV4T2YoJy4nKSA+IDApIHsKCQkJbGliID0gbmFtZS5zcGxpdCgnLicpWzBdICsgJy4nOwoJCQluYW1lID0gbmFtZS5zcGxpdCgnLicpWzFdOwoJCX0KCgkJaWYgKHMub3B0aW9ucy5sb2FkZXIpIHsKCQkJZGF0YSA9IGF3YWl0IHMub3B0aW9ucy5sb2FkZXIodGhpcy5nZXQoKSwgcy5vcHRpb25zLCBvLCBzVGV4dCk7CgkJfSBlbHNlIGlmIChvICYmIHR5cGVvZihvLmZpbmRBbGwpID09PSAnZnVuY3Rpb24nKSB7CgkJCWRhdGEgPSBhd2FpdCBvLmZpbmRBbGwoKTsKCQl9IGVsc2UgaWYgKHR5cGVvZihjb21wYW55KSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29tcGFueS5saWJyYXJ5ICYmIGNvbXBhbnkuQ29kZSAmJiB3aW5kb3cuYkxvY2FsKSB7CgkJCS8vY29uc29sZS5sb2coIkRGb3JtOjpfbG9hZERhdGEoKTogc3IoKS5fKCIgKyBsaWIgKyBjb21wYW55LkNvZGUudG9Mb3dlckNhc2UoKSArIG5hbWUgKyAiRmluZGFsbCIgKyAiKSIsIG8pOwoJCQlkYXRhID0gYXdhaXQgdGhpcy5zcigpLl8obGliICsgY29tcGFueS5Db2RlLnRvTG93ZXJDYXNlKCkgKyBuYW1lICsgIkZpbmRhbGwiLCBudWxsLCBvLCBudWxsLCBzdGFydCwgZW5kKTsKCQl9IGVsc2UgaWYgKF9GckVNRC5hcGlTZXJ2ZXIpIHsKCQkJbyA9IE9iamVjdC5hc3NpZ24oLi4uT2JqZWN0LmtleXMobykubWFwKGsgPT4gKHsKCQkJCVtTdHJpbmcoaykuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgKyBTdHJpbmcoaykuc2xpY2UoMSldOiBvW2tdCgkJCX0pKSk7CgkJCS8vY29uc29sZS5sb2coIkRGb3JtOjpfbG9hZERhdGEoKTogdXNpbmcgX0ZyRU1ELmFwaVNlcnZlcjogbyIsIG8pOwoJCQlkYXRhID0gYXdhaXQgX0ZyRU1ELmFwaVNlcnZlci5fbmV3KG5hbWUpLl9mcm9tRG9jdW1lbnQobykuZmluZEFsbCgpOwoJCX0KCgkJaWYgKHMub3B0aW9ucy5wb3N0bG9hZCkgewoJCQlhd2FpdCBzLm9wdGlvbnMucG9zdGxvYWQoZGF0YSk7CgkJfQoJCSQuZWFjaChkYXRhLCAoaSwgZCkgPT4gewoJCQlkLl9fT1dORVIgPSBzOwoJCQkkLmVhY2gocy5vcHRpb25zLmNvbHVtbnMsIChfLCBjKSA9PiB7CgkJCQlpZiAoYy52YWx1ZSkgewoJCQkJCWRbYy5maWVsZF0gPSBjLnZhbHVlKGQsIGRhdGEsIGkpOwoJCQkJfQoJCQl9KTsKCQl9KTsKCQlpZiAoIXMub3B0aW9ucy5jb2x1bW5zICYmIGZ1bi5pbmRleE9mKCd0cmVlJykgPiAtMSkgewoJCQlkYXRhID0gJC5tYXAoZGF0YSwgZCA9PiB7CgkJCQlsZXQgcmV0ID0gewoJCQkJCWlkOiBkW3Mub3B0aW9ucy5pZEZpZWxkLmZpZWxkXSwKCQkJCQl0ZXh0OiBkW3Mub3B0aW9ucy50ZXh0RmllbGQuZmllbGRdLAoJCQkJCXN0YXRlOiBkLnN0YXRlIHx8IChzLm9wdGlvbnMubG9hZGVyID8gImZpbGUiIDogImNsb3NlZCIpLAoJCQkJCV9zb3VyY2U6IGQsCgkJCQl9OwoJCQkJcmV0LmNoaWxkcmVuID0gKHJldC5zdGF0ZSA9PSAiY2xvc2VkIikgPyBbewoJCQkJCXRleHQ6ICdsb2FkaW5nLi4uJwoJCQkJfV0gOiBudWxsOwoJCQkJcmV0dXJuIHJldDsKCQkJfSk7CgkJfQoJCXJldHVybiBkYXRhIHx8IFtdOwoJfQoKCWFzeW5jIGZpbGxEYXRhKGcsIG8sIHN0YXJ0LCBlbmQpIHsKCQl2YXIgcyA9IG51bGw7CgkJZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnNlbGVjdHMubGVuZ3RoOyBpKyspIHsKCQkJaWYgKHRoaXMuc2VsZWN0c1tpXS5pZCA9PSBnWzBdLmlkKSBzID0gdGhpcy5zZWxlY3RzW2ldOwoJCX0KCQlpZiAoIXMpIHJldHVybjsKCQl0aGlzLmJ1c3kodHJ1ZSk7CgkJdHJ5IHsKCQkJdmFyIGZ1biA9IGdbMF0uY2xhc3NMaXN0WyIwIl0ucmVwbGFjZSgnZWFzeXVpLScsICcnKTsKCQkJdHJ5IHsKCQkJCSQoIiMiICsgcy5pZClbZnVuXSgnZ3JpZCcpLmRhdGFncmlkKCdnZXRQYWdlcicpLnBhZ2luYXRpb24oJ2xvYWRpbmcnKTsKCQkJfSBjYXRjaCAoZXgpIHt9CgkJCWlmIChzLm9wdGlvbnMubm9sb2FkKSB7CgkJCQlsZXQgX2RhdGEgPSBudWxsOwoJCQkJdHJ5IHsKCQkJCQlfZGF0YSA9ICQoIiMiICsgcy5pZClbZnVuXSgnZ3JpZCcpLmRhdGFncmlkKCJnZXREYXRhIik7CgkJCQl9IGNhdGNoIChleCkgewoJCQkJCV9kYXRhID0gJCgiIyIgKyBzLmlkKVtmdW5dKCd0cmVlJykudHJlZSgnZ2V0Um9vdCcpOwoJCQkJfQoJCQkJaWYgKF9kYXRhKSB7CgkJCQkJcmV0dXJuIHRoaXMuYnVzeShmYWxzZSk7CgkJCQl9CgkJCX0KCQkJdmFyIGRhdGEgPSBhd2FpdCB0aGlzLl9sb2FkRGF0YShzLCBvLCBzdGFydCwgZW5kKTsKCQkJdHJ5IHsKCQkJCWlmICgkKCIjIiArIHMuaWQpW2Z1bl0oJ2dyaWQnKSkgJCgiIyIgKyBzLmlkKVtmdW5dKCdncmlkJykuZGF0YWdyaWQoJ2dldFBhZ2VyJykucGFnaW5hdGlvbignbG9hZGVkJyk7CgkJCX0gY2F0Y2ggKGV4KSB7fQoJCQl0cnkgewoJCQkJJCgiIyIgKyBzLmlkKVtmdW5dKCdncmlkJykuZGF0YWdyaWQoJ2xvYWREYXRhJywgewoJCQkJCXRvdGFsOiBkYXRhLkNvdW50IHx8IGRhdGEubGVuZ3RoLAoJCQkJCXJvd3M6IGRhdGEsCgkJCQl9KTsKCQkJfSBjYXRjaCAoZXgpIHsKCQkJCSQoIiMiICsgcy5pZClbZnVuXSgndHJlZScpLnRyZWUoJ2xvYWREYXRhJywgZGF0YSk7CgkJCX0KCQl9IGNhdGNoIChleCkgewoJCQljb25zb2xlLmxvZyhleCk7CgkJfQoJCXRoaXMuYnVzeShmYWxzZSk7Cgl9CgoJZXZlbnRIYW5kbGVycyhvcHRpb25zKSB7CgkJaWYgKCF0aGlzLmJ5TmFtZShvcHRpb25zLm5hbWUpKSByZXR1cm47IC8vIGlmIG5vdCBhbiBlbGVtZW50LCBkbyBub3QgcnVuIHRoZSBoYW5kbGVycwoKCQlyZXR1cm4gdGhpcy5ldmVudHMuZmlsdGVyKGUgPT4gZS50eXBlID09IG9wdGlvbnMudHlwZSB8fCB0eXBlb2YoZS50eXBlKSA9PT0gJ3VuZGVmaW5lZCcpLm1hcChlID0+IGAke2UubmFtZX06ICgke2UucGFyYW1zIHx8ICcnfSkgPT4ge3RyeXtERm9ybS4ke2UuaGFuZGxlcn0oREZvcm0uYnlOYW1lKCIke29wdGlvbnMubmFtZX0iKSB8fCAke19GckVNRC5fdG9KUyhvcHRpb25zKX0gfHwge25hbWU6ICIke29wdGlvbnMubmFtZX0iLHR5cGU6ICIke29wdGlvbnMudHlwZX0ifSwgJHtlLnBhcmFtc30pfWNhdGNoKGV4KXtjb25zb2xlLmxvZygiRXZlbnQgRXJyb3I6ICR7b3B0aW9ucy5uYW1lfS8ke29wdGlvbnMudHlwZX0vJHtlLm5hbWV9IiwgZXgpO319YCkuam9pbignLCcpOwoJfQoKCWFzeW5jIFBhbmVsT3BlbihlKSB7CgkJaWYgKGUuZWRpdG9yKSByZXR1cm4gdHJ1ZTsKCQlsZXQgY29udGVudCA9IGUudmFsdWU7CgkJaWYgKGUubG9hZGVyKSB7CgkJCWNvbnRlbnQgPSBhd2FpdCBlLmxvYWRlcih0aGlzLmdldCgpKTsKCQl9CgkJaWYgKGNvbnRlbnQpIHsKCQkJdHJ5IHsKCQkJCSQoIiNwbmwiICsgZS5uYW1lKS5wYW5lbCgnYm9keScpLmh0bWwoY29udGVudCk7CgkJCQljb25zb2xlLmxvZygicG5sIiArIGUubmFtZSArICI6IENvbnRlbnQgVmFsaWQiKTsKCQkJfSBjYXRjaCAoZXgpIHsKCQkJCS8vY29uc29sZS5sb2coZXgpOwoJCQl9CgkJfQoJCXJldHVybiBjb250ZW50OwoJfQoKCWFzeW5jIFNlbGVjdENoYW5nZShvcHRpb25zLCB0YWIpIHsKCQl0aGlzLmJ1c3kodHJ1ZSk7CgkJJC5ncmVwKHRoaXMuZWxlbWVudHMsIGUgPT4gZS50eXBlID09ICJncmlkIiAmJiBlLmdyb3VwID09IHRhYikuZm9yRWFjaChlID0+ICQoIiNjbWIiICsgZS5uYW1lKS5kYXRhZ3JpZCgpKTsKCQl0aGlzLmJ1c3koZmFsc2UpOwoJfQoKCWFzeW5jIEZpZWxkQ2hhbmdlKG9wdGlvbnMsIHZhbHVlKSB7CgkJdGhpcy5idXN5KHRydWUpOwoJCWlmIChvcHRpb25zICYmIG9wdGlvbnMuY2hhbmdlKSB7CgkJCWF3YWl0IG9wdGlvbnMuY2hhbmdlKHRoaXMuZ2V0KCksIHZhbHVlKTsKCQl9CgkJdGhpcy5idXN5KGZhbHNlKTsKCX0KCglhc3luYyBVUkxDaGFuZ2Uocywgb3B0aW9ucykgewoJCW9wdGlvbnMuZGF0YSA9IGF3YWl0ICQuZ2V0KHMudmFsdWUpOwoJCXJldHVybiBhd2FpdCB0aGlzLkZpZWxkQ2hhbmdlKHMsIG9wdGlvbnMpOwoJfQoKCVVwbG9hZEZpbGUoZiwgb3B0aW9ucykgewoJCXRoaXMuYnVzeSh0cnVlKTsKCQl2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKCQl2YXIgZmlsZWlkID0gTWF0aC5yYW5kb20oKTsKCQl2YXIgbWV0aG9kID0gb3B0aW9ucy5tZXRob2QgfHwgIkNvbnRlbnRNYW5hZ2VyLmNtc1VwbG9hZEZpbGUiOwoJCWZvcm1EYXRhLmFwcGVuZCgnZmlsZWlkJywgZmlsZWlkKTsKCQl2YXIgZmlsZSA9ICQoIiMiICsgZi5maWxlYm94SWQpWzBdLmZpbGVzWzBdOwoJCWZvcm1EYXRhLmFwcGVuZCgnX19VRklMRScsIGZpbGUpOwoJCWlmIChvcHRpb25zLmxvY2FsKSB7CgkJCS8vIGhhbmRsaW5nIHRoZSBmaWxlIGxvY2FsbHkKCQkJdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CgkJCXJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewoJCQkJdmFyIGRhdGEgPSBlLnRhcmdldC5yZXN1bHQ7CgkJCQlyZXQgPSBkYXRhOwoJCQkJdGhpcy5ieU5hbWUob3B0aW9ucy5uYW1lKS5kYXRhID0gcmV0OwoJCQkJaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy51cGxvYWQpIG9wdGlvbnMudXBsb2FkKHRoaXMuZ2V0KCksIHJldCk7CgkJCX07CgkJCWlmIChvcHRpb25zLmJpbmFyeSkgewoJCQkJcmVhZGVyLnJlYWRBc0JpbmFyeVN0cmluZyhmaWxlKTsKCQkJfSBlbHNlIGlmIChvcHRpb25zLmRhdGF1cmwpIHsKCQkJCXJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOwoJCQl9IGVsc2UgewoJCQkJcmVhZGVyLnJlYWRBc1RleHQoZmlsZSk7CgkJCX0KCQkJdGhpcy5idXN5KGZhbHNlKTsKCQl9IGVsc2UgaWYgKG1ldGhvZCkgewoJCQkkLmFqYXgoewoJCQkJdXJsOiB0aGlzLnNyKCkuc3JVUkwgKyAiJm1ldGhvZD0iICsgbWV0aG9kICsgIiZzSW5wdXQ9IiArIGZpbGVpZCArICImcHJlVGFnPSZwb3N0VGFnPSIsCgkJCQlkYXRhOiBmb3JtRGF0YSwKCQkJCS8vIFRISVMgTVVTVCBCRSBET05FIEZPUiBGSUxFIFVQTE9BRElORwoJCQkJY2FjaGU6IGZhbHNlLAoJCQkJY29udGVudFR5cGU6IGZhbHNlLAoJCQkJdHlwZTogJ1BPU1QnLAoJCQkJcHJvY2Vzc0RhdGE6IGZhbHNlLAoJCQkJc3VjY2VzczogZGF0YSA9PiB7CgkJCQkJdGhpcy5zcigpLnJ1blNjcmlwdChkYXRhKTsKCQkJCQl0aGlzLmJ5TmFtZShvcHRpb25zLm5hbWUpLmRhdGEgPSByZXQ7CgkJCQkJaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy51cGxvYWQpIG9wdGlvbnMudXBsb2FkKHRoaXMuZ2V0KCksIHJldCk7CgkJCQkJdGhpcy5idXN5KGZhbHNlKTsKCQkJCX0KCQkJfSk7CgkJfQoJfQoKCWVGdW4oZSkgewoJCXRyeSB7CgkJCWlmIChlLnR5cGUgPT0gInRyZWUiKSB7CgkJCQlpZiAoZS5jb2x1bW5zKSB7CgkJCQkJcmV0dXJuICJjb21ib3RyZWVncmlkIjsKCQkJCX0gZWxzZSBpZiAodHlwZW9mKGUuY29tYm8pICE9PSAndW5kZWZpbmVkJyAmJiAhZS5jb21ibykgewoJCQkJCXJldHVybiAndHJlZSc7CgkJCQl9IGVsc2UgewoJCQkJCXJldHVybiAiY29tYm90cmVlIjsKCQkJCX0KCQkJfSBlbHNlIGlmIChlLnR5cGUgPT0gJ25hdmlnYXRpb24nKSB7CgkJCQlyZXR1cm4gJ3RyZWUnOwoJCQl9IGVsc2UgaWYgKGUudHlwZSA9PSAiY29tYm90cmVlIikgewoJCQkJcmV0dXJuICJjb21ib3RyZWVncmlkIjsKCQkJfSBlbHNlIGlmIChlLnR5cGUgPT0gInNlbGVjdCIgJiYgZS5vcHRpb25zKSB7CgkJCQlyZXR1cm4gImNvbWJvYm94IjsKCQkJfQoJCQlyZXR1cm4gImNvbWJvZ3JpZCI7CgkJfSBjYXRjaCAoZXgpIHsKCQkJcmV0dXJuICJjb21ib2dyaWQiOwoJCX0KCX0KCglfZmlsbFdpbmRvdyh3aW5OYW1lLCB2LCBtYXApIHsKCQl2ID0gdiB8fCB7fTsKCQltYXAgPSBtYXAgfHwge307CgkJaWYgKEFycmF5LmlzQXJyYXkobWFwKSkgewoJCQltYXAgPSBPYmplY3QuZnJvbUVudHJpZXMobmV3IE1hcChtYXApKTsKCQl9CgoJCW1hcCA9ICQuZXh0ZW5kKHt9LCBtYXAsIE9iamVjdC5mcm9tRW50cmllcyhPYmplY3Qua2V5cyh2KS5tYXAoayA9PiBbd2luTmFtZSArIGssIGtdKSkpOwoKCQlsZXQgcyA9IHt9OwoJCWZvciAodmFyIG0gaW4gbWFwKSB7CgkJCWlmICh0eXBlb2YodlttYXBbbV1dKSA9PT0gInVuZGVmaW5lZCIpIHsKCQkJCS8vY29uc29sZS5sb2coJ2lzX3VuZGVmaW5lZCcsIG0sIG1hcFttXSwgdlttYXBbbV1dKTsKCQkJCXNbbV0gPSBtYXBbbV07CgkJCX0gZWxzZSB7CgkJCQkvL2NvbnNvbGUubG9nKCdpc19ub3RfdW5kZWZpbmVkJywgbSwgbWFwW21dLCB2W21hcFttXV0pOwoJCQkJc1ttXSA9IHZbbWFwW21dXTsKCQkJfQoJCX0KCQl0aGlzLmNsZWFyKHdpbk5hbWUpOwoJCS8vY29uc29sZS5sb2coInMiLCBzKTsKCQl0aGlzLnNldChzKTsKCQkkKCIjcG5sXyIgKyB3aW5OYW1lKS53aW5kb3coIm9wZW4iKTsKCX0KCgl3aW5kb3dUb0VudGl0eShvLCBiRW1wdHksIGdyaWQsIHByZWZpeCwgZmlsdGVyKSB7CgkJbyA9IG8gfHwgdGhpcy5nZXQoKTsKCQlmaWx0ZXIgPSBmaWx0ZXIgfHwgKHYgPT4gdik7CgkJbGV0IHJldCA9IGdyaWQgPyAoZ3JpZC5zZWxlY3RlZCB8fCBncmlkKSA6IG51bGw7CgkJaWYgKGJFbXB0eSkgewoJCQlyZXQgPSB7fTsKCQkJbyA9IHt9OwoJCX0gZWxzZSB7CgkJCXJldCA9IChyZXQgJiYgcmV0LklkKSA/IHsKCQkJCUlkOiByZXQuSWQKCQkJfSA6IHt9OwoJCX0KCgkJdGhpcy5lbGVtZW50cy5maWx0ZXIoZSA9PiAocHJlZml4ID8gZS5ncm91cCA9PSBwcmVmaXggOiB0cnVlKSAmJiBlLnR5cGUgIT0gJ2xpbmsnICYmIFsnXyddLmluZGV4T2YoZS5uYW1lLnJlcGxhY2UocHJlZml4LCAiIikpIDwgMCkuZm9yRWFjaChlID0+IHsKCQkJcmV0W2UubmFtZS5yZXBsYWNlKHByZWZpeCwgIiIpXSA9IG9bZS5uYW1lXTsKCQkJcmV0dXJuIHRydWU7CgkJfSk7CgoJCWZpbHRlcihyZXQpOwoKCQlyZXR1cm4gcmV0OwoJfQoKCWJpbmQob2JqKSB7CgkJdmFyIG9iakJpbmQgPSAobywgZSkgPT4gewoJCQlvW3RoaXMuZUZ1bihlKV0oewoJCQkJb25TaG93UGFuZWw6ICgpID0+IHsKCQkJCQl0aGlzLmZpbGxEYXRhKCQoIiMiICsgZS5pZCksIG51bGwsIDAsIDEwKTsKCQkJCX0sCgkJCQlvbkNsaWNrUm93OiAoaW5kZXgsIHJvdykgPT4gewoJCQkJCXZhciBzID0gcm93ID8gcm93Ll9fT1dORVIgOiBudWxsOwoJCQkJCWNvbnNvbGUubG9nKCJvbkNsaWNrUm93KCk6ICIsIGluZGV4LCByb3csIHMpOwoJCQkJCWlmIChzICYmIHMub3B0aW9ucy5zZWxlY3QpIHsKCQkJCQkJcy5vcHRpb25zLnNlbGVjdChyb3csIHRoaXMuZ2V0KCkpOwoJCQkJCX0KCQkJCX0KCQkJfSk7CgkJCXRyeSB7CgkJCQl2YXIgZGcgPSBvW3RoaXMuZUZ1bihlKV0oJ2dyaWQnKTsKCQkJCS8vIGRnLmRhdGFncmlkKCdlbmFibGVGaWx0ZXInKQoJCQkJdmFyIHN0YXRlID0gZGcuZGF0YSgnZGF0YWdyaWQnKTsKCQkJCXZhciBvcHRzID0gc3RhdGUub3B0aW9uczsKCQkJCXZhciBvbkJlZm9yZUxvYWQgPSBvcHRzLm9uQmVmb3JlTG9hZDsKCQkJCW9wdHMub25CZWZvcmVMb2FkID0gKHBhcmFtKSA9PiB7CgkJCQkJc3RhdGUuYWxsUm93cyA9IG51bGw7CgkJCQkJcmV0dXJuIG9uQmVmb3JlTG9hZC5jYWxsKHRoaXMsIHBhcmFtKTsKCQkJCX07CgkJCQl2YXIgcGFnZXIgPSBkZy5kYXRhZ3JpZCgnZ2V0UGFnZXInKTsKCQkJCWRnLmRhdGFncmlkKCdnZXRQYW5lbCcpLnBhbmVsKHsKCQkJCQlJRDogaQoJCQkJfSk7CgkJCQlwYWdlci5wYWdpbmF0aW9uKHsKCQkJCQlvblNlbGVjdFBhZ2U6IGZ1bmN0aW9uKHBhZ2VOdW0sIHBhZ2VTaXplKSB7CgkJCQkJCXRyeSB7CgkJCQkJCQlERm9ybS5maWxsRGF0YSgkKCIjIiArIERGb3JtLnNlbGVjdHNbJCh0aGlzLnBhcmVudE5vZGUpLnBhbmVsKCdvcHRpb25zJykuSURdLmlkKSwgbnVsbCwgcGFnZVNpemUgKiAocGFnZU51bSAtIDEpLCBwYWdlU2l6ZSAqIHBhZ2VOdW0pOwoJCQkJCQl9IGNhdGNoIChfZXgpIHsKCQkJCQkJCWNvbnNvbGUubG9nKCJEeW5hRm9ybTo6b25TZWxlY3RQYWdlKCkgIiwgX2V4KTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0pOwoJCQkJZGcuZGF0YWdyaWQoJ2xvYWREYXRhJywgc3RhdGUuZGF0YSk7CgkJCX0gY2F0Y2ggKGV4KSB7fQoJCX07CgkJaWYgKG9iaikgewoJCQlvYmpCaW5kKG9iaik7CgkJfSBlbHNlIHsKCQkJZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnNlbGVjdHMubGVuZ3RoOyBpKyspIHsKCQkJCWlmICh0aGlzLnNlbGVjdHNbaV0ub3B0aW9ucy5vcHRpb25zKSB7CgkJCQkJLy8kKCIjIiArIHRoaXMuc2VsZWN0c1tpXS5pZCkuY29tYm8oKTsKCQkJCX0gZWxzZSB7CgkJCQkJb2JqQmluZCgkKCIjIiArIHRoaXMuc2VsZWN0c1tpXS5pZCksIHRoaXMuc2VsZWN0c1tpXSk7CgkJCQl9CgkJCX0KCgkJCXRoaXMuZWxlbWVudHMuZmlsdGVyKGUgPT4gZS53aW5kb3cgJiYgZS5ncm91cCkuZm9yRWFjaChlID0+IHsKCQkJCWxldCB0ID0gJCgiI3RiY1dpbmRvdyIpLnRhYnMoImdldFRhYiIsIGUuZ3JvdXApOwoJCQkJaWYgKHQpIHsKCQkJCQl0LnBhbmVsKCdvcHRpb25zJykudGFiLmhpZGUoKTsKCQkJCX0KCQkJfSk7CgkJfQoJfQoKCWVuZ2xpc2gocykgewoJCWlmICghcykgcmV0dXJuICIiOwoJCXZhciByZXN1bHQgPSBzLnJlcGxhY2UoLyhbQS1aXSkvZywgIiAkMSIpOwoJCXJlc3VsdCA9IHJlc3VsdC5yZXBsYWNlKC9fL2csICcnKTsKCQlyZXR1cm4gcmVzdWx0LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcmVzdWx0LnNsaWNlKDEpOwoJfQoKCW9uVG9nZ2xlKGUsIGJWYWx1ZSkgewoJCWxldCBzVGFnID0gYCNmRWxlbWVudF8ke2UuZm9yLm5hbWV9ID4gLmVhc3l1aS0ke3RoaXMudWlUeXBlc1tlLmZvci50eXBlXX1gOwoJCWxldCBvVGFnID0gJChzVGFnKTsKCQllLmZvci5lbmFibGVkID0gdHlwZW9mKGJWYWx1ZSkgPT09ICJ1bmRlZmluZWQiID8gIWUuZm9yLmVuYWJsZWQgOiBiVmFsdWU7CgoJCW9UYWcucHJvcCgiZGlzYWJsZWQiLCAhZS5mb3IuZW5hYmxlZCk7CgkJLy9vVGFnW3RoaXMudWlUeXBlc1tlLmZvci50eXBlXV0oZS5mb3IuZW5hYmxlZCA/ICJlbmFibGUiIDogImRpc2FibGUiKTsKCQljb25zb2xlLmxvZyhzVGFnLCBvVGFnLCB0aGlzLnVpVHlwZXNbZS5mb3IudHlwZV0sIGUuZm9yLmVuYWJsZWQpOwoJfQoKCXJlbmRlcihuYW1lLCB0aXRsZSwgZWxlbWVudHMsIGJ1dHRvbnMsIGJGaXhlZCkgewoJCXRoaXMuZWxlbWVudHMgPSAoZWxlbWVudHMgfHwgW10pLmZpbHRlcihlID0+ICFlLmlnbm9yZSk7CgoJCXRoaXMuYnV0dG9ucyA9IGJ1dHRvbnMgfHwgW107CgkJdGhpcy5zZWxlY3RzID0gW107CgkJdGhpcy5ncmlkcyA9IFtdOwoKCQl0aGlzLmVsZW1lbnRzLmZpbHRlcihlID0+IGUudHlwZSA9PSAid2luZG93IikuZm9yRWFjaCh3ID0+IHRoaXMuZWxlbWVudHMuc3BsaWNlKHRoaXMuZWxlbWVudHMuZmluZEluZGV4KGUgPT4gZS5uYW1lID09IHcubmFtZSksIDAsIHsKCQkJbmFtZTogIl8iICsgdy5uYW1lLAoJCQl0eXBlOiAibGluayIsCgkJCXRpdGxlOiB3LnRpdGxlIHx8IHcubmFtZSwKCQkJZ3JvdXA6IHcuZ3JvdXAsCgkJCXdpbmRvdzogdy53aW5kb3csCgkJCXNlY3Rpb246IHcuc2VjdGlvbiwKCQkJbGlua3M6IFt7CgkJCQlsYWJlbDogJ09wZW4nLAoJCQkJaWNvbjogJ2VkaXQnLAoJCQkJb25DbGljazogbyA9PiAkKCIjcG5sIiArIHcubmFtZSkud2luZG93KCdvcGVuJykKCQkJfV0sCgkJfSkpOwoKCQl0aGlzLnNyKCkuZ3JvdXBCeSh0aGlzLmVsZW1lbnRzLmZpbHRlcihlID0+IGUud2luZG93KSwgImdyb3VwIikuZm9yRWFjaChrdiA9PiB7CgkJCWlmICgha3Yua2V5KSByZXR1cm47CgoJCQlsZXQgZSA9IHsKCQkJCW5hbWU6ICJfIiArIGt2LmtleSwKCQkJCXRpdGxlOiBrdi5rZXksCgkJCQl0eXBlOiAid2luZG93IiwKCQkJCWdyb3VwOiBrdi5rZXksCgkJCQl3aWR0aDogdGhpcy53aWR0aCAqIDAuOSwKCQkJCWhlaWdodDogdGhpcy5oZWlnaHQgKiAwLjksCgkJCQlsb2FkZXI6IG8gPT4gewoJCQkJCWt2LnZhbHVlcy5maWx0ZXIodiA9PiB2LnR5cGUgIT09ICdsaW5rJyB8fCAodi50eXBlID09ICdsaW5rJyAmJiB2Lm5hbWUuc3RhcnRzV2l0aCgnXycpKSkuZm9yRWFjaCh2ID0+ICQoIiNwbmxfIiArIHYuZ3JvdXAgKyAnLWNlbnRlcicpLmFwcGVuZCgkKCIjZkVsZW1lbnRfIiArIHYubmFtZSkpKTsKCQkJCQlyZXR1cm4gbnVsbDsKCQkJCX0sCgkJCQlidXR0b25zOiBbXS5jb25jYXQuYXBwbHkoW10sIGt2LnZhbHVlcy5maWx0ZXIodiA9PiB2LnR5cGUgPT0gJ2xpbmsnICYmICF2Lm5hbWUuc3RhcnRzV2l0aCgnXycpKS5tYXAodiA9PiBbLi4udi5saW5rcy5tYXAobCA9PiAoewoJCQkJCW5hbWU6IGwubmFtZSB8fCBsLmxhYmVsLAoJCQkJCXRpdGxlOiBsLnRpdGxlIHx8IGwubGFiZWwsCgkJCQkJb25DbGljazogbC5vbkNsaWNrLAoJCQkJCWljb246IGwuaWNvbiwKCQkJCQl3aW5kb3c6IHRydWUsCgkJCQkJZ3JvdXA6IGt2LmtleSwKCQkJCX0pKV0pKSwKCQkJfTsKCQkJdGhpcy5idXR0b25zLnB1c2goLi4uZS5idXR0b25zKTsKCgkJCXRoaXMuZWxlbWVudHMucHVzaChlKTsKCQl9KTsKCgkJdmFyIHJldCA9ICIiOwoJCS8vIGNoZWNrIHRoZSBvcHRpb24gb2YgdXNpbmcgd2luZG93KCkgYXMgYSByZW5kZXJlciBvZiB0aGUgbWFpbiB3aW5kb3cuLi4KCQlpZiAodHJ1ZSkgewoJCQl0aGlzLmVsZW1lbnRzLmZpbHRlcihlID0+ICFlLnpvbmUpLmZvckVhY2goZSA9PiBlLnpvbmUgPSAnY2VudGVyJyk7CgkJCWxldCB3T3B0aW9ucyA9IHsKCQkJCW5hbWU6IG5hbWUgfHwgdGhpcy5uYW1lLAoJCQkJdGl0bGU6IHRpdGxlIHx8IHRoaXMudGl0bGUsCgkJCQl0eXBlOiAnd2luZG93JywKCQkJCXZpc2libGU6IHRydWUsCgkJCQl3aWR0aDogdGhpcy53aWR0aCwKCQkJCWhlaWdodDogdGhpcy5oZWlnaHQsCgkJCQlmaXhlZDogYkZpeGVkLAoJCQkJbGlua3M6IFt7CgkJCQkJaWNvbjogImhlbHAiLAoJCQkJCWFjdGlvbjogbyA9PiAkKCIjcG5sX19Db25zb2xlIikud2luZG93KCdvcGVuJykKCQkJCX1dLAoJCQkJYnV0dG9uczogdGhpcy5idXR0b25zLmZpbHRlcihiID0+ICFiLndpbmRvdyksCgkJCX07CgkJCXRoaXMuc3IoKS5ncm91cEJ5KHRoaXMuZWxlbWVudHMsICd6b25lJykuZmlsdGVyKHpnID0+IHpnLmtleSkuZm9yRWFjaCh6ZyA9PiB7CgkJCQl3T3B0aW9uc1t6Zy5rZXldID0gdGhpcy5yZW5kZXJFbGVtZW50cyh6Zy52YWx1ZXMpOwoJCQl9KTsKCgkJCXJldCA9IHRoaXMud2luZG93KHdPcHRpb25zKTsKCQl9IGVsc2UgewoJCQlyZXQgPSB0aGlzLmhlYWRlcihuYW1lLCB0aXRsZSwgYkZpeGVkLCBbewoJCQkJaWNvbjogImhlbHAiLAoJCQkJYWN0aW9uOiBvID0+ICQoIiNwbmxfX0NvbnNvbGUiKS53aW5kb3coJ29wZW4nKQoJCQl9XSk7CgoJCQlyZXQgKz0gdGhpcy5yZW5kZXJFbGVtZW50cygpOwoKCQkJcmV0ICs9IHRoaXMuZm9vdGVyKGJGaXhlZCk7CgoJCX0KCQkvLyBjb25zb2xlLmxvZyhyZXQpOwoKCQlyZXR1cm4gcmV0OwoJfQoKCWNXaWR0aChvcHRpb25zKSB7CgkJbGV0IHJldCA9IE1hdGguZmxvb3IoKChvcHRpb25zID8gb3B0aW9ucy53aWR0aCA6IG51bGwpIHx8ICh0aGlzLndpZHRoIC8gMykpKTsKCQlpZiAob3B0aW9ucy56b25lID09ICdlYXN0JyB8fCBvcHRpb25zLnpvbmUgPT0gJ3dlc3QnKSB7CgkJCXJldCA9IDAuMjUgKiByZXQ7IC8vIDkwJSBvZiAzLzEwLCB0aGUgd2lkdGggb2YgdGhlIG5vcm1hbCBlbGVtZW50CgkJfSBlbHNlIGlmIChvcHRpb25zICYmIG9wdGlvbnMuZWRpdG9yKSB7CgkJCXJldCA9IHdpbmRvdy5pbm5lcldpZHRoOwoJCX0gZWxzZSBpZiAob3B0aW9ucyAmJiBvcHRpb25zLndpZHRoICYmIHR5cGVvZihvcHRpb25zLndpZHRoKSA9PT0gJ3N0cmluZycpIHsKCQkJcmV0ID0gdGhpcy53aWR0aDsKCQl9IGVsc2UgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy50eXBlID09ICd3aW5kb3cnICYmICFvcHRpb25zLndpZHRoKSB7CgkJCXJldCA9IHRoaXMud2lkdGggKiAwLjk7CgkJfQoKCQkvLyBjb25zb2xlLmxvZyhvcHRpb25zLm5hbWUgKyAiOiBjV2lkdGggPSAiICsgcmV0LCBvcHRpb25zLnpvbmUpOwoJCXJldHVybiByZXQ7Cgl9CgoJd2luZG93KG9wdGlvbnMpIHsKCQlvcHRpb25zLnRpdGxlID0gb3B0aW9ucy50aXRsZSB8fCBvcHRpb25zLm5hbWU7CgkJdmFyIHJldCA9IGAKCQk8ZGl2IGlkID0gInBubCR7b3B0aW9ucy5uYW1lfSIgY2xhc3M9ImVhc3l1aS13aW5kb3ciIHRpdGxlPSIke29wdGlvbnMudGl0bGUgfHwgdGhpcy5lbmdsaXNoKG9wdGlvbnMubmFtZSl9IiBkYXRhLW9wdGlvbnM9JyR7dGhpcy5ldmVudEhhbmRsZXJzKG9wdGlvbnMpfSwgY2xvc2VkOiR7IW9wdGlvbnMudmlzaWJsZX0sbWluaW1pemFibGU6JHshb3B0aW9ucy5maXhlZH0sbWF4aW1pemFibGU6JHshb3B0aW9ucy5maXhlZH0sY2xvc2FibGU6JHshb3B0aW9ucy5maXhlZH0sY29sbGFwc2libGU6JHshb3B0aW9ucy5maXhlZH0sZHJhZ2dhYmxlOiR7IW9wdGlvbnMuZml4ZWR9LHJlc2l6YWJsZTokeyFvcHRpb25zLmZpeGVkfSxpY29uQ2xzOiJpY29uLSR7b3B0aW9ucy5pY29ufSIsIHRvb2xzOiIjJHtvcHRpb25zLm5hbWV9X3Rvb2xzIicgc3R5bGU9IndpZHRoOiR7dGhpcy5jV2lkdGgob3B0aW9ucyl9cHg7aGVpZ2h0OiR7dGhpcy5jSGVpZ2h0KG9wdGlvbnMpfXB4O3BhZGRpbmc6MTBweDsiPgoJCSAgICA8ZGl2IGNsYXNzPSJlYXN5dWktbGF5b3V0IiBkYXRhLW9wdGlvbnM9ImZpdDp0cnVlIj4KCQlgOwoKCQlsZXQgYlpvbmUgPSBvcHRpb25zLnNvdXRoID8gJ3NvdXRoJyA6ICh0aGlzLnpvbmVzLmZpbmQoeiA9PiB6ID09ICdzb3V0aCcpIHx8IHRoaXMuem9uZXNbMF0pOwoJCW9wdGlvbnNbYlpvbmVdID0gb3B0aW9uc1tiWm9uZV0gfHwgW107CgkJbGV0IHpXaWR0aCA9IE1hdGgubWluKDEyMCwgdGhpcy53aWR0aCAqIDAuOTUgLyAob3B0aW9ucy5idXR0b25zID8gb3B0aW9ucy5idXR0b25zLmxlbmd0aCA6IDEpLCB0aGlzLmNXaWR0aChvcHRpb25zKSk7CgkJb3B0aW9uc1tiWm9uZV0ucHVzaChgPGRpdiBpZD0icG5sJHtvcHRpb25zLm5hbWV9LWJ1dHRvbnMiIGRhdGEtb3B0aW9ucz0icmVnaW9uOicke2Jab25lfScsYm9yZGVyOmZhbHNlIiBzdHlsZT0idGV4dC1hbGlnbjpyaWdodDtwYWRkaW5nOjVweCAwIDA7Ij5gICsgJC5tYXAoJC5ncmVwKG9wdGlvbnMuYnV0dG9ucyB8fCBbXSwgYiA9PiAhYi5pZ25vcmUpLCBiID0+IGA8YSBpZD0nJHtiLm5hbWV9JyBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiIGNsYXNzPSJlYXN5dWktbGlua2J1dHRvbiBjNiIgaWNvbkNscz0iaWNvbi0ke2IuaWNvbiB8fCAnc2F2ZSd9IiBzdHlsZT0id2lkdGg6JHt6V2lkdGh9cHgiIG9uY2xpY2s9J0RGb3JtLmRvQ2xpY2soJHtfRnJFTUQuX3RvSlMoYil9KSc+JHtiLnRpdGxlIHx8IGIubmFtZX08L2E+Jm5ic3A7Jm5ic3A7YCkuam9pbignJykgKyBgPC9kaXY+YCk7CgoJCXRoaXMuem9uZXMuZmlsdGVyKHogPT4gb3B0aW9uc1t6XSkuZm9yRWFjaCh6ID0+IHsKCQkJcmV0ICs9IGAKCQkgICAgICAgIDxkaXYgZGF0YS1vcHRpb25zPSJyZWdpb246JyR7en0nIiB0aXRsZT0iJHsoej09J3dlc3QnIHx8IHo9PSdlYXN0Jyk/JyZuYnNwOyc6Jyd9IiBzdHlsZT0naGVpZ2h0OiR7KHo9PSdub3J0aCd8fHo9PSdzb3V0aCcpPzEwOjEwMH0lO3dpZHRoOiR7KCh6PT0nZWFzdCd8fHo9PSd3ZXN0Jyk/MC4xOjEpKnRoaXMuY1dpZHRoKG9wdGlvbnMpfXB4Jz4KICAgICAgICAJCSAgICAkeyhBcnJheS5pc0FycmF5KG9wdGlvbnNbel0pP29wdGlvbnNbel06W29wdGlvbnNbel1dKS5qb2luKCcnKX0KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICBgOwoJCX0pOwoKCQlyZXQgKz0gYDwvZGl2PjwvZGl2PmA7CgoJCS8vIGxpbmtzICh0b29scykKCQlsZXQgbGlua3MgPSAkLmdyZXAoW10uY29uY2F0KG9wdGlvbnMubGlua3MgfHwgW10pLCBsID0+ICFsLmlnbm9yZSk7CgkJcmV0ICs9IGA8ZGl2IGlkPSIke29wdGlvbnMubmFtZX1fdG9vbHMiPmAgKyAkLm1hcChsaW5rcy5yZXZlcnNlKCksIGwgPT4gYDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgc3R5bGU9ImNvbG9yOmJsYWNrIiBjbGFzcz0iZmFzIGZhLSR7bC5pY29uIHx8ICdhZGQnfSIgb25jbGljaz0nKGFzeW5jICgpID0+IHt2YXIgYSA9ICR7X0ZyRU1ELl90b0pTKGwpfTsgJCgiI3BubCR7b3B0aW9ucy5uYW1lfSIpLndpbmRvdygic2V0VGl0bGUiLCAiJHtvcHRpb25zLnRpdGxlfTogIiArIGEubmFtZSk7IGF3YWl0IGEuYWN0aW9uKERGb3JtLmdldCgpLCBhLCAke19GckVNRC5fdG9KUyhvcHRpb25zKX0pOyAkKCIjcG5sJHtvcHRpb25zLm5hbWV9Iikud2luZG93KCJzZXRUaXRsZSIsICIke29wdGlvbnMudGl0bGV9Iik7fSkoKSc+PC9hPmApLmpvaW4oJ1xuJykgKyBgPC9kaXY+YDsKCgkJcmV0dXJuIHJldDsKCX0KCglhc3luYyBfZW5kKCkgewoJCWxldCBvID0gdGhpcy5nZXQoKTsKCgkJLy8gZG8gbm90IHVzZSB0aGUgZmlyc3QgYnV0dG9uLCBiZWNhdXNlIG1hbnkgZm9ybXMgaGF2ZSBhIENhbmNlbCBidXR0b24gb25seQoJCWxldCBidXR0b24gPSB0aGlzLmJ1dHRvbnMuZmluZChiID0+IGIuYXV0b1N1Ym1pdCkgLyogfHwgdGhpcy5idXR0b25zWzBdKi8gOwoJCWlmIChidXR0b24gJiYgbyAmJiBPYmplY3QudmFsdWVzKG8pLmxlbmd0aCAmJiAodHlwZW9mKGJ1dHRvbi5hdXRvU3VibWl0KSA9PT0gInVuZGVmaW5lZCIgfHwgYnV0dG9uLmF1dG9TdWJtaXQpKSB7CgkJCWxldCB2ID0gT2JqZWN0LnZhbHVlcyhvKS5yZWR1Y2UoKHQsIHYpID0+IHsKCQkJCXJldHVybiAoKHR5cGVvZih2KSAhPT0gIm9iamVjdCIpID8gMSA6IDApICogKHYgPyAxIDogMCk7CgkJCX0pOwoJCQkvL2NvbnNvbGUubG9nKG8sIE9iamVjdC52YWx1ZXMobyksIHYpOwoJCQlpZiAodikgewoJCQkJLy8gYWxsIGZpZWxkcyBoYXZlIHZhbHVlcwoJCQkJYXdhaXQgdGhpcy5kb0NsaWNrKGJ1dHRvbik7CgoJCQl9CgkJfQoJfQoKCWZvb3RlcihiRml4ZWQpIHsKCQlyZXR1cm4gYDwvZm9ybT5gICsgYDxkaXYgaWQ9ImRsZy1idXR0b25zIj5gICsgdGhpcy5idXR0b25zLmZpbHRlcihiID0+ICFiLndpbmRvdykubWFwKGIgPT4gYDxhIGlkPScke2IubmFtZX0nIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9ImVhc3l1aS1saW5rYnV0dG9uIGM2IiBpY29uQ2xzPSJpY29uLSR7Yi5pY29uIHx8ICdzYXZlJ30iIHN0eWxlPSJ3aWR0aDoke01hdGgubWluKDEyMCwgdGhpcy53aWR0aCAqIDAuOTUgLyB0aGlzLmJ1dHRvbnMubGVuZ3RoLCB0aGlzLmNXaWR0aCgpKX1weCIgb25jbGljaz0nREZvcm0uZG9DbGljaygke19GckVNRC5fdG9KUyhiKX0pJz4ke2IudGl0bGUgfHwgYi5uYW1lfTwvYT4mbmJzcDsmbmJzcDtgKS5qb2luKCcnKSArICI8L2Rpdj4iICsgKGJGaXhlZCA/ICIiIDogJzwvZGl2PicpOwoJfQoKCWhlYWRlcihuYW1lLCB0aXRsZSwgYkZpeGVkLCBsaW5rcykgewoJCXRoaXMudGl0bGUgPSB0aXRsZSB8fCB0aGlzLnRpdGxlOwoJCW5hbWUgPSBuYW1lIHx8IHRoaXMubmFtZTsKCQl2YXIgcmV0ID0gJyc7CgoJCXJldCArPSB0aGlzLndpbmRvdyh7CgkJCW5hbWU6ICJfX0NvbnNvbGUiLAoJCQl0eXBlOiAid2luZG93IiwKCQkJZWRpdG9yOiB0cnVlLAoJCQlsb2FkZXI6IG8gPT4gd2luZG93LmxvZ3Muc2xpY2UoKS5yZXZlcnNlKCkubWFwKGwgPT4gbC5kYXRlLnRvSVNPU3RyaW5nKCkgKyAiOiAiICsgbC5hcmdzLm1hcChzID0+IHR5cGVvZihzKSA9PT0gJ29iamVjdCcgPyAoKG9iaiwgaW5kZW50ID0gMikgPT4gewoJCQkJbGV0IGNhY2hlID0gW107CgkJCQljb25zdCByZXRWYWwgPSBKU09OLnN0cmluZ2lmeSgKCQkJCQlvYmosCgkJCQkJKGtleSwgdmFsdWUpID0+CgkJCQkJdHlwZW9mIHZhbHVlID09PSAib2JqZWN0IiAmJiB2YWx1ZSAhPT0gbnVsbCA/CgkJCQkJY2FjaGUuaW5jbHVkZXModmFsdWUpID8KCQkJCQl1bmRlZmluZWQgLy8gRHVwbGljYXRlIHJlZmVyZW5jZSBmb3VuZCwgZGlzY2FyZCBrZXkKCQkJCQk6CgkJCQkJY2FjaGUucHVzaCh2YWx1ZSkgJiYgdmFsdWUgLy8gU3RvcmUgdmFsdWUgaW4gb3VyIGNvbGxlY3Rpb24KCQkJCQk6CgkJCQkJdmFsdWUsCgkJCQkJaW5kZW50CgkJCQkpOwoJCQkJY2FjaGUgPSBudWxsOwoJCQkJcmV0dXJuIHJldFZhbDsKCQkJfSkocykgOiBzKS5qb2luKCcsICcpKS5qb2luKCdcbicpLAoJCX0pOwoKCQlpZiAoIWJGaXhlZCkgewoJCQlsaW5rcyA9IChsaW5rcyB8fCBbXSkuZmlsdGVyKGwgPT4gIWwuaWdub3JlKTsKCQkJbGV0IHREYXRhID0gIiI7CgkJCWlmIChsaW5rcy5sZW5ndGgpIHsKCQkJCXJldCArPSBgPGRpdiBpZD0iJHt0aGlzLm5hbWV9X3Rvb2xzIj5gICsgbGlua3MubWFwKGwgPT4gYDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgY2xhc3M9Imljb24tJHtsLmljb259IiBvbmNsaWNrPScoYXN5bmMgKCkgPT4ge3ZhciBhID0gJHtfRnJFTUQuX3RvSlMobCl9OyAkKCIjd2luJHt0aGlzLm5hbWV9Iikud2luZG93KCJzZXRUaXRsZSIsICIke3RoaXMudGl0bGV9OiAiICsgYS5uYW1lKTsgYXdhaXQgYS5hY3Rpb24oREZvcm0uZ2V0KCkpOyAkKCIjd2luJHt0aGlzLm5hbWV9Iikud2luZG93KCJzZXRUaXRsZSIsICIke3RoaXMudGl0bGV9Iik7fSkoKSc+PC9hPmApLmpvaW4oJ1xuJykgKyAiPC9kaXY+IjsKCQkJCXREYXRhID0gYCx0b29sczoiIyR7dGhpcy5uYW1lfV90b29scyJgOwoJCQl9CgkJCXJldCArPSBgPGRpdiBpZD0nd2luJHt0aGlzLm5hbWV9JyBjbGFzcz0nZWFzeXVpLXdpbmRvdycgdGl0bGU9JyR7dGhpcy50aXRsZSB8fCB0aGlzLmVuZ2xpc2godGhpcy5uYW1lKX0nIGRhdGEtb3B0aW9ucz0naWNvbkNsczoiaWNvbi1zYXZlIiAke3REYXRhfScgc3R5bGU9J3dpZHRoOiR7dGhpcy53aWR0aH1weDtoZWlnaHQ6JHt0aGlzLmhlaWdodH1weDtwYWRkaW5nOjEwcHg7Jz5gOwoJCX0KCQlyZXR1cm4gcmV0ICsgYDxmb3JtIGlkPSJmcm0ke3RoaXMubmFtZX0iIG1ldGhvZD0icG9zdCIgbm92YWxpZGF0ZT5gOwoJfQoKCXJlbmRlckVsZW1lbnRzKGVsZW1lbnRzKSB7CgkJZWxlbWVudHMgPSBlbGVtZW50cyB8fCB0aGlzLmVsZW1lbnRzOwoKCQl2YXIgdFdpZHRoID0gTWF0aC5mbG9vcih0aGlzLndpZHRoICogMC45NSk7CgkJdmFyIHRIZWlnaHQgPSBNYXRoLmZsb29yKHRoaXMuaGVpZ2h0ICogMC44NSk7CgoJCWxldCByZXQgPSAnJzsKCQl2YXIgZ0VsZW1lbnRzID0gdGhpcy5zcigpLmdyb3VwQnkoZWxlbWVudHMsICJncm91cCIpOwoJCWlmIChnRWxlbWVudHMubGVuZ3RoID4gMSkgcmV0ICs9IGA8ZGl2IGlkPSJ0YmNXaW5kb3ciIGNsYXNzPSJlYXN5dWktdGFicyIgZGF0YS1vcHRpb25zPScke3RoaXMuZXZlbnRIYW5kbGVycyh7dHlwZTogJ3RhYnMnfSl9JyBzdHlsZT0id2lkdGg6JHt0V2lkdGh9cHg7aGVpZ2h0OiR7dEhlaWdodH1weDsiPmA7CgkJZm9yICh2YXIgZyA9IDA7IGcgPCBnRWxlbWVudHMubGVuZ3RoOyBnKyspIHsKCQkJaWYgKGdFbGVtZW50cy5sZW5ndGggPiAxKSByZXQgKz0gJzxkaXYgdGl0bGU9IicgKyAoZ0VsZW1lbnRzW2ddLmtleSB8fCAiTWFpbiIpICsgJyIgc3R5bGU9InBhZGRpbmc6MjBweDtkaXNwbGF5Om5vbmU7Ij4nOwoJCQl2YXIgc0VsZW1lbnRzID0gdGhpcy5zcigpLmdyb3VwQnkoZ0VsZW1lbnRzW2ddLnZhbHVlcywgInNlY3Rpb24iKTsKCQkJaWYgKHNFbGVtZW50cy5sZW5ndGggPiAxKSByZXQgKz0gJzxkaXYgY2xhc3M9ImVhc3l1aS1hY2NvcmRpb24iIHN0eWxlPSJ3aWR0aDonICsgdFdpZHRoICsgJ3B4O2hlaWdodDonICsgLyp0SGVpZ2h0Ki8gIjEwMCUiICsgJ3B4OyI+JzsKCQkJZm9yICh2YXIgcyA9IDA7IHMgPCBzRWxlbWVudHMubGVuZ3RoOyBzKyspIHsKCQkJCXJldCArPSBgPGRpdiB0aXRsZT0iJHtzRWxlbWVudHNbc10ua2V5IHx8ICIifSIgZGF0YS1vcHRpb25zPSJpY29uQ2xzOidpY29uLW1vcmUnIiBzdHlsZT0icGFkZGluZzoxMHB4OyI+YDsKCQkJCWZvciAodmFyIGkgPSAwOyBpIDwgc0VsZW1lbnRzW3NdLnZhbHVlcy5sZW5ndGg7IGkrKykgewoJCQkJCXZhciBlID0gc0VsZW1lbnRzW3NdLnZhbHVlc1tpXTsKCQkJCQlpZiAoZS5pZ25vcmUpIGNvbnRpbnVlOwoJCQkJCWUudmFsdWUgPSBlLnZhbHVlIHx8IF9GckVNRC5oYXNoW2UubmFtZV0gfHwgKF9GckVNRC5hcGlTZXJ2ZXIgPyBfRnJFTUQuYXBpU2VydmVyLl9fY29uZmlnKCd0ZXN0XycgKyBlLm5hbWUsICcnKSA6ICcnKTsKCQkJCQlyZXQgKz0gYDxkaXYgaWQ9ImZFbGVtZW50XyR7ZS5uYW1lfSIgY2xhc3M9ImZpdGVtIiBzdHlsZT0iZGlzcGxheTogJHsoZS50eXBlPT0nd2luZG93JyB8fCBlLmhpZGRlbik/J25vbmUnOicnfSI+YDsKCQkJCQlpZiAoZS50b2dnbGUpIHsKCQkJCQkJcmV0ICs9IGA8YSBocmVmPSIjIiBjbGFzcz0iZWFzeXVpLWxpbmtidXR0b24iIGRhdGEtb3B0aW9ucz0nJHt0aGlzLmV2ZW50SGFuZGxlcnMoe3R5cGU6ICd0b2dnbGUnLCBmb3I6IGV9KX0scGxhaW46dHJ1ZSxpY29uQ2xzOiJpY29uLSR7ZS5pY29uIHx8ICdzZWFyY2gnfSInIHN0eWxlPSJ3aWR0aDoxMDBweDtoZWlnaHQ6MzBweCI+JHtlLnRpdGxlIHx8IHRoaXMuZW5nbGlzaChlLm5hbWUpfTwvYT5gOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXJldCArPSBgPGxhYmVsPiR7ZS50aXRsZSB8fCB0aGlzLmVuZ2xpc2goZS5uYW1lKX06PC9sYWJlbD5gOwoJCQkJCX0KCQkJCQlpZiAoZS50eXBlICYmIHRoaXNbZS50eXBlXSkgewoJCQkJCQlyZXQgKz0gdGhpc1tlLnR5cGVdKGUpOwoJCQkJCX0gZWxzZSBpZiAoZS5yZW5kZXIpIHsKCQkJCQkJcmV0ICs9IGUucmVuZGVyKCk7CgkJCQkJfQoJCQkJCXJldCArPSAnPC9kaXY+JzsKCQkJCX0KCQkJCXJldCArPSAnPC9kaXY+JzsKCQkJfQoJCQlpZiAoc0VsZW1lbnRzLmxlbmd0aCA+IDEpIHJldCArPSAnPC9kaXY+JzsKCQkJaWYgKGdFbGVtZW50cy5sZW5ndGggPiAxKSByZXQgKz0gIjwvZGl2PiI7CgkJfQoJCWlmIChnRWxlbWVudHMubGVuZ3RoID4gMSkgcmV0ICs9ICI8L2Rpdj4iOwoJCXJldHVybiByZXQ7Cgl9CgoJaW5mbyhtc2cpIHsKCQlpZiAoJC5tZXNzYWdlcikgewoJCQkkLm1lc3NhZ2VyLmFsZXJ0KHRoaXMudGl0bGUsIG1zZywgJ2luZm8nKTsKCQl9IGVsc2UgewoJCQl0aGlzLnNyKCkuU2hvd01lc3NhZ2UobXNnLCB0aGlzLnRpdGxlKTsKCQl9Cgl9CgoJZXJyb3IobXNnKSB7CgkJaWYgKCQubWVzc2FnZXIpIHsKCQkJJC5tZXNzYWdlci5hbGVydCh0aGlzLnRpdGxlLCBtc2csICdlcnJvcicpOwoJCX0gZWxzZSB7CgkJCXRoaXMuc3IoKS5TaG93TWVzc2FnZShtc2csIHRoaXMudGl0bGUpOwoJCX0KCX0KCglieU5hbWUobmFtZSkgewoJCXJldHVybiB0aGlzLmVsZW1lbnRzLmZpbmQoZSA9PiBlLm5hbWUgPT09IG5hbWUpOwoJfQoKCS8qKiBDb21wb25lbnRzOjpTdGFydCAqKi8KCUNvcmVDb21wb25lbnQgPSBjbGFzcyB7CgkJY29uc3RydWN0b3IocGFnZSwgZEZvcm0pIHsKCQkJdGhpcy5wYWdlID0gcGFnZTsKCQkJdGhpcy5kRm9ybSA9IGRGb3JtOwoJCX0KCgkJYnVzeShiQnVzeSkgewoJCQlyZXR1cm4gdGhpcy5kRm9ybS5idXN5KGJCdXN5KTsKCQl9CgoJCV9tZSh2KSB7CgkJCWxldCBtZU5hbWUgPSAodHlwZW9mKGNvbXBhbnkpICE9PSAndW5kZWZpbmVkJykgPyAoY29tcGFueS5sb2dnZWRJbklkZW50aXR5IHx8ICJtZSIpIDogIm1lIjsKCQkJaWYgKHYpIHsKCQkJCXdpbmRvd1ttZU5hbWVdID0gdjsKCQkJfQoKCQkJcmV0dXJuIHdpbmRvd1ttZU5hbWVdOwoJCX0KCgkJX2NhblZpZXcoKSB7CgkJCWlmICghdGhpcy5fbWUoKSkgewoJCQkJd2luZG93Ll9GckVNRC5zZXRVUkwoewoJCQkJCXBhZ2U6ICdsb2dpbicsCgkJCQkJX3JlZGlyZWN0OiB0aGlzLnBhZ2UuX2NvZGUsCgkJCQl9KTsKCQkJCXRocm93IGBfY2FuVmlldzogJHt0aGlzLnBhZ2UuX2NvZGV9IG5vdCBhbGxvd2VkIHdpdGhvdXQgbG9naW4hYDsKCQkJfQoJCX0KCgkJX25hbWUoKSB7CgkJCWlmICghdGhpcy5fbWUoKSkgcmV0dXJuICIiOwoJCQlyZXR1cm4gdGhpcy5fbWUoKS5uYW1lID8gdGhpcy5fbWUoKS5uYW1lKCkgOiB0aGlzLl9tZSgpLlRvU3RyaW5nOwoJCX0KCX0KCglJbmRleENvbXBvbmVudCA9IGNsYXNzIGV4dGVuZHMgdGhpcy5Db3JlQ29tcG9uZW50IHsKCQlhc3luYyBtYWluKCkgewoJCQl0aGlzLl9jYW5WaWV3KCk7CgoJCQl0aGlzLnBhZ2UuZGF0YSA9IHsKCQkJCWZvcm06IHRoaXMuZEZvcm0ucmVuZGVyKCdmcm1JbmRleCcsICJNYWluIFBhZ2UiLCBbewoJCQkJCW5hbWU6ICdXZWxjb21lJywKCQkJCQlyZXF1aXJlZDogdHJ1ZSwKCQkJCQl0eXBlOiAibGFiZWwiLAoJCQkJCXZhbHVlOiB0aGlzLl9uYW1lKCksCgkJCQl9XSwgW10pCgkJCX07CgkJfQoJfQoKCUxvZ2luQ29tcG9uZW50ID0gY2xhc3MgZXh0ZW5kcyB0aGlzLkNvcmVDb21wb25lbnQgewoJCWFzeW5jIF9hdXRoZW50aWNhdGUobykgewoJCQlyZXR1cm4gbnVsbDsKCQl9CgoJCWFzeW5jIF9sb2dnZWRJbigpIHt9CgoJCWFzeW5jIF9ub3RMb2dnZWRJbigpIHt9CgoJCWFzeW5jIG1haW4oKSB7CgkJCXRoaXMucGFnZS5kYXRhID0gewoJCQkJZm9ybTogdGhpcy5kRm9ybS5yZW5kZXIoJ2ZybUxvZ2luJywgIlVzZXIgQXV0aGVudGljYXRpb24iLCBbewoJCQkJCQluYW1lOiAnVXNlcm5hbWUnLAoJCQkJCQlyZXF1aXJlZDogdHJ1ZSwKCQkJCQkJdHlwZTogInN0cmluZyIKCQkJCQl9LAoJCQkJCXsKCQkJCQkJbmFtZTogJ1Bhc3N3b3JkJywKCQkJCQkJcmVxdWlyZWQ6IHRydWUsCgkJCQkJCXR5cGU6ICJwYXNzd29yZCIKCQkJCQl9CgkJCQldLCBbewoJCQkJCW5hbWU6ICdMb2dpbicsCgkJCQkJYXV0b1N1Ym1pdDogdHJ1ZSwKCQkJCQlvbmNsaWNrOiBhc3luYyBvID0+IHsKCQkJCQkJbGV0IHJldCA9IGF3YWl0IHRoaXMuX2F1dGhlbnRpY2F0ZShvKTsKCgkJCQkJCWlmIChyZXQpIHsKCQkJCQkJCXRoaXMuX21lKHJldCk7CgoJCQkJCQkJdHJ5IHsKCQkJCQkJCQlhd2FpdCB0aGlzLl9sb2dnZWRJbigpOwoJCQkJCQkJfSBjYXRjaCAoZXgpIHt9CgoJCQkJCQkJX0ZyRU1ELnNldFVSTCh7CgkJCQkJCQkJcGFnZTogX0ZyRU1ELmhhc2guX3JlZGlyZWN0IHx8ICJpbmRleCIKCQkJCQkJCX0pOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJdHJ5IHsKCQkJCQkJCQlhd2FpdCB0aGlzLl9ub3RMb2dnZWRJbigpOwoJCQkJCQkJfSBjYXRjaCAoZXgpIHt9CgoJCQkJCQkJdGhpcy5kRm9ybS5lcnJvcigiSW52YWxpZCB1c2VybmFtZSBvciBwYXNzd29yZCIpOwoJCQkJCQl9CgoJCQkJCQl0aGlzLmRGb3JtLmJ1c3koZmFsc2UpOwoJCQkJCX0KCQkJCX1dKQoJCQl9OwoJCX0KCX0KCglTdG9yZUNvbXBvbmVudCA9IGNsYXNzIGV4dGVuZHMgdGhpcy5Db3JlQ29tcG9uZW50IHsKCQlhc3luYyBtYWluKCkge30KCX0KCS8qKiBDb21wb25lbnRzOjpFbmQgKiovCn07",
	"storedMethod": null,
	"__keys": ["name"],
	"active": true,
	"enabled": true,
	"__trMap": []
}